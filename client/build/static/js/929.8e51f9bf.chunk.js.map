{"version":3,"file":"static/js/929.8e51f9bf.chunk.js","mappings":"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","sources":["modules/COMMON/components/Avatar/index.js","modules/COMMON/redux/actions.js","modules/COMMON/components/Dropdown/Dropdown.js","modules/Home/redux/actions.js","modules/COMMON/services/hooks/useHandleModal.js","modules/Home/index.js","modules/Home/components/Home.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Avatar = React.lazy(() => import('./Avatar'));\r\n\r\nexport default Avatar;\r\n","import axios from \"axios\";\r\n\r\nexport const setStateUser = (state_obj) => ({\r\n    type: `SET_STATE_USER`,\r\n    payload: state_obj\r\n})\r\n\r\nexport const setStateCommon = (state_obj) => ({\r\n    type: `SET_STATE_COMMON`,\r\n    payload: state_obj\r\n})\r\n\r\nexport const resetState = () => ({\r\n    type: 'RESET_STATE'\r\n});\r\n\r\nexport const fetchCommon = (item) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'FETCH_COMMON_START', payload: { item: item } });\r\n\r\n        try {\r\n            const main = await axios.get(`/main/${item}`);\r\n\r\n            if (item === 'projections') {\r\n                console.log(main.data[0].filter(d => d.week === 4 && d.player_id === '8135'))\r\n            }\r\n            const data = item !== 'projections' ? main.data[0] : main.data[0].reduce((result, item) => {\r\n                const { week, player_id, injury_status, ...stats } = item;\r\n\r\n                if (!result[week]) {\r\n                    result[week] = {};\r\n                }\r\n\r\n                result[week][player_id] = {\r\n                    ...stats,\r\n                    injury_status: injury_status\r\n                };\r\n                return result;\r\n            }, {})\r\n\r\n            dispatch({\r\n                type: 'FETCH_COMMON_SUCCESS', payload: {\r\n                    item: item,\r\n                    data: data\r\n                }\r\n            });\r\n\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_COMMON_FAILURE', payload: error.message });\r\n\r\n            console.error(error.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchUser = (username) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'FETCH_USER_START' });\r\n\r\n        try {\r\n            const user = await axios.get('/user/create', {\r\n                params: { username: username }\r\n            });\r\n\r\n            console.log(user.data)\r\n\r\n            if (!user.data?.error) {\r\n                dispatch({ type: 'FETCH_USER_SUCCESS', payload: user.data.user });\r\n\r\n                dispatch({ type: 'SET_STATE_COMMON', payload: { state: user.data.state } });\r\n\r\n                const week_lc = user.data.state.season_type === 'regular'\r\n                    ? user.data.state.leg\r\n                    : user.data.state.season_type.includes('post')\r\n                        ? 19\r\n                        : 1\r\n\r\n                dispatch({ type: 'SET_STATE_LINEUPS', payload: { week: week_lc } });\r\n            } else {\r\n                dispatch({ type: 'FETCH_USER_FAILURE', payload: user.data });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_USER_FAILURE', payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchLeagues = (user_id) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'FETCH_LEAGUES_START' })\r\n\r\n        try {\r\n            const response = await fetch(`/league/find?user_id=${encodeURIComponent(user_id)}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const reader = response.body.getReader();\r\n\r\n                let leagues = ''\r\n\r\n                while (true) {\r\n                    const { done, value } = await reader.read();\r\n\r\n                    if (done) break;\r\n\r\n\r\n                    leagues += new TextDecoder().decode(value);\r\n\r\n                    const matches = leagues.match(/\"league_id\":/g);\r\n\r\n                    let count = 0;\r\n\r\n                    if (matches && matches.length > 0) {\r\n                        count = matches.length\r\n                    }\r\n\r\n                    dispatch({ type: 'SET_STATE_PROGRESS', payload: { progress: count } })\r\n                }\r\n\r\n                let parsed_leagues;\r\n                try {\r\n                    parsed_leagues = JSON.parse(leagues)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                console.log(parsed_leagues)\r\n\r\n                dispatch({ type: 'FETCH_LEAGUES_SUCCESS', payload: parsed_leagues.flat() });\r\n\r\n            } else {\r\n                dispatch({ type: 'FETCH_LEAGUES_FAILURE', payload: 'Failed to fetch user leagues' });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_LEAGUES_FAILURE', payload: error.message });\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchLmPlayerShares = (user_id) => async (dispatch) => {\r\n    dispatch({ type: 'SET_STATE_USER', payload: { isLoadingPS: true } });\r\n\r\n    try {\r\n        const lmplayershares = await axios.get('/user/lmplayershares', {\r\n            params: { user_id: user_id }\r\n        });\r\n\r\n        console.log({ lmplayershares: lmplayershares.data.sort((a, b) => a.username > b.username ? 1 : -1) })\r\n\r\n        dispatch({ type: 'SET_STATE_USER', payload: { lmplayershares: lmplayershares.data, isLoadingPS: false } });\r\n    } catch (err) {\r\n        dispatch({ type: 'SET_STATE_USER', payload: { isLoadingPS: false, errorPS: err.message } });\r\n    }\r\n}\r\n\r\nexport const fetchPlayerValues = (player_ids) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const pv = await axios.post('/main/playervalues', {\r\n                player_ids: player_ids\r\n            })\r\n\r\n            const values_dict = {};\r\n\r\n            pv.data\r\n                .forEach(value_obj => {\r\n                    if (!values_dict[value_obj.date]) {\r\n                        values_dict[value_obj.date] = {};\r\n                    }\r\n\r\n                    if (!values_dict[value_obj.date][value_obj.player_id]) {\r\n                        values_dict[value_obj.date][value_obj.player_id] = {}\r\n                    }\r\n\r\n\r\n                    values_dict[value_obj.date][value_obj.player_id][value_obj.type] = value_obj.value\r\n                })\r\n\r\n            dispatch({ type: 'SET_STATE_COMMON', payload: { values: values_dict } })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport Avatar from \"../Avatar\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Dropdown = React.forwardRef(({ dropdownOptions, visibleState, setState }, ref) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return <div className='dropdown_wrapper'>\r\n        <p className='dropdown_header'>Top League Counts</p>\r\n        <ol\r\n            onBlur={() => dispatch(setState({ [visibleState]: false }))}\r\n            className=\"dropdown\"\r\n            ref={ref}\r\n        >\r\n            {dropdownOptions\r\n                .sort((a, b) => parseInt(b.leaguesCount) - parseInt(a.leaguesCount))\r\n                .map((option, index) =>\r\n                    <li key={`${option.username}_${index}`}>\r\n                        <button>\r\n                            {\r\n                                <>\r\n                                    <p>\r\n                                        <span className='leagues_count'>\r\n                                            {index + 1}\r\n                                        </span>\r\n                                        <span className='username'>\r\n                                            {\r\n                                                <Avatar\r\n                                                    avatar_id={option.avatar}\r\n                                                    alt={'user avatar'}\r\n                                                    type={'user'}\r\n                                                />\r\n\r\n                                            }\r\n                                            {option.username}\r\n                                        </span>\r\n                                        <span className='leagues_count'>\r\n                                            {option.leaguesCount}\r\n                                        </span>\r\n                                    </p>\r\n\r\n                                </>\r\n                            }\r\n                        </button>\r\n                    </li>\r\n                )}\r\n        </ol>\r\n    </div >\r\n\r\n})\r\n\r\nexport default Dropdown;","import axios from 'axios';\r\n\r\nexport const setState = (state_obj) => ({\r\n    type: `SET_STATE_HOME`,\r\n    payload: state_obj\r\n})\r\n\r\nexport const fetchMostLeagues = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const users = await axios.get('user/findmostleagues')\r\n\r\n            dispatch({ type: 'SET_STATE_HOME', payload: { dropdownOptions: users.data } })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n","import { useEffect } from \"react\";\r\n\r\nconst useHandleModal = (ref, action) => {\r\n    useEffect(() => {\r\n        const handleModal = (event) => {\r\n\r\n            if (!ref.current || !ref.current.contains(event.target)) {\r\n\r\n                action();\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleModal)\r\n        document.addEventListener('touchstart', handleModal)\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleModal);\r\n            document.removeEventListener('touchstart', handleModal);\r\n        };\r\n    }, [])\r\n}\r\n\r\nexport default useHandleModal;","import Home from \"./components/Home\";\r\n\r\n\r\n\r\n\r\nexport default Home;","import { Link } from 'react-router-dom';\r\nimport { useEffect, useRef } from 'react';\r\nimport sleeperLogo from '../../../images/sleeper_icon.png';\r\nimport Dropdown from '../../COMMON/components/Dropdown/Dropdown';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setState, fetchMostLeagues } from '../redux/actions';\r\nimport { resetState } from '../../COMMON/redux/actions';\r\nimport useHandleModal from '../../COMMON/services/hooks/useHandleModal';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { username_searched, leagueId, tab, dropdownVisible, dropdownOptions } = useSelector(state => state.home);\r\n    const modalRef = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(resetState())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchMostLeagues())\r\n    }, [])\r\n\r\n\r\n    useHandleModal(modalRef, () => dispatch(setState({ dropdownVisible: false })));\r\n\r\n    return <div id='homepage'>\r\n        <div className='picktracker'>\r\n            <p className=\"home click\" onClick={() => dispatch(setState({ tab: tab === 'username' ? 'picktracker' : 'username' }))}>\r\n                picktracker\r\n            </p>\r\n            {\r\n                tab === 'picktracker' ?\r\n                    <>\r\n                        <input\r\n                            onChange={(e) => dispatch(setState({ leagueId: e.target.value }))}\r\n                            className='picktracker'\r\n                            placeholder='League ID'\r\n                        />\r\n                        <Link className='home' to={`/picktracker/${leagueId}`}>\r\n\r\n                            Submit\r\n                        </Link>\r\n                    </>\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n\r\n        <div className='home_wrapper'>\r\n            <img\r\n                alt='sleeper_logo'\r\n                className='home'\r\n                src={sleeperLogo}\r\n            />\r\n            <div className='home_title'>\r\n                <strong className='home'>\r\n                    Sleepier\r\n                </strong>\r\n                <div className='user_input'>\r\n\r\n                    <input\r\n                        className='home'\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        onChange={(e) => dispatch(setState({ username_searched: e.target.value }))}\r\n                    />\r\n\r\n                    <i className=\"fa-solid fa-ranking-star\" onClick={() => dispatch(setState({ dropdownVisible: true }))}></i>\r\n                </div>\r\n                <Link className='link click' to={(username_searched === '') ? '/' : `/${username_searched}/players`}>\r\n                    Submit\r\n                </Link>\r\n            </div>\r\n            {\r\n                dropdownVisible && dropdownOptions.length > 0 ?\r\n                    <Dropdown\r\n                        dropdownOptions={dropdownOptions}\r\n                        ref={modalRef}\r\n                        visibleState={dropdownVisible}\r\n                        setState={setState}\r\n                    />\r\n                    :\r\n                    null\r\n            }\r\n\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Home;"],"names":["React","setStateUser","state_obj","type","payload","resetState","fetchCommon","item","async","dispatch","main","axios","get","concat","console","log","data","filter","d","week","player_id","reduce","result","injury_status","stats","error","message","fetchUser","username","_user$data","user","params","state","season_type","leg","includes","fetchLeagues","user_id","response","fetch","encodeURIComponent","method","headers","Accept","ok","reader","body","getReader","parsed_leagues","leagues","done","value","read","TextDecoder","decode","matches","match","count","length","progress","JSON","parse","flat","fetchLmPlayerShares","isLoadingPS","lmplayershares","sort","a","b","err","errorPS","fetchPlayerValues","player_ids","pv","post","values_dict","forEach","value_obj","date","values","Dropdown","_ref","ref","dropdownOptions","visibleState","setState","useDispatch","_jsxs","className","children","_jsx","onBlur","parseInt","leaguesCount","map","option","index","_Fragment","Avatar","avatar_id","avatar","alt","useHandleModal","action","useEffect","handleModal","event","current","contains","target","document","addEventListener","removeEventListener","Home","username_searched","leagueId","tab","dropdownVisible","useSelector","home","modalRef","useRef","id","onClick","onChange","e","placeholder","Link","to","src","sleeperLogo"],"sourceRoot":""}