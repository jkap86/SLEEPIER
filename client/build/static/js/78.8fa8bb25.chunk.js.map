{"version":3,"file":"static/js/78.8fa8bb25.chunk.js","mappings":"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","sources":["modules/COMMON/components/Avatar/index.js","modules/COMMON/components/Roster/Roster.js","modules/COMMON/components/Roster/index.js","modules/COMMON/components/Search/Search.js","modules/COMMON/components/Search/index.js","modules/COMMON/components/TableMain/TableMain.js","modules/COMMON/components/TableMain/index.js","modules/COMMON/redux/actions.js","modules/COMMON/services/helpers/getTrendColor.js","modules/COMMON/services/hooks/useFetchPlayerValues.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Avatar = React.lazy(() => import('./Avatar'));\r\n\r\nexport default Avatar;\r\n","import TableMain from \"../TableMain\";\r\nimport { useState, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useFetchPlayerValues from \"../../services/hooks/useFetchPlayerValues\";\r\nimport { getTrendColor } from \"../../services/helpers/getTrendColor\";\r\n\r\nconst Roster = ({\r\n    roster,\r\n    league,\r\n    trade_value_date,\r\n    current_value_date,\r\n    type,\r\n    previous,\r\n    players_points,\r\n    players_projections,\r\n    total_points\r\n}) => {\r\n    const [filter, setFilter] = useState('All');\r\n    const [ppgType, setPpgType] = useState('Total')\r\n    const { state, allplayers, values, projections } = useSelector(state => state.common);\r\n    const { week } = useSelector(state => state.lineups);\r\n\r\n\r\n    const getPlayerScore = (stats_array, scoring_settings, total = false) => {\r\n\r\n        let total_breakdown = {};\r\n\r\n        stats_array?.map(stats_game => {\r\n            Object.keys(stats_game?.stats || {})\r\n                .filter(x => Object.keys(scoring_settings).includes(x))\r\n                .map(key => {\r\n                    if (!total_breakdown[key]) {\r\n                        total_breakdown[key] = {\r\n                            stats: 0,\r\n                            points: 0\r\n                        }\r\n                    }\r\n                    total_breakdown[key] = {\r\n                        stats: total_breakdown[key].stats + stats_game.stats[key],\r\n                        points: total_breakdown[key].points + (stats_game.stats[key] * scoring_settings[key])\r\n                    }\r\n                })\r\n        })\r\n\r\n        return total\r\n            ? Object.keys(total_breakdown).reduce((acc, cur) => acc + total_breakdown[cur].points, 0)\r\n            : total_breakdown;\r\n    }\r\n\r\n    const matchup_info = Object.keys(league)\r\n        .filter(key => key.startsWith('matchups_'))\r\n        .length > 0\r\n\r\n    const player_ids = matchup_info ? [] : roster?.players || [];\r\n\r\n    useFetchPlayerValues({ player_ids })\r\n\r\n    const headers = [\r\n        [\r\n            {\r\n                text: <select onChange={(e) => setFilter(e.target.value)}>\r\n                    <option>All</option>\r\n                    <option>QB</option>\r\n                    <option>RB</option>\r\n                    <option>WR</option>\r\n                    <option>TE</option>\r\n                    <option>Picks</option>\r\n                </select>,\r\n                colSpan: 4,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: previous ? total_points : <p className=\"username\">{roster.username}</p>,\r\n                colSpan: 15,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: previous\r\n                    ? null\r\n                    : matchup_info\r\n                        ? < select onChange={(e) => setPpgType(e.target.value)}>\r\n                            <option>Total</option>\r\n                            <option>In Lineup</option>\r\n                            <option>On Bench</option>\r\n                        </select>\r\n                        : 'KTC',\r\n                colSpan: 8,\r\n                className: 'half'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                text: 'Slot',\r\n                colSpan: 4,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: 'Player',\r\n                colSpan: 15,\r\n                className: 'half'\r\n\r\n            },\r\n            {\r\n                text: <div className=\"flex\">\r\n                    {\r\n                        previous\r\n                            ? <p>Actual</p>\r\n                            : matchup_info\r\n                                ? <p>PPG</p>\r\n                                : <p>\r\n                                    {\r\n                                        new Date(trade_value_date).getMonth() + 1 + '/' + new Date(trade_value_date).getDate()\r\n                                    }\r\n                                </p>\r\n                    }\r\n                    {\r\n                        previous\r\n                            ? <em>Proj</em>\r\n                            : matchup_info\r\n                                ? <em>#</em>\r\n                                : <em>Trend</em>\r\n\r\n                    }\r\n\r\n                </div>,\r\n                colSpan: 8,\r\n                className: 'half left end'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const position_abbrev = {\r\n        'QB': 'QB',\r\n        'RB': 'RB',\r\n        'WR': 'WR',\r\n        'TE': 'TE',\r\n        'SUPER_FLEX': 'SF',\r\n        'FLEX': 'WRT',\r\n        'WRRB_FLEX': 'W R',\r\n        'WRRB_WRT': 'W R',\r\n        'REC_FLEX': 'W T'\r\n    }\r\n\r\n    const body = () => {\r\n        let players;\r\n\r\n        if (filter === 'Picks') {\r\n            return roster.draft_picks\r\n                ?.sort((a, b) => a.season - b.season || a.round - b.round || a.order - b.order)\r\n                ?.map(pick => {\r\n                    return {\r\n                        id: `${pick.season}_${pick.round}_${pick.original_user.user_id}`,\r\n                        list: [\r\n                            {\r\n                                text: <span>&nbsp;&nbsp;{`${pick.season} Round ${pick.round}${(pick.order && pick.season === parseInt(state.league_season)) ? `.${pick.order.toLocaleString(\"en-US\", { minimumIntegerDigits: 2 })}` : pick.original_user.user_id === roster?.user_id ? '' : `(${pick.original_user?.username || 'Orphan'})`}`.toString()}</span>,\r\n                                colSpan: 27,\r\n                                className: 'left'\r\n                            }\r\n                        ]\r\n\r\n                    }\r\n                })\r\n        } else {\r\n\r\n\r\n            return (filter === 'All' ? [...roster.starters, ...roster.players.filter(player_id => !roster.starters.includes(player_id))] : roster.players)?.map((player_id, index) => {\r\n\r\n\r\n\r\n                if (\r\n                    filter === 'All'\r\n                    || allplayers[player_id]?.position === filter\r\n                ) {\r\n                    let games;\r\n                    let points;\r\n                    if (ppgType === 'On Bench') {\r\n                        games = player_scoring_dict[player_id]?.games_bench;\r\n                        points = player_scoring_dict[player_id]?.points_bench;\r\n                    } else if (ppgType === 'In Lineup') {\r\n                        games = player_scoring_dict[player_id]?.games_starter;\r\n                        points = player_scoring_dict[player_id]?.points_starter;\r\n                    } else {\r\n                        games = player_scoring_dict[player_id]?.games_total;\r\n                        points = player_scoring_dict[player_id]?.points_total;\r\n                    }\r\n                    const trend = (player_scoring_dict[player_id]?.current || 0) - (player_scoring_dict[player_id]?.trade || 0)\r\n\r\n                    return {\r\n                        id: player_id,\r\n                        list: [\r\n                            {\r\n                                text: filter === 'All' ? (league.roster_positions && position_abbrev[league.roster_positions[index]]) || (league.roster_positions && league.roster_positions[index]) || 'BN' : allplayers[player_id]?.position,\r\n                                colSpan: 4\r\n                            },\r\n\r\n                            {\r\n                                text: allplayers[player_id]?.full_name,\r\n                                colSpan: 15,\r\n                                className: 'left',\r\n                                image: {\r\n                                    src: player_id,\r\n                                    alt: 'player headshot',\r\n                                    type: 'player'\r\n                                }\r\n                            },\r\n                            {\r\n                                text: previous\r\n                                    ? <div className=\"flex\">\r\n                                        <span>\r\n                                            {players_points[player_id]?.toFixed(1) || '-'}\r\n                                        </span>\r\n                                        <em>\r\n                                            {getPlayerScore([projections[week][player_id]], league.scoring_settings, true)?.toFixed(1) || '-'}\r\n                                        </em>\r\n                                    </div>\r\n                                    : matchup_info\r\n                                        ? <div className=\"flex\">\r\n                                            <span>{((games > 0 && (points / games).toFixed(1)) || '-')}</span>\r\n                                            <em>{games?.toString()}</em>\r\n                                        </div>\r\n                                        : <div className=\"flex\">\r\n                                            <span>{player_scoring_dict[player_id].trade || '0'}</span>\r\n\r\n                                            <em>\r\n                                                <p className=\"stat\" style={getTrendColor(trend, 1.5)}>\r\n                                                    {trend.toString()}\r\n                                                </p>\r\n                                            </em>\r\n                                        </div>,\r\n                                colSpan: 8\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const player_scoring_dict = useMemo(() => {\r\n        const player_scoring_dict = {};\r\n\r\n        roster.players\r\n            ?.forEach(player_id => {\r\n                if (matchup_info) {\r\n                    const total_points = Object.keys(league)\r\n                        .filter(key => key.startsWith('matchups_') && parseInt(key.split('_')[1]) < state.week)\r\n                        .reduce(\r\n                            (acc, cur) => {\r\n                                const matchup = league[cur]?.find(m => m.roster_id === roster.roster_id)\r\n                                return {\r\n                                    games_total: acc.games_total + (matchup?.players?.includes(player_id) ? 1 : 0),\r\n                                    points_total: acc.points_total + (matchup?.players_points?.[player_id] || 0),\r\n                                    games_starter: acc.games_starter + (matchup?.starters?.includes(player_id) ? 1 : 0),\r\n                                    points_starter: acc.points_starter + ((matchup?.starters?.includes(player_id) && matchup?.players_points?.[player_id]) || 0),\r\n                                    games_bench: acc.games_bench + ((matchup?.players?.includes(player_id) && !matchup?.starters?.includes(player_id)) ? 1 : 0),\r\n                                    points_bench: acc.points_bench + ((matchup?.players?.includes(player_id) && !matchup?.starters?.includes(player_id) && matchup?.players_points?.[player_id]) || 0),\r\n                                }\r\n                            }, {\r\n                            games_total: 0,\r\n                            points_total: 0,\r\n                            games_starter: 0,\r\n                            points_starter: 0,\r\n                            games_bench: 0,\r\n                            points_bench: 0\r\n                        }\r\n                        )\r\n\r\n                    player_scoring_dict[player_id] = total_points\r\n                } else {\r\n                    const value_type = league.roster_positions\r\n                        ?.filter(p => p === 'QB' || p === 'SUPER_FLEX')\r\n                        ?.length === 1\r\n                        ? 'oneqb'\r\n                        : 'sf'\r\n\r\n                    player_scoring_dict[player_id] = {\r\n                        trade: values[trade_value_date][player_id]?.[value_type],\r\n                        current: values[current_value_date][player_id]?.[value_type]\r\n                    }\r\n                }\r\n\r\n            })\r\n\r\n        return player_scoring_dict\r\n    }, [roster, league, state.week])\r\n\r\n    return <>\r\n        <TableMain\r\n            type={type || 'secondary half'}\r\n            headers={headers}\r\n            body={body()}\r\n\r\n        />\r\n    </>\r\n}\r\n\r\nexport default Roster;","import Roster from \"./Roster\";\r\n\r\nexport default Roster;","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Avatar from \"../Avatar\";\r\nimport './Search.css';\r\n\r\n\r\nconst Search = ({ id, placeholder, list, isLoading, searched, setSearched }) => {\r\n\r\n    const [dropdownVisible, setDropdownVisible] = useState(false)\r\n    const [dropdownOptions, setDropdownOptions] = useState([])\r\n    const [reverse, setReverse] = useState(false);\r\n\r\n\r\n    const getOptions = useCallback((s) => {\r\n        const all_options = list\r\n        const options = all_options.filter(x =>\r\n            x.text?.trim().toLowerCase()\r\n                .replace(/[^a-z0-9]/g, \"\")\r\n                .includes(s.replace(/[^a-z0-9]/g, \"\").trim().toLowerCase()))\r\n            .sort(\r\n                (a, b) => b.text\r\n                    ?.trim()\r\n                    .toLowerCase()\r\n                    .replace(/[^a-z0-9]/g, \"\")\r\n                    .startsWith(\r\n                        s\r\n                            .replace(/[^a-z0-9]/g, \"\")\r\n                            .trim()\r\n                            .toLowerCase()\r\n                    ) ? 1 : -1\r\n            )\r\n\r\n\r\n        return options;\r\n    }, [list])\r\n\r\n\r\n    const handleSearch = (input) => {\r\n        let s = input\r\n        let options;\r\n        let visible;\r\n\r\n        if (s === '') {\r\n            options = [];\r\n            visible = false\r\n            setSearched(s)\r\n        } else if (list.map(x => x.text?.trim().toLowerCase()).includes(s.trim().toLowerCase())) {\r\n            const option = list.find(x => x.text?.trim().toLowerCase() === s.trim().toLowerCase())\r\n            options = []\r\n            visible = false\r\n            setSearched(option)\r\n        } else {\r\n            options = getOptions(s)\r\n            visible = true\r\n            setSearched(s)\r\n        }\r\n        setDropdownVisible(visible)\r\n        setDropdownOptions(options)\r\n    }\r\n\r\n    const handleMouseEnter = (value) => {\r\n        setTimeout(() => {\r\n            setReverse(value);\r\n        }, 2000)\r\n\r\n    }\r\n\r\n    return <>\r\n        <div\r\n            onBlur={() => setDropdownVisible(false)}\r\n            className={'search_wrapper'}\r\n        >\r\n            {\r\n                searched?.image ?\r\n                    <Avatar\r\n                        avatar_id={searched.image.src}\r\n                        alt={searched.image.alt}\r\n                        type={searched.image.type}\r\n                    />\r\n                    :\r\n                    null\r\n            }\r\n            <input\r\n                className={'search'}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n                onFocus={() => setDropdownVisible(true)}\r\n\r\n                id={id === undefined ? null : id}\r\n                placeholder={\"Search...\"}\r\n                type=\"text\"\r\n                value={searched?.text || searched}\r\n                autoComplete={'off'}\r\n                disabled={isLoading}\r\n            />\r\n            {\r\n                searched === '' || !dropdownVisible && (searched !== '' && dropdownVisible) ?\r\n                    <button\r\n                        onClick={() => handleSearch(' ')}\r\n                        className={'input click'}\r\n                    >\r\n                        &#9660;\r\n                    </button>\r\n                    :\r\n                    <button\r\n                        type=\"reset\"\r\n                        onClick={() => handleSearch('')}\r\n                        className={'input click'}\r\n                    >\r\n                        X\r\n                    </button>\r\n            }\r\n            {\r\n                dropdownVisible && dropdownOptions.length > 0 && !isLoading\r\n                    ? <ol\r\n                        onBlur={() => setDropdownVisible(false)}\r\n                        className=\"dropdown\"\r\n                    >\r\n                        {dropdownOptions\r\n                            .map((option, index) =>\r\n                                <li key={`${option.text}_${index}`}>\r\n                                    <button\r\n                                        className={\"click \" + (`${option.text}_${index}` === reverse ? 'reverse' : '')}\r\n                                        onMouseEnter={() => handleMouseEnter(`${option.text}_${index}`)}\r\n                                        onMouseLeave={() => setReverse(false)}\r\n                                        onMouseDown={() => setSearched(option)}\r\n                                    >\r\n                                        {\r\n                                            option.image ?\r\n                                                <p>\r\n                                                    {\r\n                                                        <Avatar\r\n                                                            avatar_id={option.image.src}\r\n                                                            alt={option.image.alt}\r\n                                                            type={option.image.type}\r\n                                                        />\r\n                                                    }\r\n                                                    <span>{option.text}</span>\r\n                                                </p>\r\n                                                :\r\n                                                option.text\r\n                                        }\r\n                                    </button>\r\n                                </li>\r\n                            )}\r\n                    </ol>\r\n                    :\r\n                    null\r\n\r\n            }\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Search;","import Search from './Search';\r\n\r\nexport default Search;","import './TableMain.css';\r\nimport Avatar from '../Avatar';\r\nimport { useEffect, useRef } from 'react';\r\nimport Search from '../Search';\r\n\r\nconst TableMain = ({\r\n    id,\r\n    type,\r\n    headers,\r\n    body,\r\n    page,\r\n    setPage,\r\n    itemActive,\r\n    setItemActive,\r\n    caption,\r\n    searched,\r\n    setSearched,\r\n    options1,\r\n    options2,\r\n    partial,\r\n    loadMore\r\n}) => {\r\n    const pageRef = useRef(null)\r\n    const itemActiveRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        if (pageRef.current !== null) {\r\n            pageRef.current.focus()\r\n            pageRef.current.scrollIntoView({\r\n                behavior: 'smooth',\r\n                inline: 'center'\r\n            })\r\n        }\r\n\r\n    }, [pageRef, page])\r\n\r\n\r\n    useEffect(() => {\r\n        if (itemActiveRef.current !== null && !type.includes('half')) {\r\n            itemActiveRef.current.focus()\r\n            itemActiveRef.current.scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'start'\r\n            })\r\n        }\r\n\r\n    }, [itemActiveRef, itemActive])\r\n\r\n    useEffect(() => {\r\n        if (page && page !== 1 && body && !body\r\n            ?.filter(x => x)\r\n            ?.slice(Math.max(((page || 1) - 1) * 25, 0), (((page || 1) - 1) * 25) + 25)\r\n            ?.length > 0\r\n        ) {\r\n            setPage(1)\r\n        }\r\n\r\n    }, [body, page])\r\n\r\n    return <>\r\n        {\r\n            setSearched ?\r\n\r\n                <div className='search_filter_wrapper'>\r\n                    <div>\r\n                        {\r\n                            options1?.map(option => option)\r\n                        }\r\n                    </div>\r\n                    <Search\r\n                        id={id}\r\n                        placeholder={`Search ${id}`}\r\n                        list={body\r\n                            ?.filter((b, index) => b.search?.text !== 'orphan' || !body.slice(0, index).find(x => x.search?.text === 'orphan'))\r\n                            ?.map(b => {\r\n                                return {\r\n                                    ...b.search,\r\n                                    id: b.id\r\n                                }\r\n                            })}\r\n                        searched={searched}\r\n                        setSearched={setSearched}\r\n                    />\r\n                    <div>\r\n                        {\r\n                            options2?.map(option => option)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                :\r\n                null\r\n        }\r\n        {\r\n\r\n            page ?\r\n                <div className=\"page_numbers_wrapper\" >\r\n                    <>\r\n                        {\r\n                            (Math.ceil(body?.length / 25) <= 1) ? null :\r\n                                <ol className=\"page_numbers\">\r\n                                    {Array.from(Array(Math.ceil((body?.length / 25) || 0)).keys()).map(page_number =>\r\n                                        <li\r\n                                            className={page === page_number + 1 ? 'active click' : 'click'}\r\n                                            key={page_number + 1}\r\n                                            onClick={() => setPage(page_number + 1)}\r\n                                            ref={page === page_number + 1 ? pageRef : null}\r\n                                        >\r\n                                            {page_number + 1}\r\n                                        </li>\r\n                                    )}\r\n                                    {\r\n                                        partial ?\r\n                                            <li\r\n                                                className='click'\r\n                                                onClick={loadMore}\r\n                                            >\r\n                                                ...\r\n                                            </li>\r\n                                            : null\r\n                                    }\r\n                                </ol>\r\n                        }\r\n                    </>\r\n                </div>\r\n                : null\r\n        }\r\n\r\n\r\n        <table className={type} id={id} >\r\n            {\r\n                caption ?\r\n                    <caption>\r\n                        {caption}\r\n                    </caption>\r\n                    : null\r\n            }\r\n            <thead>\r\n                {\r\n                    headers?.map((header, index) =>\r\n                        <tr key={index}>\r\n                            {\r\n                                header.filter(x => x).map((key, index) =>\r\n                                    <th\r\n                                        key={index}\r\n                                        colSpan={key?.colSpan}\r\n                                        rowSpan={key?.rowSpan}\r\n                                        className={key?.className}\r\n                                        onClick={key?.onClick}\r\n                                    >\r\n                                        {\r\n                                            key?.text\r\n                                        }\r\n                                    </th>\r\n                                )\r\n                            }\r\n                        </tr>\r\n                    )\r\n                }\r\n            </thead>\r\n            {\r\n                body?.length > 0 && page > 1\r\n                    ? <tbody>\r\n                        <tr\r\n                            className={'click'}\r\n                            onClick={() => setPage(page - 1)}\r\n                        >\r\n                            <td colSpan={headers[0].reduce((acc, cur) => acc + (cur.colSpan || 0), 0)}>PREV PAGE</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    : null\r\n\r\n\r\n            }\r\n            {\r\n                body?.length > 0 ?\r\n                    <tbody\r\n                    >\r\n                        {\r\n                            body\r\n                                ?.filter(x => x)\r\n                                ?.slice(Math.max(((page || 1) - 1) * 25, 0), (((page || 1) - 1) * 25) + 25)\r\n                                ?.map((item, index) =>\r\n\r\n                                    <tr\r\n                                        key={index}\r\n                                        className={itemActive === item.id ? 'active_wrapper' : ''}\r\n                                    >\r\n                                        <td\r\n                                            colSpan={item.list?.reduce((acc, cur) => acc + (cur.colSpan || 0), 0)}\r\n                                        >\r\n                                            <table className={`body ${itemActive === item.id ? 'active' : ''}`}>\r\n                                                <tbody>\r\n                                                    <tr\r\n                                                        className={`click ${itemActive === item.id ? 'active' : ''}`}\r\n                                                        ref={(itemActive === item.id && !type?.split(' ')?.includes('lineup')) ? itemActiveRef : null}\r\n                                                        onClick={setItemActive ? () => itemActive === item.id ? setItemActive('') : setItemActive(item.id) : null}\r\n                                                    >\r\n                                                        {\r\n                                                            item.list\r\n                                                                ?.filter(x => x.text)\r\n                                                                ?.map((key, index) =>\r\n                                                                    <td\r\n                                                                        key={index}\r\n                                                                        colSpan={key.colSpan}\r\n                                                                        className={key.className}\r\n                                                                    >\r\n                                                                        {\r\n                                                                            key.image ?\r\n                                                                                <p>\r\n                                                                                    {\r\n                                                                                        <Avatar\r\n                                                                                            avatar_id={key.image.src}\r\n                                                                                            alt={key.image.alt}\r\n                                                                                            type={key.image.type}\r\n                                                                                        />\r\n                                                                                    }\r\n                                                                                    <span>{key.text}</span>\r\n                                                                                </p>\r\n                                                                                :\r\n                                                                                key.text\r\n                                                                        }\r\n                                                                    </td>\r\n                                                                )\r\n                                                        }\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        (itemActive !== item.id || !item.secondary_table) ? null :\r\n                                                            <tr className={`${type} click ${itemActive === item.id ? 'active2' : ''}`}>\r\n                                                                <td colSpan={item.list.reduce((acc, cur) => acc + (cur.colSpan || 0), 0)}>\r\n                                                                    {item.secondary_table}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                )\r\n\r\n                        }\r\n                    </tbody>\r\n                    :\r\n                    <tbody>\r\n                        <tr>\r\n                            <td\r\n                                colSpan={headers[0]?.reduce((acc, cur) => acc + (cur?.colSpan || 0), 0)}\r\n                            >\r\n                                NO DATA\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n            }\r\n            {\r\n                body\r\n                    ?.filter(x => x)\r\n                    ?.slice(Math.max(((page || 1) - 1) * 25, 0), (((page || 1) - 1) * 25) + 25)\r\n                    ?.length > 0\r\n\r\n                    && ((((page - 1) * 25) + 25) < body?.length || partial) ?\r\n                    <tbody>\r\n                        <tr\r\n                            className={'click'}\r\n                            onClick={(((page - 1) * 25) + 25) < body?.length ? () => setPage(page + 1) : loadMore}\r\n                        >\r\n                            <td colSpan={headers[0].reduce((acc, cur) => acc + (cur.colSpan || 0), 0)}>NEXT PAGE</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    :\r\n                    null\r\n            }\r\n        </table>\r\n    </>\r\n}\r\n\r\nexport default TableMain;","import TableMain from './TableMain';\r\n\r\nexport default TableMain;","import axios from \"axios\";\r\n\r\nexport const setStateUser = (state_obj) => ({\r\n    type: `SET_STATE_USER`,\r\n    payload: state_obj\r\n})\r\n\r\nexport const setStateCommon = (state_obj) => ({\r\n    type: `SET_STATE_COMMON`,\r\n    payload: state_obj\r\n})\r\n\r\nexport const resetState = () => ({\r\n    type: 'RESET_STATE'\r\n});\r\n\r\nexport const fetchCommon = (item) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'FETCH_COMMON_START', payload: { item: item } });\r\n\r\n        try {\r\n            const main = await axios.get(`/main/${item}`);\r\n\r\n            if (item === 'projections') {\r\n                console.log(main.data[0].filter(d => d.week === 4 && d.player_id === '8135'))\r\n            }\r\n            const data = item !== 'projections' ? main.data[0] : main.data[0].reduce((result, item) => {\r\n                const { week, player_id, injury_status, ...stats } = item;\r\n\r\n                if (!result[week]) {\r\n                    result[week] = {};\r\n                }\r\n\r\n                result[week][player_id] = {\r\n                    ...stats,\r\n                    injury_status: injury_status\r\n                };\r\n                return result;\r\n            }, {})\r\n\r\n            dispatch({\r\n                type: 'FETCH_COMMON_SUCCESS', payload: {\r\n                    item: item,\r\n                    data: data\r\n                }\r\n            });\r\n\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_COMMON_FAILURE', payload: error.message });\r\n\r\n            console.error(error.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchUser = (username) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'FETCH_USER_START' });\r\n\r\n        try {\r\n            const user = await axios.get('/user/create', {\r\n                params: { username: username }\r\n            });\r\n\r\n            console.log(user.data)\r\n\r\n            if (!user.data?.error) {\r\n                dispatch({ type: 'FETCH_USER_SUCCESS', payload: user.data.user });\r\n\r\n                dispatch({ type: 'SET_STATE_COMMON', payload: { state: user.data.state } });\r\n\r\n                const week_lc = user.data.state.season_type === 'regular'\r\n                    ? user.data.state.leg\r\n                    : user.data.state.season_type.includes('post')\r\n                        ? 19\r\n                        : 1\r\n\r\n                dispatch({ type: 'SET_STATE_LINEUPS', payload: { week: week_lc } });\r\n            } else {\r\n                dispatch({ type: 'FETCH_USER_FAILURE', payload: user.data });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_USER_FAILURE', payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchLeagues = (user_id) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'FETCH_LEAGUES_START' })\r\n\r\n        try {\r\n            const response = await fetch(`/league/find?user_id=${encodeURIComponent(user_id)}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const reader = response.body.getReader();\r\n\r\n                let leagues = ''\r\n\r\n                while (true) {\r\n                    const { done, value } = await reader.read();\r\n\r\n                    if (done) break;\r\n\r\n\r\n                    leagues += new TextDecoder().decode(value);\r\n\r\n                    const matches = leagues.match(/\"league_id\":/g);\r\n\r\n                    let count = 0;\r\n\r\n                    if (matches && matches.length > 0) {\r\n                        count = matches.length\r\n                    }\r\n\r\n                    dispatch({ type: 'SET_STATE_PROGRESS', payload: { progress: count } })\r\n                }\r\n\r\n                let parsed_leagues;\r\n                try {\r\n                    parsed_leagues = JSON.parse(leagues)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                console.log(parsed_leagues)\r\n\r\n                dispatch({ type: 'FETCH_LEAGUES_SUCCESS', payload: parsed_leagues.flat() });\r\n\r\n            } else {\r\n                dispatch({ type: 'FETCH_LEAGUES_FAILURE', payload: 'Failed to fetch user leagues' });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_LEAGUES_FAILURE', payload: error.message });\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchLmPlayerShares = (user_id) => async (dispatch) => {\r\n    dispatch({ type: 'SET_STATE_USER', payload: { isLoadingPS: true } });\r\n\r\n    try {\r\n        const lmplayershares = await axios.get('/user/lmplayershares', {\r\n            params: { user_id: user_id }\r\n        });\r\n\r\n        console.log({ lmplayershares: lmplayershares.data.sort((a, b) => a.username > b.username ? 1 : -1) })\r\n\r\n        dispatch({ type: 'SET_STATE_USER', payload: { lmplayershares: lmplayershares.data, isLoadingPS: false } });\r\n    } catch (err) {\r\n        dispatch({ type: 'SET_STATE_USER', payload: { isLoadingPS: false, errorPS: err.message } });\r\n    }\r\n}\r\n\r\nexport const fetchPlayerValues = (player_ids) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const pv = await axios.post('/main/playervalues', {\r\n                player_ids: player_ids\r\n            })\r\n\r\n            const values_dict = {};\r\n\r\n            pv.data\r\n                .forEach(value_obj => {\r\n                    if (!values_dict[value_obj.date]) {\r\n                        values_dict[value_obj.date] = {};\r\n                    }\r\n\r\n                    if (!values_dict[value_obj.date][value_obj.player_id]) {\r\n                        values_dict[value_obj.date][value_obj.player_id] = {}\r\n                    }\r\n\r\n\r\n                    values_dict[value_obj.date][value_obj.player_id][value_obj.type] = value_obj.value\r\n                })\r\n\r\n            dispatch({ type: 'SET_STATE_COMMON', payload: { values: values_dict } })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n}","export const getTrendColor = (trend, adjustment) => {\r\n    return trend > 0\r\n        ? {\r\n            color: `rgb(${255 - trend / adjustment}, 255, ${255 - trend / adjustment})`,\r\n\r\n        }\r\n        : trend < 0\r\n            ? {\r\n                color: `rgb(255, ${255 + trend / adjustment}, ${255 + trend / adjustment})`\r\n            }\r\n            : {}\r\n}","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchPlayerValues } from \"../../redux/actions\";\r\n\r\n\r\nconst useFetchPlayerValues = ({ player_ids }) => {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if (player_ids.length > 0) {\r\n            dispatch(fetchPlayerValues(player_ids))\r\n        }\r\n    }, [player_ids, dispatch])\r\n\r\n}\r\n\r\nexport default useFetchPlayerValues;"],"names":["React","_ref","roster","league","trade_value_date","current_value_date","type","previous","players_points","players_projections","total_points","filter","setFilter","useState","ppgType","setPpgType","state","allplayers","values","projections","useSelector","common","week","lineups","getPlayerScore","stats_array","scoring_settings","total","arguments","length","undefined","total_breakdown","map","stats_game","Object","keys","stats","x","includes","key","points","reduce","acc","cur","matchup_info","startsWith","player_ids","players","useFetchPlayerValues","headers","text","_jsxs","onChange","e","target","value","children","_jsx","colSpan","className","username","Date","getMonth","getDate","position_abbrev","player_scoring_dict","useMemo","_roster$players","forEach","player_id","parseInt","split","_league$cur","_matchup$players","_matchup$players_poin","_matchup$starters","_matchup$starters2","_matchup$players_poin2","_matchup$players2","_matchup$starters3","_matchup$players3","_matchup$starters4","_matchup$players_poin3","matchup","find","m","roster_id","games_total","points_total","games_starter","starters","points_starter","games_bench","points_bench","_league$roster_positi","_league$roster_positi2","_values$trade_value_d","_values$current_value","value_type","roster_positions","p","trade","current","_Fragment","TableMain","body","_roster$draft_picks","_roster$draft_picks$s","_ref2","draft_picks","sort","a","b","season","round","order","pick","_pick$original_user","id","concat","original_user","user_id","list","league_season","toLocaleString","minimumIntegerDigits","toString","index","_allplayers$player_id","position","_player_scoring_dict$7","_player_scoring_dict$8","_allplayers$player_id2","_allplayers$player_id3","_players_points$playe","_getPlayerScore","_games","games","_player_scoring_dict$","_player_scoring_dict$2","_player_scoring_dict$3","_player_scoring_dict$4","_player_scoring_dict$5","_player_scoring_dict$6","trend","full_name","image","src","alt","toFixed","style","getTrendColor","placeholder","isLoading","searched","setSearched","dropdownVisible","setDropdownVisible","dropdownOptions","setDropdownOptions","reverse","setReverse","getOptions","useCallback","s","_x$text","trim","toLowerCase","replace","_b$text","handleSearch","input","options","visible","_x$text2","option","_x$text3","onBlur","Avatar","avatar_id","onFocus","autoComplete","disabled","onClick","onMouseEnter","handleMouseEnter","setTimeout","onMouseLeave","onMouseDown","_body$filter2","_body$filter3","_body$filter3$slice","_headers$","_body$filter4","_body$filter4$slice","page","setPage","itemActive","setItemActive","caption","options1","options2","partial","loadMore","pageRef","useRef","itemActiveRef","useEffect","focus","scrollIntoView","behavior","inline","block","_body$filter","_body$filter$slice","slice","Math","max","Search","_b$search","search","_x$search","ceil","Array","from","page_number","ref","header","rowSpan","item","_item$list","_type$split","_item$list2","_item$list2$filter","secondary_table","setStateUser","state_obj","payload","resetState","fetchCommon","async","dispatch","main","axios","get","console","log","data","d","result","injury_status","error","message","fetchUser","_user$data","user","params","season_type","leg","fetchLeagues","response","fetch","encodeURIComponent","method","Accept","ok","reader","getReader","parsed_leagues","leagues","done","read","TextDecoder","decode","matches","match","count","progress","JSON","parse","flat","fetchLmPlayerShares","isLoadingPS","lmplayershares","err","errorPS","fetchPlayerValues","pv","post","values_dict","value_obj","date","adjustment","color","useDispatch"],"sourceRoot":""}