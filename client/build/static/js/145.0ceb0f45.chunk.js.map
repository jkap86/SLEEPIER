{"version":3,"file":"static/js/145.0ceb0f45.chunk.js","mappings":"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","sources":["modules/COMMON/components/Heading/index.js","modules/COMMON/components/Layout/Layout.js","modules/COMMON/components/Layout/index.js","modules/COMMON/redux/actions.js","modules/COMMON/services/hooks/useFetchUserInfo.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Heading = React.lazy(() => import('./Heading'));\r\n\r\nexport default Heading;","import useFetchUserInfo from \"../../services/hooks/useFetchUserInfo\";\r\nimport Heading from \"../Heading\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LoadingIcon from '../LoadingIcon';\r\n\r\nconst Layout = ({ display }) => {\r\n    const progress = useSelector(state => state.progress.progress);\r\n    const { isLoadingUser, isLoadingLeagues, errorUser } = useSelector(state => state.user);\r\n\r\n    useFetchUserInfo([])\r\n\r\n    return <>\r\n        <Heading progress={progress} />\r\n        {\r\n            isLoadingUser || isLoadingLeagues\r\n                ? <LoadingIcon />\r\n                : (errorUser.error && <h1 className=\"error\">{errorUser.error}</h1>) || display\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Layout;\r\n\r\n","import Layout from \"./Layout\";\r\n\r\nexport default Layout;","import axios from \"axios\";\r\n\r\nexport const setStateUser = (state_obj) => ({\r\n    type: `SET_STATE_USER`,\r\n    payload: state_obj\r\n})\r\n\r\nexport const setStateCommon = (state_obj) => ({\r\n    type: `SET_STATE_COMMON`,\r\n    payload: state_obj\r\n})\r\n\r\nexport const resetState = () => ({\r\n    type: 'RESET_STATE'\r\n});\r\n\r\nexport const fetchCommon = (item) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'FETCH_COMMON_START', payload: { item: item } });\r\n\r\n        try {\r\n            const main = await axios.get(`/main/${item}`);\r\n\r\n            if (item === 'projections') {\r\n                console.log(main.data[0].filter(d => d.week === 4 && d.player_id === '8135'))\r\n            }\r\n            const data = item !== 'projections' ? main.data[0] : main.data[0].reduce((result, item) => {\r\n                const { week, player_id, injury_status, ...stats } = item;\r\n\r\n                if (!result[week]) {\r\n                    result[week] = {};\r\n                }\r\n\r\n                result[week][player_id] = {\r\n                    ...stats,\r\n                    injury_status: injury_status\r\n                };\r\n                return result;\r\n            }, {})\r\n\r\n            dispatch({\r\n                type: 'FETCH_COMMON_SUCCESS', payload: {\r\n                    item: item,\r\n                    data: data\r\n                }\r\n            });\r\n\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_COMMON_FAILURE', payload: error.message });\r\n\r\n            console.error(error.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchUser = (username) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'FETCH_USER_START' });\r\n\r\n        try {\r\n            const user = await axios.get('/user/create', {\r\n                params: { username: username }\r\n            });\r\n\r\n            console.log(user.data)\r\n\r\n            if (!user.data?.error) {\r\n                dispatch({ type: 'FETCH_USER_SUCCESS', payload: user.data.user });\r\n\r\n                dispatch({ type: 'SET_STATE_COMMON', payload: { state: user.data.state } });\r\n\r\n                const week_lc = user.data.state.season_type === 'regular'\r\n                    ? user.data.state.leg\r\n                    : user.data.state.season_type.includes('post')\r\n                        ? 19\r\n                        : 1\r\n\r\n                dispatch({ type: 'SET_STATE_LINEUPS', payload: { week: week_lc } });\r\n            } else {\r\n                dispatch({ type: 'FETCH_USER_FAILURE', payload: user.data });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_USER_FAILURE', payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchLeagues = (user_id) => {\r\n    return async (dispatch) => {\r\n        dispatch({ type: 'FETCH_LEAGUES_START' })\r\n\r\n        try {\r\n            const response = await fetch(`/league/find?user_id=${encodeURIComponent(user_id)}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const reader = response.body.getReader();\r\n\r\n                let leagues = ''\r\n\r\n                while (true) {\r\n                    const { done, value } = await reader.read();\r\n\r\n                    if (done) break;\r\n\r\n\r\n                    leagues += new TextDecoder().decode(value);\r\n\r\n                    const matches = leagues.match(/\"league_id\":/g);\r\n\r\n                    let count = 0;\r\n\r\n                    if (matches && matches.length > 0) {\r\n                        count = matches.length\r\n                    }\r\n\r\n                    dispatch({ type: 'SET_STATE_PROGRESS', payload: { progress: count } })\r\n                }\r\n\r\n                let parsed_leagues;\r\n                try {\r\n                    parsed_leagues = JSON.parse(leagues)\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                console.log(parsed_leagues)\r\n\r\n                dispatch({ type: 'FETCH_LEAGUES_SUCCESS', payload: parsed_leagues.flat() });\r\n\r\n            } else {\r\n                dispatch({ type: 'FETCH_LEAGUES_FAILURE', payload: 'Failed to fetch user leagues' });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: 'FETCH_LEAGUES_FAILURE', payload: error.message });\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchLmPlayerShares = (user_id) => async (dispatch) => {\r\n    dispatch({ type: 'SET_STATE_USER', payload: { isLoadingPS: true } });\r\n\r\n    try {\r\n        const lmplayershares = await axios.get('/user/lmplayershares', {\r\n            params: { user_id: user_id }\r\n        });\r\n\r\n        console.log({ lmplayershares: lmplayershares.data.sort((a, b) => a.username > b.username ? 1 : -1) })\r\n\r\n        dispatch({ type: 'SET_STATE_USER', payload: { lmplayershares: lmplayershares.data, isLoadingPS: false } });\r\n    } catch (err) {\r\n        dispatch({ type: 'SET_STATE_USER', payload: { isLoadingPS: false, errorPS: err.message } });\r\n    }\r\n}\r\n\r\nexport const fetchPlayerValues = (player_ids) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const pv = await axios.post('/main/playervalues', {\r\n                player_ids: player_ids\r\n            })\r\n\r\n            const values_dict = {};\r\n\r\n            pv.data\r\n                .forEach(value_obj => {\r\n                    if (!values_dict[value_obj.date]) {\r\n                        values_dict[value_obj.date] = {};\r\n                    }\r\n\r\n                    if (!values_dict[value_obj.date][value_obj.player_id]) {\r\n                        values_dict[value_obj.date][value_obj.player_id] = {}\r\n                    }\r\n\r\n\r\n                    values_dict[value_obj.date][value_obj.player_id][value_obj.type] = value_obj.value\r\n                })\r\n\r\n            dispatch({ type: 'SET_STATE_COMMON', payload: { values: values_dict } })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n}","import { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetState } from \"../../redux/actions\";\r\nimport { fetchUser, fetchLeagues } from \"../../redux/actions\";\r\nimport { fetchCommon } from \"../../redux/actions\";\r\n\r\nconst useFetchUserInfo = (to_fetch_array) => {\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n    const { user_id, isLoadingUser, username, leagues, isLoadingLeagues } = useSelector(state => state.user);\r\n    const { allplayers } = useSelector(state => state.common);\r\n\r\n    useEffect(() => {\r\n        if (username && username?.toLowerCase() !== params.username?.toLowerCase()) {\r\n            dispatch(resetState());\r\n        }\r\n    }, [dispatch, username, params.username])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!user_id && !isLoadingUser) {\r\n            dispatch(fetchUser(params.username))\r\n        }\r\n    }, [dispatch, user_id, params.username, isLoadingUser])\r\n\r\n    useEffect(() => {\r\n        if (user_id && !leagues && !isLoadingLeagues) {\r\n            dispatch(fetchLeagues(user_id));\r\n        }\r\n    }, [dispatch, user_id, leagues, isLoadingLeagues]);\r\n\r\n    useEffect(() => {\r\n        if (leagues) {\r\n            if (!allplayers) {\r\n                dispatch(fetchCommon('allplayers'))\r\n            }\r\n\r\n        }\r\n    }, [dispatch, allplayers, leagues])\r\n\r\n\r\n}\r\n\r\nexport default useFetchUserInfo;"],"names":["React","_ref","display","progress","useSelector","state","isLoadingUser","isLoadingLeagues","errorUser","user","useFetchUserInfo","_jsxs","_Fragment","children","_jsx","Heading","LoadingIcon","error","className","setStateUser","state_obj","type","payload","resetState","fetchCommon","item","async","dispatch","main","axios","get","concat","console","log","data","filter","d","week","player_id","reduce","result","injury_status","stats","message","fetchUser","username","_user$data","params","season_type","leg","includes","fetchLeagues","user_id","response","fetch","encodeURIComponent","method","headers","Accept","ok","reader","body","getReader","parsed_leagues","leagues","done","value","read","TextDecoder","decode","matches","match","count","length","JSON","parse","flat","fetchLmPlayerShares","isLoadingPS","lmplayershares","sort","a","b","err","errorPS","fetchPlayerValues","player_ids","pv","post","values_dict","forEach","value_obj","date","values","to_fetch_array","useDispatch","useParams","allplayers","common","useEffect","_params$username","toLowerCase"],"sourceRoot":""}