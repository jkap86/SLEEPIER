{"version":3,"file":"static/js/331.12867433.chunk.js","mappings":"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","sources":["modules/COMMON/components/Avatar/index.js","modules/COMMON/components/Search/Search.js","modules/COMMON/components/Search/index.js","modules/COMMON/components/TableMain/TableMain.js","modules/COMMON/components/TableMain/index.js","modules/Picktracker/picktracker.js","modules/Picktracker/index.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Avatar = React.lazy(() => import('./Avatar'));\r\n\r\nexport default Avatar;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Avatar from \"../Avatar\";\r\nimport './Search.css';\r\n\r\n\r\nconst Search = ({ id, placeholder, list, isLoading, searched, setSearched }) => {\r\n\r\n    const [dropdownVisible, setDropdownVisible] = useState(false)\r\n    const [dropdownOptions, setDropdownOptions] = useState([])\r\n    const [reverse, setReverse] = useState(false);\r\n\r\n\r\n    const getOptions = useCallback((s) => {\r\n        const all_options = list\r\n        const options = all_options.filter(x =>\r\n            x.text?.trim().toLowerCase()\r\n                .replace(/[^a-z0-9]/g, \"\")\r\n                .includes(s.replace(/[^a-z0-9]/g, \"\").trim().toLowerCase()))\r\n            .sort(\r\n                (a, b) => b.text\r\n                    ?.trim()\r\n                    .toLowerCase()\r\n                    .replace(/[^a-z0-9]/g, \"\")\r\n                    .startsWith(\r\n                        s\r\n                            .replace(/[^a-z0-9]/g, \"\")\r\n                            .trim()\r\n                            .toLowerCase()\r\n                    ) ? 1 : -1\r\n            )\r\n\r\n\r\n        return options;\r\n    }, [list])\r\n\r\n\r\n    const handleSearch = (input) => {\r\n        let s = input\r\n        let options;\r\n        let visible;\r\n\r\n        if (s === '') {\r\n            options = [];\r\n            visible = false\r\n            setSearched(s)\r\n        } else if (list.map(x => x.text?.trim().toLowerCase()).includes(s.trim().toLowerCase())) {\r\n            const option = list.find(x => x.text?.trim().toLowerCase() === s.trim().toLowerCase())\r\n            options = []\r\n            visible = false\r\n            setSearched(option)\r\n        } else {\r\n            options = getOptions(s)\r\n            visible = true\r\n            setSearched(s)\r\n        }\r\n        setDropdownVisible(visible)\r\n        setDropdownOptions(options)\r\n    }\r\n\r\n    const handleMouseEnter = (value) => {\r\n        setTimeout(() => {\r\n            setReverse(value);\r\n        }, 2000)\r\n\r\n    }\r\n\r\n    return <>\r\n        <div\r\n            onBlur={() => setDropdownVisible(false)}\r\n            className={'search_wrapper'}\r\n        >\r\n            {\r\n                searched?.image ?\r\n                    <Avatar\r\n                        avatar_id={searched.image.src}\r\n                        alt={searched.image.alt}\r\n                        type={searched.image.type}\r\n                    />\r\n                    :\r\n                    null\r\n            }\r\n            <input\r\n                className={'search'}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n                onFocus={() => setDropdownVisible(true)}\r\n\r\n                id={id === undefined ? null : id}\r\n                placeholder={\"Search...\"}\r\n                type=\"text\"\r\n                value={searched?.text || searched}\r\n                autoComplete={'off'}\r\n                disabled={isLoading}\r\n            />\r\n            {\r\n                searched === '' || !dropdownVisible && (searched !== '' && dropdownVisible) ?\r\n                    <button\r\n                        onClick={() => handleSearch(' ')}\r\n                        className={'input click'}\r\n                    >\r\n                        &#9660;\r\n                    </button>\r\n                    :\r\n                    <button\r\n                        type=\"reset\"\r\n                        onClick={() => handleSearch('')}\r\n                        className={'input click'}\r\n                    >\r\n                        X\r\n                    </button>\r\n            }\r\n            {\r\n                dropdownVisible && dropdownOptions.length > 0 && !isLoading\r\n                    ? <ol\r\n                        onBlur={() => setDropdownVisible(false)}\r\n                        className=\"dropdown\"\r\n                    >\r\n                        {dropdownOptions\r\n                            .map((option, index) =>\r\n                                <li key={`${option.text}_${index}`}>\r\n                                    <button\r\n                                        className={\"click \" + (`${option.text}_${index}` === reverse ? 'reverse' : '')}\r\n                                        onMouseEnter={() => handleMouseEnter(`${option.text}_${index}`)}\r\n                                        onMouseLeave={() => setReverse(false)}\r\n                                        onMouseDown={() => setSearched(option)}\r\n                                    >\r\n                                        {\r\n                                            option.image ?\r\n                                                <p>\r\n                                                    {\r\n                                                        <Avatar\r\n                                                            avatar_id={option.image.src}\r\n                                                            alt={option.image.alt}\r\n                                                            type={option.image.type}\r\n                                                        />\r\n                                                    }\r\n                                                    <span>{option.text}</span>\r\n                                                </p>\r\n                                                :\r\n                                                option.text\r\n                                        }\r\n                                    </button>\r\n                                </li>\r\n                            )}\r\n                    </ol>\r\n                    :\r\n                    null\r\n\r\n            }\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Search;","import Search from './Search';\r\n\r\nexport default Search;","import './TableMain.css';\r\nimport Avatar from '../Avatar';\r\nimport { useEffect, useRef } from 'react';\r\nimport Search from '../Search';\r\n\r\nconst TableMain = ({\r\n    id,\r\n    type,\r\n    headers,\r\n    body,\r\n    page,\r\n    setPage,\r\n    itemActive,\r\n    setItemActive,\r\n    caption,\r\n    searched,\r\n    setSearched,\r\n    options1,\r\n    options2,\r\n    partial,\r\n    loadMore\r\n}) => {\r\n    const pageRef = useRef(null)\r\n    const itemActiveRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        if (pageRef.current !== null) {\r\n            pageRef.current.focus()\r\n            pageRef.current.scrollIntoView({\r\n                behavior: 'smooth',\r\n                inline: 'center'\r\n            })\r\n        }\r\n\r\n    }, [pageRef, page])\r\n\r\n\r\n    useEffect(() => {\r\n        if (itemActiveRef.current !== null && !type.includes('half')) {\r\n            itemActiveRef.current.focus()\r\n            itemActiveRef.current.scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'start'\r\n            })\r\n        }\r\n\r\n    }, [itemActiveRef, itemActive])\r\n\r\n    useEffect(() => {\r\n        if (page && page !== 1 && body && !body\r\n            ?.filter(x => x)\r\n            ?.slice(Math.max(((page || 1) - 1) * 25, 0), (((page || 1) - 1) * 25) + 25)\r\n            ?.length > 0\r\n        ) {\r\n            setPage(1)\r\n        }\r\n\r\n    }, [body, page])\r\n\r\n    return <>\r\n        {\r\n            setSearched ?\r\n\r\n                <div className='search_filter_wrapper'>\r\n                    <div>\r\n                        {\r\n                            options1?.map(option => option)\r\n                        }\r\n                    </div>\r\n                    <Search\r\n                        id={id}\r\n                        placeholder={`Search ${id}`}\r\n                        list={body\r\n                            ?.filter((b, index) => b.search?.text !== 'orphan' || !body.slice(0, index).find(x => x.search?.text === 'orphan'))\r\n                            ?.map(b => {\r\n                                return {\r\n                                    ...b.search,\r\n                                    id: b.id\r\n                                }\r\n                            })}\r\n                        searched={searched}\r\n                        setSearched={setSearched}\r\n                    />\r\n                    <div>\r\n                        {\r\n                            options2?.map(option => option)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                :\r\n                null\r\n        }\r\n        {\r\n\r\n            page ?\r\n                <div className=\"page_numbers_wrapper\" >\r\n                    <>\r\n                        {\r\n                            (Math.ceil(body?.length / 25) <= 1) ? null :\r\n                                <ol className=\"page_numbers\">\r\n                                    {Array.from(Array(Math.ceil((body?.length / 25) || 0)).keys()).map(page_number =>\r\n                                        <li\r\n                                            className={page === page_number + 1 ? 'active click' : 'click'}\r\n                                            key={page_number + 1}\r\n                                            onClick={() => setPage(page_number + 1)}\r\n                                            ref={page === page_number + 1 ? pageRef : null}\r\n                                        >\r\n                                            {page_number + 1}\r\n                                        </li>\r\n                                    )}\r\n                                    {\r\n                                        partial ?\r\n                                            <li\r\n                                                className='click'\r\n                                                onClick={loadMore}\r\n                                            >\r\n                                                ...\r\n                                            </li>\r\n                                            : null\r\n                                    }\r\n                                </ol>\r\n                        }\r\n                    </>\r\n                </div>\r\n                : null\r\n        }\r\n\r\n\r\n        <table className={type} id={id} >\r\n            {\r\n                caption ?\r\n                    <caption>\r\n                        {caption}\r\n                    </caption>\r\n                    : null\r\n            }\r\n            <thead>\r\n                {\r\n                    headers?.map((header, index) =>\r\n                        <tr key={index}>\r\n                            {\r\n                                header.filter(x => x).map((key, index) =>\r\n                                    <th\r\n                                        key={index}\r\n                                        colSpan={key?.colSpan}\r\n                                        rowSpan={key?.rowSpan}\r\n                                        className={key?.className}\r\n                                        onClick={key?.onClick}\r\n                                    >\r\n                                        {\r\n                                            key?.text\r\n                                        }\r\n                                    </th>\r\n                                )\r\n                            }\r\n                        </tr>\r\n                    )\r\n                }\r\n            </thead>\r\n            {\r\n                body?.length > 0 && page > 1\r\n                    ? <tbody>\r\n                        <tr\r\n                            className={'click'}\r\n                            onClick={() => setPage(page - 1)}\r\n                        >\r\n                            <td colSpan={headers[0].reduce((acc, cur) => acc + (cur.colSpan || 0), 0)}>PREV PAGE</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    : null\r\n\r\n\r\n            }\r\n            {\r\n                body?.length > 0 ?\r\n                    <tbody\r\n                    >\r\n                        {\r\n                            body\r\n                                ?.filter(x => x)\r\n                                ?.slice(Math.max(((page || 1) - 1) * 25, 0), (((page || 1) - 1) * 25) + 25)\r\n                                ?.map((item, index) =>\r\n\r\n                                    <tr\r\n                                        key={index}\r\n                                        className={itemActive === item.id ? 'active_wrapper' : ''}\r\n                                    >\r\n                                        <td\r\n                                            colSpan={item.list?.reduce((acc, cur) => acc + (cur.colSpan || 0), 0)}\r\n                                        >\r\n                                            <table className={`body ${itemActive === item.id ? 'active' : ''}`}>\r\n                                                <tbody>\r\n                                                    <tr\r\n                                                        className={`click ${itemActive === item.id ? 'active' : ''}`}\r\n                                                        ref={(itemActive === item.id && !type?.split(' ')?.includes('lineup')) ? itemActiveRef : null}\r\n                                                        onClick={setItemActive ? () => itemActive === item.id ? setItemActive('') : setItemActive(item.id) : null}\r\n                                                    >\r\n                                                        {\r\n                                                            item.list\r\n                                                                ?.filter(x => x.text)\r\n                                                                ?.map((key, index) =>\r\n                                                                    <td\r\n                                                                        key={index}\r\n                                                                        colSpan={key.colSpan}\r\n                                                                        className={key.className}\r\n                                                                    >\r\n                                                                        {\r\n                                                                            key.image ?\r\n                                                                                <p>\r\n                                                                                    {\r\n                                                                                        <Avatar\r\n                                                                                            avatar_id={key.image.src}\r\n                                                                                            alt={key.image.alt}\r\n                                                                                            type={key.image.type}\r\n                                                                                        />\r\n                                                                                    }\r\n                                                                                    <span>{key.text}</span>\r\n                                                                                </p>\r\n                                                                                :\r\n                                                                                key.text\r\n                                                                        }\r\n                                                                    </td>\r\n                                                                )\r\n                                                        }\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        (itemActive !== item.id || !item.secondary_table) ? null :\r\n                                                            <tr className={`${type} click ${itemActive === item.id ? 'active2' : ''}`}>\r\n                                                                <td colSpan={item.list.reduce((acc, cur) => acc + (cur.colSpan || 0), 0)}>\r\n                                                                    {item.secondary_table}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                )\r\n\r\n                        }\r\n                    </tbody>\r\n                    :\r\n                    <tbody>\r\n                        <tr>\r\n                            <td\r\n                                colSpan={headers[0]?.reduce((acc, cur) => acc + (cur?.colSpan || 0), 0)}\r\n                            >\r\n                                NO DATA\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n            }\r\n            {\r\n                body\r\n                    ?.filter(x => x)\r\n                    ?.slice(Math.max(((page || 1) - 1) * 25, 0), (((page || 1) - 1) * 25) + 25)\r\n                    ?.length > 0\r\n\r\n                    && ((((page - 1) * 25) + 25) < body?.length || partial) ?\r\n                    <tbody>\r\n                        <tr\r\n                            className={'click'}\r\n                            onClick={(((page - 1) * 25) + 25) < body?.length ? () => setPage(page + 1) : loadMore}\r\n                        >\r\n                            <td colSpan={headers[0].reduce((acc, cur) => acc + (cur.colSpan || 0), 0)}>NEXT PAGE</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    :\r\n                    null\r\n            }\r\n        </table>\r\n    </>\r\n}\r\n\r\nexport default TableMain;","import TableMain from './TableMain';\r\n\r\nexport default TableMain;","import { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport TableMain from \"../COMMON/components/TableMain\";\r\nimport Avatar from \"../COMMON/components/Avatar\";\r\nimport LoadingIcon from \"../COMMON/components/LoadingIcon\";\r\n\r\nconst PickTracker = () => {\r\n    const params = useParams();\r\n    const [kickers, setKickers] = useState([])\r\n    const [page, setPage] = useState(1)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchKickers = async () => {\r\n            setIsLoading(true)\r\n            const kickers = await axios.post('/league/draft', {\r\n                league_id: params.league_id\r\n\r\n            })\r\n            setKickers(kickers.data)\r\n            setIsLoading(false)\r\n        }\r\n\r\n        fetchKickers()\r\n\r\n    }, [params.league_id])\r\n\r\n    const headers = [\r\n        [\r\n            {\r\n                text: 'Pick',\r\n                colSpan: 2\r\n            },\r\n            {\r\n                text: 'Manager',\r\n                colSpan: 4\r\n            },\r\n            {\r\n                text: 'Kicker',\r\n                colSpan: 4\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const body = (kickers.picks || [])\r\n        ?.map(kicker => {\r\n            return {\r\n                id: kicker.player_id,\r\n                list: [\r\n                    {\r\n                        text: kicker.pick,\r\n                        colSpan: 2\r\n                    },\r\n                    {\r\n                        text: kicker.picked_by,\r\n                        colSpan: 4,\r\n                        className: 'left',\r\n                        image: {\r\n                            src: kicker.picked_by_avatar,\r\n                            alt: 'user avatar',\r\n                            type: 'user'\r\n                        }\r\n                    },\r\n                    {\r\n                        text: kicker.player,\r\n                        colSpan: 4,\r\n                        className: 'left end',\r\n                        image: {\r\n                            src: kicker.player_id,\r\n                            alt: 'player headshot',\r\n                            type: 'player'\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n\r\n\r\n    return isLoading ? <LoadingIcon /> : <>\r\n        <Link to={'/'} className='home' target={'_blank'}>\r\n            Home\r\n        </Link>\r\n        <h1>\r\n            <p className=\"image\">\r\n                <Avatar\r\n                    avatar_id={kickers.league?.avatar}\r\n                    alt={'league avatar'}\r\n                    type={'league'}\r\n                />\r\n\r\n                <strong>{kickers.league?.name}</strong>\r\n            </p>\r\n        </h1>\r\n        <TableMain\r\n            type={'primary'}\r\n            headers={headers}\r\n            body={body}\r\n            page={page}\r\n            setPage={setPage}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default PickTracker;","import PickTracker from \"./picktracker\";\r\n\r\n\r\nexport default PickTracker;"],"names":["React","_ref","id","placeholder","list","isLoading","searched","setSearched","dropdownVisible","setDropdownVisible","useState","dropdownOptions","setDropdownOptions","reverse","setReverse","getOptions","useCallback","s","filter","x","_x$text","text","trim","toLowerCase","replace","includes","sort","a","b","_b$text","startsWith","handleSearch","input","options","visible","map","_x$text2","option","find","_x$text3","_jsx","_Fragment","children","_jsxs","onBlur","className","image","Avatar","avatar_id","src","alt","type","onChange","e","target","value","onFocus","undefined","autoComplete","disabled","onClick","length","index","concat","onMouseEnter","handleMouseEnter","setTimeout","onMouseLeave","onMouseDown","_body$filter2","_body$filter3","_body$filter3$slice","_headers$","_body$filter4","_body$filter4$slice","headers","body","page","setPage","itemActive","setItemActive","caption","options1","options2","partial","loadMore","pageRef","useRef","itemActiveRef","useEffect","current","focus","scrollIntoView","behavior","inline","block","_body$filter","_body$filter$slice","slice","Math","max","Search","_b$search","search","_x$search","ceil","Array","from","keys","page_number","ref","header","key","colSpan","rowSpan","reduce","acc","cur","item","_item$list","_type$split","_item$list2","_item$list2$filter","split","secondary_table","PickTracker","_kickers$league","_kickers$league2","params","useParams","kickers","setKickers","setIsLoading","async","axios","post","league_id","data","fetchKickers","picks","kicker","player_id","pick","picked_by","picked_by_avatar","player","LoadingIcon","Link","to","league","avatar","name","TableMain"],"sourceRoot":""}