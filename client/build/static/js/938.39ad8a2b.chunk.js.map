{"version":3,"file":"static/js/938.39ad8a2b.chunk.js","mappings":"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","sources":["modules/COMMON/services/helpers/filterLeagues.js","modules/COMMON/services/helpers/getUserRoster.js","modules/Lineups/redux/actions.js","modules/Lineups/services/helpers/getColumns.js","modules/COMMON/components/FilterIcons/IncludeTaxiFilter.js","modules/COMMON/components/FilterIcons/TeamFilter.js","modules/COMMON/components/FilterIcons/index.js","modules/Lineups/components/LineupChecks.js","modules/Lineups/components/StartersBench.js","modules/Lineups/services/helpers/getRecordDict.js","modules/Lineups/services/useGetLineupChecks.js","modules/Lineups/components/Lineups1.js","modules/COMMON/services/helpers/matchTeam.js","modules/Lineups/components/LineupCheck.js","modules/Lineups/components/PlayerStartBench.js","modules/Lineups/components/Lineups2.js","modules/Lineups/components/Lineups3.js","modules/Lineups/components/RecordsHeader.js","modules/Lineups/index.js","modules/Players/redux/actions.js"],"sourcesContent":["\r\nexport const filterLeagues = (leagues, type1, type2) => {\r\n    return (leagues || []).filter(league => {\r\n        let include_1;\r\n\r\n        switch (type1) {\r\n            case ('Redraft'):\r\n                include_1 = league.settings.type !== 2;\r\n                break;\r\n            case ('All'):\r\n                include_1 = true;\r\n                break;\r\n            case ('Dynasty'):\r\n                include_1 = league.settings.type === 2;\r\n                break;\r\n            default:\r\n                include_1 = true;\r\n                break;\r\n        }\r\n\r\n        let include_2;\r\n\r\n        switch (type2) {\r\n            case ('Bestball'):\r\n                include_2 = league.settings.best_ball === 1;\r\n                break;\r\n            case ('All'):\r\n                include_2 = true;\r\n                break;\r\n            case ('Lineup'):\r\n                include_2 = league.settings.best_ball !== 1;\r\n                break;\r\n            default:\r\n                include_2 = true;\r\n                break;\r\n        }\r\n\r\n        return (include_1 && include_2)\r\n    })\r\n}","export const getUserRoster = (rosters, user_id) => {\r\n    return rosters\r\n        ?.find(r => r.user_id === user_id || r.co_owners?.find(co => co?.user_id === user_id))\r\n}\r\n\r\n","import axios from 'axios';\r\n\r\n\r\nexport const setStateLineups = (state_obj, tab) => ({\r\n    type: `SET_STATE_LINEUPS`,\r\n    payload: state_obj\r\n})\r\n\r\nexport const fetchMatchups = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const state = getState();\r\n\r\n        const { leagues } = state.user;\r\n        const display_week = state.common.state.week\r\n\r\n        const all_matchups_to_update = [];\r\n\r\n        leagues\r\n            .filter(league => league.settings.status === 'in_season')\r\n            .forEach(league => {\r\n                const league_matchups_to_update = [];\r\n                const start_week = league.settings.start_week;\r\n\r\n                const matchupPtsWeek = (key) => {\r\n                    return league[key]?.reduce((acc, cur) => acc + cur.points, 0)\r\n                }\r\n\r\n                Object.keys(league)\r\n                    .filter(key => key.startsWith('matchups_'))\r\n                    .forEach(key => {\r\n                        const { wins, losses, ties } = league.settings;\r\n                        const games = wins + losses + ties;\r\n                        if (!league[key]) {\r\n                            league_matchups_to_update.push(key)\r\n                        } else {\r\n                            const key_week = parseInt(key.split('_')[1])\r\n\r\n                            if (\r\n                                (\r\n                                    key_week < league.settings.playoff_week_start\r\n                                    || league.settings.playoff_week_start === 0\r\n                                ) && (\r\n                                    key_week >= league.settings.start_week\r\n                                )\r\n                            ) {\r\n                                if (\r\n                                    key_week + 1 < display_week\r\n                                    || (\r\n                                        key_week + 1 === parseInt(display_week)\r\n                                        && (\r\n                                            new Date().getDay() >= 3\r\n                                            || (new Date().getDay() === 2 && new Date().getHours() > 18)\r\n                                        )\r\n                                    )\r\n                                ) {\r\n                                    if (!league.settings.matchups_final?.includes(key_week.toString())) {\r\n                                        league_matchups_to_update.push(key)\r\n                                    }\r\n                                } else if (\r\n                                    key_week === display_week\r\n                                    && (\r\n                                        !(\r\n                                            league.settings.current_matchups_update > new Date().getTime() - 6 * 60 * 60 * 1000\r\n                                        ) || (\r\n                                            state.common.schedule[display_week].find(g => parseInt(g.gameSecondsRemaining) > 0 && parseInt(g.gameSecondsRemaining) < 3600)\r\n                                            && !(league.settings.current_matchups_update > new Date().getTime() - 15 * 60 * 1000)\r\n                                        ) || (\r\n                                            state.common.schedule[display_week].find(g => parseInt(g.gameSecondsRemaining) === 0)\r\n                                            && !(league.settings.current_matchups_update > new Date().getTime() - 3.5 * 60 * 60 * 1000)\r\n                                        )\r\n                                    )\r\n                                ) {\r\n                                    league_matchups_to_update.push(key)\r\n                                } else if (key_week > display_week) {\r\n                                    league[key]\r\n                                        ?.forEach(matchup => {\r\n                                            const matching_roster = league.rosters.find(r => r.roster_id === matchup.roster_id)\r\n\r\n                                            const player_mismatch = [\r\n                                                ...(matching_roster?.players || []).filter(player_id => !matchup.players?.includes(player_id))\r\n                                            ];\r\n\r\n                                            if (\r\n                                                player_mismatch.length > 0\r\n                                            ) {\r\n\r\n                                                league_matchups_to_update.push(key)\r\n                                            }\r\n                                        })\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n\r\n\r\n                if (league_matchups_to_update.length > 0) {\r\n                    all_matchups_to_update.push({\r\n                        name: league.name,\r\n                        league_id: league.league_id,\r\n                        settings: league.settings,\r\n                        weeks_to_update: Array.from(new Set(league_matchups_to_update))\r\n                    })\r\n                }\r\n            })\r\n\r\n            console.log({all_matchups_to_update})\r\n        if (all_matchups_to_update?.length > 0) {\r\n            try {\r\n                dispatch({ type: 'FETCH_MATCHUPS_START' });\r\n                console.log({ all_matchups_to_update })\r\n                const matchups = await axios.post('/league/matchups', {\r\n                    all_matchups_to_update: all_matchups_to_update,\r\n                    display_week: display_week\r\n                })\r\n\r\n                dispatch({ type: 'FETCH_MATCHUPS_SUCCESS', payload: matchups.data });\r\n            } catch (err) {\r\n                dispatch({ type: 'FETCH_MATCHUPS_FAILURE', payload: err.message });\r\n            }\r\n        } else {\r\n            dispatch({ type: 'SET_STATE_USER', payload: { matchups: true } });\r\n            console.log('No matchups to update...')\r\n        }\r\n    }\r\n}\r\n\r\nexport const syncLeague = (league_id, user_id, username, week) => {\r\n    return async (dispatch, getState) => {\r\n        dispatch({ type: 'SYNC_LEAGUE_START' });\r\n\r\n        const state = getState();\r\n        const { common} = state;\r\n\r\n        try {\r\n            const updated_league = await axios.post(`/league/sync`, {\r\n                league_id: league_id,\r\n                username: username,\r\n                week: week\r\n            })\r\n            console.log(updated_league.data)\r\n            const hash = `${state.lineups.includeTaxi}-${state.lineups.includeLocked}`;\r\n            const lineupChecks = state.lineups.lineupChecks;\r\n\r\n            const userRoster = updated_league.data.rosters\r\n                ?.find(r => r.user_id === user_id || r.co_owners?.find(co => co?.user_id === user_id))\r\n\r\n            dispatch({\r\n                type: 'SYNC_LEAGUES_SUCCESS',\r\n                payload: {\r\n                    league: {\r\n                        ...updated_league.data,\r\n                        userRoster: userRoster\r\n                    },\r\n                    state: common.state\r\n                }\r\n            });\r\n\r\n            if (week < common.state.display_week) {\r\n                dispatch({\r\n                    type: 'SET_STATE_LINEUPS',\r\n                    payload: {\r\n                        lineupChecks: {\r\n                            ...lineupChecks,\r\n                            [week]: {\r\n                                ...lineupChecks[week],\r\n                                [league_id]: {\r\n                                    ...lineupChecks[week][league_id],\r\n                                    edited: true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: 'SET_STATE_LINEUPS',\r\n                    payload: {\r\n                        lineupChecks: {\r\n                            ...lineupChecks,\r\n                            [week]: {\r\n                                ...lineupChecks[week],\r\n                                [hash]: {\r\n                                    ...lineupChecks[week][hash],\r\n                                    [league_id]: {\r\n                                        ...lineupChecks[week][hash][league_id],\r\n                                        edited: true\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(error.message)\r\n            dispatch({ type: 'SYNC_LEAGUES_FAILURE' })\r\n        }\r\n\r\n    };\r\n}","import { getTrendColor } from \"../../../COMMON/services/helpers/getTrendColor\"\r\n\r\n\r\nexport const getColumnValue = (header, matchup, lineup_check, league, opt_proj, act_proj, opp_opt_proj, opp_act_proj, proj_median, projections, week, opp_roster) => {\r\n    if (league.settings.status === 'in_season') {\r\n        switch (header) {\r\n            case 'Rank':\r\n                return {\r\n                    text: <p\r\n                        className=\"stat check\"\r\n                        style={getTrendColor(-((league.userRoster.rank / league.rosters.length) - .5), .0025)}\r\n                    >\r\n                        {league.userRoster.rank}\r\n                    </p>,\r\n                    colSpan: 2\r\n                }\r\n            case 'Opp Rank':\r\n                return {\r\n                    text: <p\r\n                    className=\"stat check\"\r\n                    style={getTrendColor(-((opp_roster.rank / league.rosters.length) - .5), .0025)}\r\n                >\r\n                    {opp_roster.rank}\r\n                </p>,\r\n                colSpan: 2\r\n                }\r\n            case 'Proj FP':\r\n                return {\r\n                    text: league.settings.best_ball === 1\r\n                        ? opt_proj?.toFixed(2)\r\n                        : act_proj?.toFixed(2),\r\n                    colSpan: 2\r\n                }\r\n            case 'Proj FPA':\r\n                return {\r\n                    text: league.settings.best_ball === 1\r\n                        ? opp_opt_proj?.toFixed(2)\r\n                        : opp_act_proj?.toFixed(2),\r\n                    colSpan: 2\r\n                }\r\n            case 'Proj FP (Opt)':\r\n                return {\r\n                    text: opt_proj?.toFixed(2),\r\n                    colSpan: 2\r\n                }\r\n            case 'Proj FPA (Opt)':\r\n                return {\r\n                    text: opp_opt_proj?.toFixed(2),\r\n                    colSpan: 2\r\n                }\r\n            case 'Proj Median':\r\n                return {\r\n                    text: parseInt(proj_median) && proj_median?.toFixed(2) || '-',\r\n                    colSpan: 2\r\n                }\r\n            case 'Suboptimal':\r\n                return {\r\n                    text: !matchup?.matchup_id || !lineup_check ? '-' : lineup_check.filter(x => x.notInOptimal).length > 0 ?\r\n                        lineup_check.filter(x => x.notInOptimal).length :\r\n                        '√',\r\n                    colSpan: 2,\r\n                    className: !matchup?.matchup_id || !lineup_check ? '' : lineup_check.filter(x => x.notInOptimal).length > 0 ?\r\n                        'red check' : 'green check'\r\n                }\r\n            case 'Early/Late Flex':\r\n                return {\r\n                    text: !matchup?.matchup_id || !lineup_check\r\n                        ? '-'\r\n                        : lineup_check.filter(x => x.earlyInFlex).length + lineup_check.filter(x => x.lateNotInFlex).length > 0\r\n                            ? lineup_check.filter(x => x.earlyInFlex).length + lineup_check.filter(x => x.lateNotInFlex).length\r\n                            : '√',\r\n                    colSpan: 2,\r\n                    className: !matchup?.matchup_id || !lineup_check\r\n                        ? ''\r\n                        : lineup_check.filter(x => x.earlyInFlex).length + lineup_check.filter(x => x.lateNotInFlex).length > 0\r\n                            ? 'red check'\r\n                            : 'green check'\r\n                }\r\n            case 'Open Taxi':\r\n                return {\r\n                    text: (league.settings.taxi_slots > 0 && league.settings.best_ball !== 1)\r\n                        ? league.settings.taxi_slots - (league.userRoster.taxi?.length || 0) > 0\r\n                            ? league.settings.taxi_slots - (league.userRoster.taxi?.length || 0)\r\n                            : '√'\r\n                        : '-',\r\n                    colSpan: 2,\r\n                    className: (league.settings.taxi_slots > 0 && league.settings.best_ball !== 1)\r\n                        ? league.settings.taxi_slots - (league.userRoster.taxi?.length || 0) > 0\r\n                            ? 'red check'\r\n                            : 'green check'\r\n                        : ''\r\n                }\r\n            case 'Non QB in SF':\r\n                return {\r\n                    text: !matchup?.matchup_id || !lineup_check\r\n                        ? '-'\r\n                        : lineup_check.filter(x => x.nonQBinSF).length > 0\r\n                            ? lineup_check.filter(x => x.nonQBinSF).length\r\n                            : '√',\r\n                    colSpan: 2,\r\n                    className: !matchup?.matchup_id || !lineup_check\r\n                        ? ''\r\n                        : lineup_check.filter(x => x.nonQBinSF).length > 0\r\n                            ? 'red check'\r\n                            : 'green check'\r\n                }\r\n            case 'Open Roster':\r\n                const user_active_players = league.userRoster.players.filter(p => !league.userRoster.taxi?.includes(p) && !league.userRoster.reserve?.includes(p))\r\n                return {\r\n                    text: league.roster_positions.length !== user_active_players?.length\r\n                        ? league.roster_positions.length - user_active_players?.length\r\n                        : '√',\r\n                    colSpan: 2,\r\n                    className: league.roster_positions.length !== user_active_players?.length\r\n                        ? 'red check'\r\n                        : 'green check',\r\n                }\r\n            case 'Open IR':\r\n                if (projections[week]) {\r\n                    const total_ir = league.settings.reserve_slots\r\n                    const used_ir = league.userRoster?.reserve?.length || 0\r\n                    const open_ir = total_ir - used_ir;\r\n                    const eligible_ir = league.userRoster.players?.filter(player_id => !league.userRoster.reserve?.includes(player_id)\r\n                        && !league.userRoster.taxi?.includes(player_id)\r\n                        && (\r\n                            (league.settings.reserve_allow_sus === 1 && projections[week][player_id]?.injury_status === 'Sus')\r\n                            || (league.settings.reserve_allow_doubtful === 1 && projections[week][player_id]?.injury_status === 'Doubtful')\r\n                            || (league.settings.reserve_allow_out === 1 && projections[week][player_id]?.injury_status === 'Out')\r\n                            || projections[week][player_id]?.injury_status === 'IR'\r\n                        )\r\n                    ).length\r\n                    return {\r\n                        text: (open_ir > 0 && eligible_ir > 0)\r\n                            ? Math.min(eligible_ir, open_ir)\r\n                            : '√',\r\n                        colSpan: 2,\r\n                        className: (open_ir > 0 && eligible_ir > 0)\r\n                            ? 'red check'\r\n                            : 'green check',\r\n                    }\r\n                } else {\r\n                    return {\r\n                        text: '-',\r\n                        colSpan: 2\r\n                    }\r\n                }\r\n            case 'Out':\r\n                return {\r\n                    text: !matchup?.matchup_id || !lineup_check\r\n                        ? '-'\r\n                        : lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Out').length > 0\r\n                            ? lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Out').length\r\n                            : '√',\r\n                    colSpan: 2,\r\n                    className: !matchup?.matchup_id || !lineup_check\r\n                        ? ''\r\n                        : lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Out').length > 0\r\n                            ? 'red check'\r\n                            : 'green check'\r\n                }\r\n            case 'Doubtful':\r\n                return {\r\n                    text: !matchup?.matchup_id || !lineup_check\r\n                        ? '-'\r\n                        : lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Doubtful').length > 0\r\n                            ? lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Doubtful').length\r\n                            : '√',\r\n                    colSpan: 2,\r\n                    className: !matchup?.matchup_id || !lineup_check\r\n                        ? ''\r\n                        : lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Doubtful').length > 0\r\n                            ? 'red check'\r\n                            : 'green check'\r\n                }\r\n            case 'Ques':\r\n                return {\r\n                    text: !matchup?.matchup_id || !lineup_check\r\n                        ? '-'\r\n                        : lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Questionable').length > 0\r\n                            ? lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Questionable').length\r\n                            : '√',\r\n                    colSpan: 2,\r\n                    className: !matchup?.matchup_id || !lineup_check\r\n                        ? ''\r\n                        : lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Questionable').length > 0\r\n                            ? 'red check'\r\n                            : 'green check'\r\n                }\r\n            case 'IR':\r\n                return {\r\n                    text: !matchup?.matchup_id || !lineup_check\r\n                        ? '-'\r\n                        : lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'IR').length > 0\r\n                            ? lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'IR').length\r\n                            : '√',\r\n                    colSpan: 2,\r\n                    className: !matchup?.matchup_id || !lineup_check\r\n                        ? ''\r\n                        : lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'IR').length > 0\r\n                            ? 'red check'\r\n                            : 'green check'\r\n                }\r\n            case 'Sus':\r\n                return {\r\n                    text: !matchup?.matchup_id || !lineup_check\r\n                        ? '-'\r\n                        : lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Sus').length > 0\r\n                            ? lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Sus').length\r\n                            : '√',\r\n                    colSpan: 2,\r\n                    className: !matchup?.matchup_id || !lineup_check\r\n                        ? ''\r\n                        : lineup_check.filter(x => projections[week][x.current_player]?.injury_status === 'Sus').length > 0\r\n                            ? 'red check'\r\n                            : 'green check'\r\n                }\r\n            case 'Opt-Act':\r\n                return {\r\n                    text: opt_proj === act_proj\r\n                        ? '√'\r\n                        : (act_proj - opt_proj).toFixed(2),\r\n                    colSpan: 2,\r\n                    className: opt_proj === act_proj\r\n                        ? 'green'\r\n                        : 'red'\r\n                }\r\n            default:\r\n                return {\r\n                    text: '-',\r\n                    colSpan: 2\r\n                }\r\n        }\r\n    } else {\r\n        return {\r\n            text: '-',\r\n            colSpan: 2\r\n        }\r\n    }\r\n}\r\n\r\nexport const getColumnValuePrev = (column, league_id, matchup_user, matchup_opp, act_median, lineupChecks, week) => {\r\n    const proj_score_user_actual = lineupChecks[week]?.[league_id]?.lc_user?.proj_score_actual;\r\n    const proj_score_opp_actual = lineupChecks[week]?.[league_id]?.lc_opp?.proj_score_actual;\r\n\r\n\r\n    const bench_points = matchup_user?.players\r\n        ?.filter(player_id => !matchup_user.starters.includes(player_id))\r\n        ?.reduce((acc, cur) => acc + matchup_user.players_points[cur], 0)\r\n\r\n    const total_points = matchup_user?.players\r\n        ?.reduce((acc, cur) => acc + matchup_user.players_points[cur], 0)\r\n\r\n    switch (column) {\r\n        case 'For':\r\n            return {\r\n                text: matchup_user?.points?.toFixed(1),\r\n                colSpan: 2\r\n            };\r\n        case 'Against':\r\n            return {\r\n                text: matchup_opp?.points?.toFixed(1),\r\n                colSpan: 2\r\n            };\r\n        case 'Median':\r\n            return {\r\n                text: parseInt(act_median) && act_median.toFixed(2) || '-',\r\n                colSpan: 2\r\n            }\r\n        case 'Optimal For':\r\n            return {\r\n                text: proj_score_user_actual?.toFixed(1),\r\n                colSpan: 2\r\n            };\r\n        case 'Optimal Against':\r\n            return {\r\n                text: proj_score_opp_actual?.toFixed(1),\r\n                colSpan: 2\r\n            };\r\n        case 'Bench Points':\r\n            return {\r\n                text: bench_points?.toFixed(1) || '-',\r\n                colSpan: 2\r\n            }\r\n        case 'Total Points':\r\n            return {\r\n                text: total_points?.toFixed(1) || '-',\r\n                colSpan: 2\r\n            }\r\n        default:\r\n            return {\r\n                text: '-',\r\n                colSpan: 2\r\n            }\r\n    }\r\n}","import taxi from '../../../../images/taxi.png';\r\n\r\nconst IncludeTaxiFilter = ({includeTaxi, setIncludeTaxi}) => {\r\n    return <div key={'include_taxi'} className='relative click' onClick={() => setIncludeTaxi(!includeTaxi)}>\r\n        <img\r\n            src={taxi}\r\n            className='thumbnail icon'\r\n            alt='include_taxi'\r\n\r\n        />\r\n        {!includeTaxi && <i className=\"fa-solid fa-ban\"></i>}\r\n    </div>\r\n}\r\n\r\nexport default IncludeTaxiFilter;\r\n\r\n\r\n","const TeamFilter = (filterTeam, setFilterTeam) => {\r\n    const nfl_teams = [\r\n        'ARI', 'ATL', 'BAL', 'BUF', 'CAR', 'CHI', 'CIN', 'CLE', 'DAL', 'DEN',\r\n        'DET', 'GB', 'HOU', 'IND', 'JAX', 'KC', 'LV', 'LAC', 'LAR', 'MIA', 'MIN',\r\n        'NE', 'NO', 'NYG', 'NYJ', 'PHI', 'PIT', 'SF', 'SEA', 'TB', 'TEN', 'WAS'\r\n    ]\r\n\r\n    return <span className=\"team\" key={'team'}>\r\n        <label>\r\n            <img\r\n                className={'thumbnail icon'}\r\n                alt='filter_team'\r\n                src={`https://a.espncdn.com/combiner/i?img=/i/teamlogos/nfl/500/${filterTeam}.png`}\r\n                onError={(e) => { return e.target.src = `https://a.espncdn.com/combiner/i?img=/i/teamlogos/leagues/500/nfl.png` }}\r\n            />\r\n            <select\r\n                className=\"hidden_behind click\"\r\n                onChange={(e) => setFilterTeam(e.target.value)}\r\n                value={filterTeam}\r\n            >\r\n                <option>All</option>\r\n                {nfl_teams.map(team =>\r\n                    <option key={team}>{team}</option>\r\n                )}\r\n            </select>\r\n        </label>\r\n    </span>\r\n}\r\n\r\nexport default TeamFilter;","import './FilterIcons.css';\r\nimport IncludeTaxiFilter from './IncludeTaxiFilter';\r\nimport TeamFilter from './TeamFilter';\r\n\r\nconst FilterIcons = ({type, ...props}) => {\r\n\r\n    switch(type) {\r\n        case 'taxi':\r\n            return <IncludeTaxiFilter {...props} />;\r\n        case 'team':\r\n            return <TeamFilter {...props} />;\r\n        default:\r\n            return null;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default FilterIcons;","import TableMain from \"../../COMMON/components/TableMain\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setStateLineups } from \"../redux/actions\";\r\nimport { getColumnValue, getColumnValuePrev } from '../services/helpers/getColumns';\r\nimport { filterLeagues } from '../../COMMON/services/helpers/filterLeagues';\r\nimport FilterIcons from \"../../COMMON/components/FilterIcons\";\r\nimport LoadingIcon from '../../COMMON/components/LoadingIcon';\r\n\r\nconst LineupChecks = ({ secondaryTable }) => {\r\n    const dispatch = useDispatch();\r\n    const { state, projections } = useSelector(state => state.common);\r\n    const { leagues, type1, type2 } = useSelector(state => state.user);\r\n    const {\r\n        includeTaxi,\r\n        week,\r\n        lineupChecks,\r\n        column1,\r\n        column2,\r\n        column3,\r\n        column4,\r\n        column1_prev,\r\n        column2_prev,\r\n        column3_prev,\r\n        column4_prev,\r\n        itemActive,\r\n        page,\r\n        searched,\r\n        playerLineupDict,\r\n        primaryContent,\r\n        sortBy,\r\n        filters\r\n    } = useSelector(state => state.lineups);\r\n\r\n    const hash = `${includeTaxi}-${true}`\r\n\r\n    const columnOptions = week < state.week\r\n        ? [\r\n            'For',\r\n            'Against',\r\n            'Optimal For',\r\n            'Optimal Against',\r\n            'Bench Points',\r\n            'Total Points',\r\n            'Median'\r\n        ]\r\n        : [\r\n            'Proj FP',\r\n            'Proj FPA',\r\n            'Proj FP (Opt)',\r\n            'Proj FPA (Opt)',\r\n            'Proj Median',\r\n            'Suboptimal',\r\n            'Early/Late Flex',\r\n            'Non QB in SF',\r\n            'Open Roster',\r\n            'Open IR',\r\n            'Open Taxi',\r\n            'Out',\r\n            'Doubtful',\r\n            'Ques',\r\n            'IR',\r\n            'Sus',\r\n            'Opt-Act',\r\n            'Rank',\r\n            'Opp Rank'\r\n        ];\r\n\r\n    const lineups_headers = [\r\n        [\r\n            {\r\n                text: 'League',\r\n                colSpan: 6,\r\n                rowSpan: 2,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: 'W/L',\r\n                className: 'half',\r\n                colSpan: 1,\r\n                rowSpan: 2\r\n            },\r\n            {\r\n                text: week < state.week ? 'Results' : '#Slots',\r\n                colSpan: 8,\r\n                className: 'half'\r\n            }\r\n\r\n        ],\r\n        [\r\n            {\r\n                text: <p className=\"select\">{week < state.week ? column1_prev : column1}\r\n                    <select\r\n                        value={week < state.week ? column1_prev : column1}\r\n                        className=\"hidden_behind click\"\r\n                        onChange={(e) => dispatch(setStateLineups({ [week < state.week ? 'column1_prev' : 'column1']: e.target.value }, 'LINEUPS'))}\r\n                    >\r\n                        {\r\n                            columnOptions\r\n                                .filter(column => (\r\n                                    week < state.week\r\n                                        ? ![column2_prev, column3_prev, column4_prev].includes(column)\r\n                                        : ![column2, column3, column4].includes(column)))\r\n                                .map(column => {\r\n                                    return <option key={column}>{column}</option>\r\n                                })\r\n                        }\r\n                    </select>\r\n                </p>,\r\n                colSpan: 2,\r\n                className: 'small half left'\r\n            },\r\n            {\r\n                text: <p className=\"select\">{week < state.week ? column2_prev : column2}\r\n                    <select\r\n                        value={week < state.week ? column2_prev : column2}\r\n                        className=\"hidden_behind click\"\r\n                        onChange={(e) => dispatch(setStateLineups({ [week < state.week ? 'column2_prev' : 'column2']: e.target.value }, 'LINEUPS'))}\r\n                    >\r\n                        {\r\n                            columnOptions\r\n                                .filter(column => (\r\n                                    week < state.week\r\n                                        ? ![column1_prev, column3_prev, column4_prev].includes(column)\r\n                                        : ![column1, column3, column4].includes(column)))\r\n                                .map(column => {\r\n                                    return <option key={column}>{column}</option>\r\n                                })\r\n                        }\r\n                    </select>\r\n                </p>,\r\n                colSpan: 2,\r\n                className: 'small half'\r\n            },\r\n            {\r\n                text: <p className=\"select\">{week < state.week ? column3_prev : column3}\r\n                    <select\r\n                        value={week < state.week ? column3_prev : column3}\r\n                        className=\"hidden_behind click\"\r\n                        onChange={(e) => dispatch(setStateLineups({ [week < state.week ? 'column3_prev' : 'column3']: e.target.value }, 'LINEUPS'))}\r\n                    >\r\n                        {\r\n                            columnOptions\r\n                                .filter(column => (\r\n                                    week < state.week\r\n                                        ? ![column1_prev, column2_prev, column4_prev].includes(column)\r\n                                        : ![column1, column2, column4].includes(column)))\r\n                                .map(column => {\r\n                                    return <option key={column}>{column}</option>\r\n                                })\r\n                        }\r\n                    </select>\r\n                </p>,\r\n                colSpan: 2,\r\n                className: 'small half'\r\n            },\r\n            {\r\n                text: <p className=\"select\">{week < state.week ? column4_prev : column4}\r\n                    <select\r\n                        value={week < state.week ? column4_prev : column4}\r\n                        className=\"hidden_behind click\"\r\n                        onChange={(e) => dispatch(setStateLineups({ [week < state.week ? 'column4_prev' : 'column4']: e.target.value }, 'LINEUPS'))}\r\n                    >\r\n                        {\r\n                            columnOptions\r\n                                .filter(column => (\r\n                                    week < state.week\r\n                                        ? ![column1_prev, column2_prev, column3_prev].includes(column)\r\n                                        : ![column1, column2, column3].includes(column)))\r\n                                .map(column => {\r\n                                    return <option key={column}>{column}</option>\r\n                                })\r\n                        }\r\n                    </select></p>,\r\n                colSpan: 2,\r\n                className: 'small half end'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const lineups_body = filterLeagues(leagues, type1, type2)\r\n        ?.filter(l => !searched.id || searched.id === l.league_id)\r\n        ?.map(league => {\r\n            if (week >= state.week) {\r\n\r\n                const lineup_check_user = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.lineup_check;\r\n\r\n                const matchup_user = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.matchup;\r\n                const optimal_lineup = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.optimal_lineup\r\n\r\n                const proj_score_user_optimal = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.proj_score_optimal;\r\n                const proj_score_user_actual = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.proj_score_actual;\r\n\r\n                const lineup_check_opp = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.lineup_check;\r\n\r\n                const matchup_opp = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.matchup;\r\n                const optimal_lineup_opp = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.optimal_lineup\r\n\r\n                const proj_score_opp_optimal = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.proj_score_optimal;\r\n                const proj_score_opp_actual = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.proj_score_actual;\r\n\r\n                const opp_roster = league.rosters.find(r => r.roster_id === matchup_opp?.roster_id)\r\n\r\n\r\n                const players_projections = {\r\n                    ...lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.players_projections,\r\n                    ...lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.players_projections\r\n                }\r\n\r\n                const proj_median = lineupChecks[week]?.[hash]?.[league.league_id]?.proj_median\r\n\r\n                return {\r\n                    id: league.league_id,\r\n                    search: {\r\n                        text: league.name,\r\n                        image: {\r\n                            src: league.avatar,\r\n                            alt: league.name,\r\n                            type: 'league'\r\n                        }\r\n                    },\r\n                    list: [\r\n                        {\r\n                            text: league.name,\r\n                            colSpan: 6,\r\n                            className: 'left',\r\n                            image: {\r\n                                src: league.avatar,\r\n                                alt: league.name,\r\n                                type: 'league'\r\n                            }\r\n                        },\r\n                        {\r\n                            text: <>\r\n                                {\r\n                                    (lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user && lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp)\r\n                                        ? league.settings.best_ball === 1\r\n                                            ? proj_score_user_optimal > proj_score_opp_optimal\r\n                                                ? 'W'\r\n                                                : proj_score_user_optimal < proj_score_opp_optimal\r\n                                                    ? 'L'\r\n                                                    : '-'\r\n                                            : proj_score_user_actual > proj_score_opp_actual\r\n                                                ? 'W'\r\n                                                : proj_score_user_actual < proj_score_opp_actual\r\n                                                    ? 'L'\r\n                                                    : '-'\r\n                                        : '-'\r\n\r\n                                }\r\n                                {\r\n                                    lineupChecks[week]?.[hash]?.[league.league_id]?.median_win > 0\r\n                                        ? <i className=\"fa-solid fa-trophy\"></i>\r\n                                        : lineupChecks[week]?.[hash]?.[league.league_id]?.median_loss > 0\r\n                                            ? <i className=\"fa-solid fa-poop\"></i>\r\n                                            : ''\r\n                                }\r\n                            </>,\r\n                            colSpan: 1,\r\n                            className: (lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user && lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp)\r\n                                ? league.settings.best_ball !== 1\r\n                                    ? proj_score_user_actual > proj_score_opp_actual\r\n                                        ? 'greenb'\r\n                                        : proj_score_user_actual < proj_score_opp_actual\r\n                                            ? 'redb'\r\n                                            : '-'\r\n                                    : proj_score_user_optimal > proj_score_opp_optimal\r\n                                        ? 'greenb'\r\n                                        : proj_score_user_optimal < proj_score_opp_optimal\r\n                                            ? 'redb'\r\n                                            : '-'\r\n                                : '-',\r\n                        },\r\n                        {\r\n                            ...getColumnValue(column1, matchup_user, lineup_check_user, league, proj_score_user_optimal, proj_score_user_actual, proj_score_opp_optimal, proj_score_opp_actual, proj_median, projections, week, opp_roster)\r\n                        },\r\n                        {\r\n                            ...getColumnValue(column2, matchup_user, lineup_check_user, league, proj_score_user_optimal, proj_score_user_actual, proj_score_opp_optimal, proj_score_opp_actual, proj_median, projections, week, opp_roster)\r\n                        },\r\n                        {\r\n                            ...getColumnValue(column3, matchup_user, lineup_check_user, league, proj_score_user_optimal, proj_score_user_actual, proj_score_opp_optimal, proj_score_opp_actual, proj_median, projections, week, opp_roster)\r\n                        },\r\n                        {\r\n                            ...getColumnValue(column4, matchup_user, lineup_check_user, league, proj_score_user_optimal, proj_score_user_actual, proj_score_opp_optimal, proj_score_opp_actual, proj_median, projections, week, opp_roster)\r\n                        }\r\n                    ],\r\n                    secondary_table: secondaryTable({\r\n                        league,\r\n                        matchup_user,\r\n                        matchup_opp,\r\n                        lineup_check: lineup_check_user,\r\n                        lineup_check_opp,\r\n                        optimal_lineup,\r\n                        optimal_lineup_opp,\r\n                        players_projections,\r\n                        proj_score_user_actual,\r\n                        proj_score_user_optimal,\r\n                        proj_score_opp_actual,\r\n                        proj_score_opp_optimal,\r\n                        opp_username: opp_roster?.username || 'Orphan',\r\n                        opp_avatar: opp_roster?.avatar,\r\n                        proj_median\r\n                    })\r\n                }\r\n            } else {\r\n                console.log('BEFORE')\r\n                const lc_league = week < state.week ? lineupChecks[week]?.[league.league_id] : lineupChecks[week]?.[hash]?.[league.league_id]\r\n                const matchup_user = lc_league?.lc_user?.matchup;\r\n                const matchup_opp = lc_league?.lc_opp?.matchup;\r\n\r\n                const players_projections = {\r\n                    ...lineupChecks[week]?.[league.league_id]?.lc_user?.players_projections,\r\n                    ...lineupChecks[week]?.[league.league_id]?.lc_opp?.players_projections\r\n                }\r\n\r\n                const act_median = lc_league?.act_median\r\n\r\n                const proj_score_user_optimal = lc_league?.lc_user?.proj_score_optimal;\r\n\r\n                const proj_score_opp_optimal = lc_league?.lc_opp?.proj_score_optimal;\r\n                return {\r\n                    id: league.league_id,\r\n                    search: {\r\n                        text: league.name,\r\n                        image: {\r\n                            src: league.avatar,\r\n                            alt: league.name,\r\n                            type: 'league'\r\n                        }\r\n                    },\r\n                    list: [\r\n                        {\r\n                            text: league.name,\r\n                            colSpan: 6,\r\n                            className: 'left',\r\n                            image: {\r\n                                src: league.avatar,\r\n                                alt: league.name,\r\n                                type: 'league'\r\n                            }\r\n                        },\r\n                        {\r\n                            text: <>\r\n\r\n                                {\r\n\r\n                                    lc_league?.win\r\n                                        ? 'W'\r\n                                        : lc_league?.loss\r\n                                            ? 'L'\r\n                                            : lc_league?.tie\r\n                                                ? 'T'\r\n                                                : '-'\r\n\r\n                                }\r\n                                {\r\n                                    lc_league?.median_win === 1\r\n                                        ? <i className=\"fa-solid fa-trophy\"></i>\r\n                                        : lc_league?.median_loss === 1\r\n                                            ? <i className=\"fa-solid fa-poop\"></i>\r\n                                            : null\r\n                                }\r\n                            </>,\r\n                            colSpan: 1,\r\n                            className: lc_league?.win\r\n                                ? 'greenb'\r\n                                : lc_league?.loss\r\n                                    ? 'redb'\r\n                                    : lc_league?.tie\r\n                                        ? '-'\r\n                                        : '-'\r\n                        },\r\n                        {\r\n                            ...getColumnValuePrev(column1_prev, league.league_id, matchup_user, matchup_opp, act_median, lineupChecks, week)\r\n                        },\r\n                        {\r\n                            ...getColumnValuePrev(column2_prev, league.league_id, matchup_user, matchup_opp, act_median, lineupChecks, week)\r\n                        },\r\n                        {\r\n                            ...getColumnValuePrev(column3_prev, league.league_id, matchup_user, matchup_opp, act_median, lineupChecks, week)\r\n                        },\r\n                        {\r\n                            ...getColumnValuePrev(column4_prev, league.league_id, matchup_user, matchup_opp, act_median, lineupChecks, week)\r\n                        }\r\n                    ],\r\n                    secondary_table: secondaryTable({\r\n                        league,\r\n                        matchup_user,\r\n                        matchup_opp,\r\n                        players_projections,\r\n                        proj_score_user_optimal,\r\n                        proj_score_opp_optimal\r\n                    })\r\n                }\r\n            }\r\n        })\r\n\r\n    return (week < state.week && !lineupChecks?.[week])\r\n        || (week >= state.week && !lineupChecks?.[week]?.[hash])\r\n        ? <LoadingIcon />\r\n        : <TableMain\r\n            type={'primary'}\r\n            headers={lineups_headers}\r\n            body={lineups_body}\r\n            page={page}\r\n            setPage={(value) => dispatch(setStateLineups({ page: value }))}\r\n            itemActive={itemActive}\r\n            setItemActive={(value) => dispatch(setStateLineups({ itemActive: value }))}\r\n            search={true}\r\n            searched={searched}\r\n            setSearched={(value) => dispatch(setStateLineups({ searched: value }))}\r\n            options1={[\r\n                <FilterIcons\r\n                    type={'taxi'}\r\n                    includeTaxi={includeTaxi}\r\n                    setIncludeTaxi={(value) => dispatch(setStateLineups({ includeTaxi: value }))}\r\n                />\r\n            ]}\r\n        />\r\n}\r\n\r\nexport default LineupChecks;","import TableMain from \"../../COMMON/components/TableMain\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setStateLineups } from \"../redux/actions\";\r\nimport { filterLeagues } from \"../../COMMON/services/helpers/filterLeagues\";\r\n\r\nconst StartersBench = ({ secondaryTable }) => {\r\n    const dispatch = useDispatch();\r\n    const { allplayers, state } = useSelector(state => state.common);\r\n    const { username, type1, type2 } = useSelector(state => state.user); \r\n    const { page, itemActive, searched, filters, playerLineupDict, sortBy } = useSelector(state => state.lineups);\r\n\r\n    const players_headers = [\r\n        [\r\n            {\r\n                text: 'Player',\r\n                colSpan: 3,\r\n                rowSpan: 2,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: username,\r\n                colSpan: 2,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: 'Opp',\r\n                colSpan: 2,\r\n                className: 'half'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                text: 'Start',\r\n                colSpan: 1,\r\n                onClick: () => dispatch(setStateLineups({ sortBy: 'start' })),\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: 'Bench',\r\n                colSpan: 1,\r\n                onClick: () => dispatch(setStateLineups({ sortBy: 'bench' })),\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: 'Start',\r\n                colSpan: 1,\r\n                onClick: () => dispatch(setStateLineups({ sortBy: 'start_opp' })),\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: 'Bench',\r\n                colSpan: 1,\r\n                onClick: () => dispatch(setStateLineups({ sortBy: 'bench_opp' })),\r\n                className: 'half'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const players_body = Object.keys(playerLineupDict)\r\n        ?.filter(player_id => (\r\n            (!searched.id || searched.id === player_id)\r\n            && (\r\n                filters.position === allplayers[player_id]?.position\r\n                || filters.position.split('/').includes(allplayers[player_id]?.position?.slice(0, 1))\r\n            ) && (\r\n                filters.team === 'All' || allplayers[player_id]?.team === filters.team\r\n            ) && (\r\n                filters.draftClass === 'All' || parseInt(filters.draftClass) === (state.league_season - allplayers[parseInt(player_id)]?.years_exp)\r\n            )\r\n        ))\r\n        ?.sort((a, b) => filterLeagues(playerLineupDict[b][sortBy], type1, type2).length - filterLeagues(playerLineupDict[a][sortBy], type1, type2).length)\r\n        ?.map(player_id => {\r\n            const start = filterLeagues(playerLineupDict[player_id]?.start || [], type1, type2)\r\n            const bench = filterLeagues(playerLineupDict[player_id]?.bench || [], type1, type2)\r\n            const start_opp = filterLeagues(playerLineupDict[player_id]?.start_opp || [], type1, type2)\r\n            const bench_opp = filterLeagues(playerLineupDict[player_id]?.bench_opp || [], type1, type2)\r\n\r\n            return {\r\n                id: player_id,\r\n                search: {\r\n                    text: allplayers[player_id]?.full_name,\r\n                    image: {\r\n                        src: player_id,\r\n                        alt: 'player',\r\n                        type: 'player'\r\n                    }\r\n                },\r\n                list: [\r\n                    {\r\n                        text: allplayers[player_id]?.full_name,\r\n                        image: {\r\n                            src: player_id,\r\n                            alt: 'player',\r\n                            type: 'player'\r\n                        },\r\n                        className: 'left',\r\n                        colSpan: 3\r\n                    },\r\n                    {\r\n                        text: start.length.toString(),\r\n                        colSpan: 1\r\n                    },\r\n                    {\r\n                        text: bench.length.toString(),\r\n                        colSpan: 1\r\n                    },\r\n                    {\r\n                        text: start_opp.length.toString(),\r\n                        colSpan: 1\r\n                    },\r\n                    {\r\n                        text: bench_opp.length.toString(),\r\n                        colSpan: 1\r\n                    }\r\n                ],\r\n                secondary_table: secondaryTable({\r\n                    start,\r\n                    bench,\r\n                    start_opp,\r\n                    bench_opp\r\n                })\r\n            }\r\n        })\r\n\r\n    return <TableMain\r\n        type={'primary'}\r\n        headers={players_headers}\r\n        body={players_body}\r\n        page={page}\r\n        setPage={(value) => dispatch(setStateLineups({ page: value }))}\r\n        itemActive={itemActive}\r\n        setItemActive={(value) => dispatch(setStateLineups({ itemActive: value }))}\r\n        search={true}\r\n        searched={searched}\r\n        setSearched={(value) => dispatch(setStateLineups({ searched: value }))}\r\n\r\n    />\r\n}\r\n\r\nexport default StartersBench;","export const getRecordDict = ({ week_to_fetch, state, leagues, allplayers, schedule, projections, includeTaxi, includeLocked, rankings, user_id, league_ids }) => {\r\n\r\n    console.log({ week_to_fetch, state, leagues, allplayers, schedule, projections, includeTaxi, includeLocked, rankings, user_id })\r\n\r\n    const getPlayerScore = (stats_array, scoring_settings, total = false) => {\r\n\r\n        let total_breakdown = {};\r\n\r\n        stats_array?.map(stats_game => {\r\n            Object.keys(stats_game?.stats || {})\r\n                .filter(x => Object.keys(scoring_settings).includes(x))\r\n                .map(key => {\r\n                    if (!total_breakdown[key]) {\r\n                        total_breakdown[key] = {\r\n                            stats: 0,\r\n                            points: 0\r\n                        }\r\n                    }\r\n                    total_breakdown[key] = {\r\n                        stats: total_breakdown[key].stats + stats_game.stats[key],\r\n                        points: total_breakdown[key].points + (stats_game.stats[key] * scoring_settings[key])\r\n                    }\r\n                })\r\n        })\r\n\r\n        return total\r\n            ? Object.keys(total_breakdown).reduce((acc, cur) => acc + total_breakdown[cur].points, 0)\r\n            : total_breakdown;\r\n    }\r\n\r\n    const matchTeam = (team) => {\r\n        const team_abbrev = {\r\n            SFO: 'SF',\r\n            JAC: 'JAX',\r\n            KCC: 'KC',\r\n            TBB: 'TB',\r\n            GBP: 'GB',\r\n            NEP: 'NE',\r\n            LVR: 'LV',\r\n            NOS: 'NO'\r\n        }\r\n\r\n\r\n        return team_abbrev[team] || team\r\n    }\r\n\r\n    const getLineupCheck = (matchup, league, stateAllPlayers, weeklyRankings, projections, schedule, includeTaxi, includeLocked, returnSuboptimal = false) => {\r\n\r\n        const position_map = {\r\n            'QB': ['QB'],\r\n            'RB': ['RB', 'FB'],\r\n            'WR': ['WR'],\r\n            'TE': ['TE'],\r\n            'FLEX': ['RB', 'FB', 'WR', 'TE'],\r\n            'SUPER_FLEX': ['QB', 'RB', 'FB', 'WR', 'TE'],\r\n            'WRRB_FLEX': ['RB', 'FB', 'WR'],\r\n            'REC_FLEX': ['WR', 'TE']\r\n        }\r\n        const position_abbrev = {\r\n            'QB': 'QB',\r\n            'RB': 'RB',\r\n            'WR': 'WR',\r\n            'TE': 'TE',\r\n            'SUPER_FLEX': 'SF',\r\n            'FLEX': 'WRT',\r\n            'WRRB_FLEX': 'W R',\r\n            'WRRB_WRT': 'W R',\r\n            'REC_FLEX': 'W T'\r\n        }\r\n        const starting_slots = league.roster_positions.filter(x => Object.keys(position_map).includes(x))\r\n\r\n        const roster = league.rosters.find(r => r.roster_id === matchup.roster_id)\r\n\r\n        let players = []\r\n\r\n        matchup?.players\r\n            ?.filter(player_id => includeTaxi ? true : !(roster?.taxi || []).includes(player_id))\r\n            ?.map(player_id => {\r\n                const playing = schedule\r\n                    ?.find(m => m.team.find(t => matchTeam(t.id) === stateAllPlayers[player_id]?.team) || !stateAllPlayers[player_id]?.team)\r\n\r\n                let kickoff = new Date(parseInt(schedule\r\n                    ?.find(m => m.team.find(t => matchTeam(t.id) === (stateAllPlayers[player_id]?.team)))\r\n                    ?.kickoff * 1000)).getTime()\r\n\r\n                players.push({\r\n                    id: player_id,\r\n                    kickoff: kickoff,\r\n                    rank: weeklyRankings\r\n                        ? !playing\r\n                            ? 1001\r\n                            : weeklyRankings[player_id]?.prevRank\r\n                                ? matchup.starters?.includes(player_id)\r\n                                    ? weeklyRankings[player_id]?.prevRank\r\n                                    : weeklyRankings[player_id]?.prevRank + 1\r\n                                : matchup.starters?.includes(player_id)\r\n                                    ? 999\r\n                                    : 1000\r\n                        : ((getPlayerScore([projections[player_id]], league.scoring_settings, true) || 0) * (parseInt(playing?.gameSecondsRemaining || 0) / 3600))\r\n                        + (matchup?.players_points[player_id] || 0)\r\n\r\n                })\r\n            })\r\n\r\n        const getOptimalLineup = () => {\r\n            let optimal_lineup = []\r\n            let player_ranks_filtered = players\r\n            starting_slots.map((slot, index) => {\r\n\r\n                const kickoff = players.find(p => p.id === matchup.starters?.[index])?.kickoff\r\n\r\n                const slot_options = player_ranks_filtered\r\n                    .filter(x =>\r\n                        (\r\n                            position_map[slot].includes(stateAllPlayers[x.id]?.position)\r\n                            || position_map[slot].some(p => stateAllPlayers[x.id]?.fantasy_positions?.includes(p))\r\n                        )\r\n                        && (\r\n                            !includeLocked || x.kickoff > new Date().getTime() || league.settings.best_ball === 1\r\n                        )\r\n                    )\r\n                    .sort(\r\n                        (a, b) => weeklyRankings ? a.rank - b.rank : b.rank - a.rank\r\n                    )\r\n\r\n                let optimal_player;\r\n\r\n                if ((includeLocked && league.settings.best_ball !== 1 && kickoff < new Date().getTime())) {\r\n\r\n                    optimal_player = matchup.starters?.[index]\r\n                } else {\r\n                    optimal_player = slot_options[0]?.id\r\n                }\r\n\r\n                player_ranks_filtered = player_ranks_filtered.filter(x => x.id !== optimal_player)\r\n\r\n                optimal_lineup.push({\r\n                    slot: position_abbrev[slot],\r\n                    player: optimal_player\r\n                })\r\n            })\r\n\r\n            return optimal_lineup\r\n        }\r\n\r\n        let optimal_lineup = matchup ? getOptimalLineup() : []\r\n\r\n        const findSuboptimal = () => {\r\n            let lineup_check = []\r\n            starting_slots.map((slot, index) => {\r\n                const cur_id = (matchup?.starters || [])[index]\r\n                const isInOptimal = optimal_lineup.find(x => x.player === cur_id)\r\n                const kickoff = players.find(p => p.id === matchup.starters?.[index])?.kickoff\r\n\r\n                const gametime = new Date(kickoff)\r\n                const day = gametime.getDay() <= 2 ? gametime.getDay() + 7 : gametime.getDay()\r\n                const hour = gametime.getHours()\r\n                const timeslot = parseFloat(day + '.' + hour)\r\n                const slot_options = matchup?.players\r\n                    ?.filter(x =>\r\n                        !(matchup.starters || []).includes(x) &&\r\n                        position_map[slot].includes(stateAllPlayers[x]?.position)\r\n                    )\r\n                    || []\r\n                const earlyInFlex = matchup.starters?.find((x, starter_index) => {\r\n                    const alt_kickoff = players.find(p => p.id === x)?.kickoff\r\n\r\n                    const alt_gametime = new Date(alt_kickoff)\r\n                    const alt_day = alt_gametime.getDay() <= 2 ? alt_gametime.getDay() + 7 : alt_gametime.getDay()\r\n                    const alt_hour = alt_gametime.getHours()\r\n                    const alt_timeslot = parseFloat(alt_day + '.' + alt_hour)\r\n\r\n                    return alt_kickoff > new Date().getTime()\r\n                        && kickoff > new Date().getTime()\r\n                        && alt_kickoff > (kickoff + 30 * 60 * 1000)\r\n                        && position_map[slot].includes(stateAllPlayers[x]?.position)\r\n                        && position_map[starting_slots[starter_index]].includes(stateAllPlayers[cur_id]?.position)\r\n                        && position_map[league.roster_positions[starter_index]].length < position_map[slot].length\r\n\r\n\r\n                })\r\n\r\n                const lateNotInFlex = matchup.starters?.find((x, starter_index) => {\r\n                    const alt_kickoff = players.find(p => p.id === x)?.kickoff\r\n\r\n                    const alt_gametime = new Date(alt_kickoff)\r\n                    const alt_day = alt_gametime.getDay() <= 2 ? alt_gametime.getDay() + 7 : alt_gametime.getDay()\r\n                    const alt_hour = alt_gametime.getHours()\r\n                    const alt_timeslot = parseFloat(alt_day + '.' + alt_hour)\r\n\r\n                    return alt_kickoff > new Date().getTime()\r\n                        && kickoff > new Date().getTime()\r\n                        && (alt_kickoff + 30 * 60 * 1000) < kickoff\r\n                        && position_map[slot].includes(stateAllPlayers[x]?.position)\r\n                        && position_map[starting_slots[starter_index]].includes(stateAllPlayers[cur_id]?.position)\r\n                        && position_map[league.roster_positions[starter_index]].length > position_map[slot].length\r\n                })\r\n\r\n                return lineup_check.push({\r\n                    index: index,\r\n                    slot: position_abbrev[slot] || 'IDP',\r\n                    slot_index: `${position_abbrev[slot]}_${index}`,\r\n                    current_player: (matchup?.starters || [])[index] || '0',\r\n                    notInOptimal: !isInOptimal,\r\n                    earlyInFlex: earlyInFlex,\r\n                    lateNotInFlex: lateNotInFlex,\r\n                    nonQBinSF: position_map[slot].includes('QB') && stateAllPlayers[(matchup?.starters || [])[index]]?.position !== 'QB',\r\n                    slot_options: slot_options,\r\n                    player: matchup?.starters && stateAllPlayers[matchup?.starters[index]]?.full_name || \"0\",\r\n                    timeslot: timeslot\r\n\r\n                })\r\n            })\r\n            return lineup_check\r\n        }\r\n\r\n        const lineup_check = matchup && returnSuboptimal ? findSuboptimal() : [];\r\n\r\n        const players_projections = Object.fromEntries(players.map(player => [player.id, parseFloat(player.rank)]));\r\n\r\n        const optimalPlayers = optimal_lineup?.map(x => x.player);\r\n\r\n        return {\r\n            players_projections: players_projections,\r\n            starting_slots: starting_slots,\r\n            optimal_lineup: optimal_lineup,\r\n            lineup_check: lineup_check,\r\n            matchup: matchup,\r\n            proj_score_actual: Object.keys(players_projections || {})\r\n                .filter(player_id => matchup.starters?.includes(player_id))\r\n                .reduce((acc, cur) => acc + (players_projections || {})[cur], 0),\r\n            proj_score_optimal: Object.keys(players_projections || {})\r\n                .filter(player_id => optimalPlayers?.includes(player_id))\r\n                .reduce((acc, cur) => acc + ((players_projections || {})[cur] || 0), 0)\r\n\r\n        }\r\n    }\r\n\r\n    const getLineupChecksPrevWeek = (week) => {\r\n        let lineupChecks_week = {};\r\n\r\n        leagues\r\n            .filter(league => (!league_ids || league_ids?.includes(league.league_id)) && league[`matchups_${week}`])\r\n            .map(league => {\r\n                const matchup_user = league[`matchups_${week}`].find(m => m.roster_id === league.userRoster.roster_id);\r\n                const matchup_opp = league[`matchups_${week}`].find(m => m.matchup_id === matchup_user.matchup_id && m.roster_id !== league.userRoster.roster_id)\r\n\r\n                const lc_user = matchup_user && getLineupCheck(matchup_user, league, allplayers, rankings, projections[week], schedule[week], includeTaxi, includeLocked)\r\n                const lc_opp = matchup_opp && getLineupCheck(matchup_opp, league, allplayers, rankings, projections[week], schedule[week], includeTaxi, includeLocked)\r\n\r\n                let win, loss, tie;\r\n\r\n                if (week >= league.settings.start_week && matchup_user && matchup_opp) {\r\n                    if (lc_user?.matchup?.points > lc_opp?.matchup?.points) {\r\n                        win = 1;\r\n                        loss = 0;\r\n                        tie = 0;\r\n                    } else if (lc_user?.matchup?.points < lc_opp?.matchup?.points) {\r\n                        win = 0;\r\n                        loss = 1;\r\n                        tie = 0;\r\n                    } else {\r\n                        win = 0;\r\n                        loss = 0;\r\n                        tie = 1;\r\n                    }\r\n                } else {\r\n                    win = 0;\r\n                    loss = 0;\r\n                    tie = 0;\r\n                }\r\n\r\n\r\n                let median_win = 0;\r\n                let median_loss = 0;\r\n                let act_median = '-'\r\n\r\n                if (\r\n                    league.settings.league_average_match === 1\r\n                    && week >= league.settings.start_week\r\n                ) {\r\n                    const standings = league[`matchups_${week}`]\r\n                        ?.sort((a, b) => b.points - a.points)\r\n\r\n                    const pts_rank = standings\r\n                        ?.findIndex(m => {\r\n                            return m.roster_id === league.userRoster.roster_id\r\n                        })\r\n\r\n                    act_median = (\r\n                        standings[standings.length / 2].points\r\n                        + standings[(standings.length / 2) - 1].points\r\n                    ) / 2\r\n\r\n                    if (pts_rank + 1 <= (league.rosters.length / 2)) {\r\n                        median_win++\r\n                    } else {\r\n                        median_loss++\r\n                    }\r\n                }\r\n\r\n\r\n                return lineupChecks_week[league.league_id] = {\r\n                    name: league.name,\r\n                    avatar: league.avatar,\r\n                    lc_user: lc_user,\r\n                    lc_opp: lc_opp,\r\n                    win: win,\r\n                    loss: loss,\r\n                    tie: tie,\r\n                    median_win: median_win,\r\n                    median_loss: median_loss,\r\n                    act_median: act_median\r\n                }\r\n            })\r\n\r\n        return lineupChecks_week\r\n    }\r\n\r\n    const getLineupChecksWeek = (week) => {\r\n        let lineupChecks_week = {};\r\n\r\n        leagues\r\n            .filter(league => (!league_ids || league_ids?.includes(league.league_id)) && league[`matchups_${week}`])\r\n            .map(league => {\r\n                const recordType = league.settings.best_ball === 1 ? 'optimal' : 'actual';\r\n\r\n                const roster_id = league.rosters\r\n                    .find(roster => roster.user_id === user_id)?.roster_id\r\n\r\n                const matchup_user = league[`matchups_${week}`]\r\n                    .find(m => m.roster_id === roster_id)\r\n\r\n\r\n                const matchup_opp = league[`matchups_${week}`]\r\n                    .find(m => m.matchup_id === matchup_user.matchup_id && m.roster_id !== roster_id)\r\n\r\n                const lc_user = matchup_user && getLineupCheck(matchup_user, league, allplayers, rankings, projections[week], schedule[week], includeTaxi, includeLocked, true)\r\n                const lc_opp = matchup_opp && getLineupCheck(matchup_opp, league, allplayers, rankings, projections[week], schedule[week], includeTaxi, includeLocked, true)\r\n\r\n                const standings = league[`matchups_${week}`]\r\n                    ?.map(m => {\r\n                        return m && getLineupCheck(m, league, allplayers, rankings, projections[week], schedule[week], includeTaxi, includeLocked)\r\n                    })\r\n                    ?.sort((a, b) => {\r\n                        if (league.settings.best_ball === 1) {\r\n                            return b[`proj_score_optimal`] - a[`proj_score_optimal`]\r\n                        } else {\r\n                            return b[`proj_score_actual`] - a[`proj_score_actual`]\r\n                        }\r\n                    })\r\n\r\n                const pts_rank = standings\r\n                    ?.findIndex(lc => {\r\n                        return lc.matchup.roster_id === roster_id\r\n                    })\r\n\r\n                let win, loss, tie;\r\n\r\n                if (week >= league.settings.start_week && matchup_user && matchup_opp) {\r\n\r\n\r\n                    if (lc_user[`proj_score_${recordType}`] > lc_opp[`proj_score_${recordType}`]) {\r\n                        win = 1;\r\n                        loss = 0;\r\n                        tie = 0;\r\n                    } else if (lc_user[`proj_score_${recordType}`] < lc_opp[`proj_score_${recordType}`]) {\r\n                        win = 0;\r\n                        loss = 1;\r\n                        tie = 0;\r\n                    } else {\r\n                        win = 0;\r\n                        loss = 0;\r\n                        tie = 1;\r\n                    }\r\n                } else {\r\n                    win = 0;\r\n                    loss = 0;\r\n                    tie = 0;\r\n                }\r\n\r\n\r\n\r\n                const median_win = (league.settings.league_average_match === 1\r\n                    && pts_rank + 1 <= (league.rosters.length / 2))\r\n                    ? 1\r\n                    : 0\r\n\r\n                const median_loss = (league.settings.league_average_match === 1\r\n                    && pts_rank + 1 >= (league.rosters.length / 2))\r\n                    ? 1\r\n                    : 0\r\n\r\n                let proj_median = '-'\r\n\r\n                if (league.settings.league_average_match === 1) {\r\n                    const median_points1 = standings[standings?.length / 2]?.[`proj_score_${recordType}`]\r\n                    const median_points2 = standings[(standings?.length / 2) - 1]?.[`proj_score_${recordType}`]\r\n\r\n                    if (!(median_points1 && median_points2)) {\r\n                        console.log(\"UNDEFINED - \" + league.name)\r\n                    }\r\n                    proj_median = median_points1 && median_points2 && ((median_points1 + median_points2) / 2)\r\n                }\r\n                return lineupChecks_week[league.league_id] = {\r\n                    name: league.name,\r\n                    avatar: league.avatar,\r\n                    lc_user: lc_user,\r\n                    lc_opp: lc_opp,\r\n                    win: win,\r\n                    loss: loss,\r\n                    tie: tie,\r\n                    median_win: median_win,\r\n                    median_loss: median_loss,\r\n                    proj_median: proj_median,\r\n                    standings: Object.fromEntries(\r\n                        standings.map(s => {\r\n                            const opp = standings.find(s2 => s2.matchup.matchup_id === s.matchup.matchup_id && s2.matchup.roster_id !== s.matchup.roster_id)\r\n\r\n                            const pts_rank_lm = standings\r\n                                ?.findIndex(lc => {\r\n                                    return lc.matchup.roster_id === s.matchup.roster_id\r\n                                })\r\n\r\n                            const median_win_lm = (league.settings.league_average_match === 1\r\n                                && pts_rank_lm + 1 <= (league.rosters.length / 2))\r\n                                ? 1\r\n                                : 0\r\n\r\n                            const median_loss_lm = (league.settings.league_average_match === 1\r\n                                && pts_rank_lm + 1 >= (league.rosters.length / 2))\r\n                                ? 1\r\n                                : 0\r\n                            return [\r\n                                s.matchup.roster_id,\r\n                                {\r\n                                    wins: (s.proj_score_optimal > opp.proj_score_optimal ? 1 : 0)\r\n                                        + median_win_lm,\r\n                                    losses: (s.proj_score_optimal < opp.proj_score_optimal ? 1 : 0)\r\n                                        + median_loss_lm,\r\n                                    ties: (s.proj_score_optimal + opp.proj_score_optimal > 0 && s.proj_score_optimal === opp.proj_score_optimal)\r\n                                        ? 1\r\n                                        : 0,\r\n                                    fp: s.proj_score_optimal,\r\n                                    fpa: opp.proj_score_optimal\r\n                                }\r\n                            ]\r\n                        })\r\n                    )\r\n                }\r\n            })\r\n\r\n        return lineupChecks_week\r\n    }\r\n\r\n\r\n    console.log(`getting projections for week ${week_to_fetch}`)\r\n    let projectedRecordWeek;\r\n\r\n    if (week_to_fetch < state.week) {\r\n        projectedRecordWeek = getLineupChecksPrevWeek(week_to_fetch);\r\n\r\n    } else {\r\n        projectedRecordWeek = getLineupChecksWeek(week_to_fetch);\r\n    }\r\n\r\n    return {\r\n        week: week_to_fetch,\r\n        projectedRecordWeek: projectedRecordWeek\r\n    }\r\n\r\n\r\n}","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setStateLineups } from \"../redux/actions\";\r\nimport { setStateUser } from \"../../COMMON/redux/actions\";\r\nimport { fetchCommon } from \"../../COMMON/redux/actions\";\r\nimport { fetchMatchups } from \"../redux/actions\";\r\nimport { getRecordDict } from \"./helpers/getRecordDict\";\r\n\r\n\r\nconst useGetLineupChecks = () => {\r\n    const dispatch = useDispatch();\r\n    const { state, allplayers, schedule, projections } = useSelector(state => state.common)\r\n    const { user_id, leagues, matchups, syncing, isLoadingMatchups } = useSelector(state => state.user);\r\n    const {\r\n        includeTaxi,\r\n        week,\r\n        lineupChecks,\r\n        rankings,\r\n        recordType,\r\n        isLoadingProjectionDict,\r\n        itemActive2,\r\n        secondaryContent1,\r\n        secondaryContent2,\r\n    } = useSelector(state => state.lineups);\r\n\r\n    const hash = `${includeTaxi}-${true}`\r\n\r\n\r\n    useEffect(() => {\r\n        if (leagues && state) {\r\n            if (!schedule || !projections || (!matchups && !isLoadingMatchups)) {\r\n                if (!schedule) {\r\n                    dispatch(fetchCommon('schedule'));\r\n                } else if (!matchups && !isLoadingMatchups) {\r\n                    dispatch(fetchMatchups())\r\n                } else if (!projections) {\r\n                    dispatch(fetchCommon('projections'))\r\n                }\r\n\r\n            } else if (lineupChecks[week]?.[hash]) {\r\n                const player_lineup_dict = {};\r\n\r\n                leagues\r\n                    .forEach(league => {\r\n                        const matchup_user = league[`matchups_${week}`]?.find(m => m.roster_id === league.userRoster.roster_id);\r\n                        const matchup_opp = league[`matchups_${week}`]?.find(m => m.matchup_id === matchup_user.matchup_id && m.roster_id !== matchup_user.roster_id);\r\n\r\n                        const optimal_lineup = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.optimal_lineup\r\n                        const optimal_lineup_opp = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.optimal_lineup\r\n\r\n                        const user_starters = league.settings.best_ball === 1\r\n                            ? optimal_lineup?.map(ol => ol.player) || []\r\n                            : matchup_user?.starters || []\r\n\r\n                        matchup_user?.players\r\n                            ?.forEach(player_id => {\r\n                                if (!player_lineup_dict[player_id]) {\r\n                                    player_lineup_dict[player_id] = {\r\n                                        start: [],\r\n                                        bench: [],\r\n                                        start_opp: [],\r\n                                        bench_opp: []\r\n                                    }\r\n                                }\r\n\r\n                                if (user_starters?.includes(player_id)) {\r\n                                    player_lineup_dict[player_id].start.push(league)\r\n                                } else {\r\n                                    player_lineup_dict[player_id].bench.push(league)\r\n                                }\r\n                            })\r\n\r\n                        const opp_starters = league.settings.best_ball === 1\r\n                            ? optimal_lineup_opp?.map(ol => ol.player) || []\r\n                            : matchup_opp?.starters || []\r\n\r\n                        matchup_opp?.players\r\n                            ?.forEach(player_id => {\r\n                                if (!player_lineup_dict[player_id]) {\r\n                                    player_lineup_dict[player_id] = {\r\n                                        start: [],\r\n                                        bench: [],\r\n                                        start_opp: [],\r\n                                        bench_opp: []\r\n                                    }\r\n                                }\r\n\r\n                                if (opp_starters?.includes(player_id)) {\r\n                                    player_lineup_dict[player_id].start_opp.push(league)\r\n                                } else {\r\n                                    player_lineup_dict[player_id].bench_opp.push(league)\r\n                                }\r\n                            })\r\n                    })\r\n\r\n                dispatch(setStateLineups({ playerLineupDict: player_lineup_dict }, 'LINEUPS'));\r\n            }\r\n        }\r\n    }, [leagues, matchups, week, isLoadingMatchups, schedule, projections, lineupChecks, week, hash, dispatch])\r\n\r\n\r\n\r\n    const weeks = Array.from(Array(18).keys()).map(key => key + 1)\r\n        .filter(key => {\r\n            if (key < state.week) {\r\n                return !lineupChecks[key]\r\n            } else {\r\n                return !lineupChecks[key]?.['true-true']\r\n            }\r\n        })\r\n\r\n    useEffect(() => {\r\n        const getProjectedRecords = (week_to_fetch, includeTaxi, includeLocked, league_ids) => {\r\n\r\n\r\n            dispatch(setStateLineups({ isLoadingProjectionDict: true }, 'LINEUPS'));\r\n\r\n            const worker = new Worker('/getRecordDictWeekWorker.js')\r\n\r\n\r\n\r\n            const result = getRecordDict({ week_to_fetch, state, leagues, allplayers, schedule, projections, includeTaxi, includeLocked, rankings, user_id, recordType, league_ids })\r\n\r\n\r\n\r\n\r\n            if (result.week < state.week) {\r\n\r\n                dispatch(setStateLineups({\r\n                    lineupChecks: {\r\n                        ...lineupChecks,\r\n                        [result.week]: {\r\n                            ...lineupChecks[result.week],\r\n                            ...result.projectedRecordWeek\r\n                        }\r\n                    }\r\n                }, 'LINEUPS'))\r\n\r\n\r\n\r\n            } else {\r\n                console.log({ result })\r\n                dispatch(setStateLineups({\r\n                    lineupChecks: {\r\n                        ...lineupChecks,\r\n                        [result.week]: {\r\n                            ...lineupChecks[result.week],\r\n                            [`${includeTaxi}-${includeLocked}`]: {\r\n                                ...lineupChecks[result.week]?.[`${includeTaxi}-${includeLocked}`],\r\n                                ...result.projectedRecordWeek\r\n                            }\r\n                        }\r\n                    }\r\n                }, 'LINEUPS'));\r\n            }\r\n        }\r\n\r\n\r\n        if (leagues && allplayers && schedule && projections && matchups) {\r\n\r\n            if (\r\n                (\r\n                    (\r\n                        week < state.week\r\n                        && (\r\n                            !lineupChecks[week]\r\n                            || (lineupChecks[week]\r\n                                && Object.keys(lineupChecks[week])\r\n                                    .find(key => lineupChecks[week][key]?.edited === true)\r\n                            )\r\n                        )\r\n                    ) || (\r\n                        week >= state.week\r\n                        && (\r\n                            !lineupChecks[week]?.[`${includeTaxi}-${true}`]\r\n                            || Object.keys(lineupChecks[week]?.[`${includeTaxi}-${true}`])\r\n                                .find(key => lineupChecks[week]?.[`${includeTaxi}-${true}`]?.[key]?.edited === true)\r\n                        )\r\n                    )\r\n                ) && !isLoadingProjectionDict\r\n            ) {\r\n                const league_ids = syncing\r\n                    ? [syncing.league_id]\r\n                    : (week < state.week && lineupChecks[week])\r\n                        ? Object.keys(lineupChecks[week]).filter(key => lineupChecks[week][key]?.edited === true)\r\n                        : (week >= state.week && lineupChecks[week]?.[`${includeTaxi}-${true}`])\r\n                            ? Object.keys(lineupChecks[week]?.[`${includeTaxi}-${true}`]).find(key => lineupChecks[week]?.[`${includeTaxi}-${true}`]?.[key]?.edited === true)\r\n                            : false\r\n\r\n                console.log(`Syncing ${league_ids}`)\r\n                getProjectedRecords(week, includeTaxi, true, league_ids)\r\n            } else if (\r\n                (\r\n                    secondaryContent1 === 'Optimal'\r\n                    || secondaryContent2 === 'Optimal'\r\n                ) && (\r\n                    (\r\n                        week < state.week\r\n                        && (\r\n                            !lineupChecks[week]\r\n                            || (lineupChecks[week]\r\n                                && Object.keys(lineupChecks[week])\r\n                                    .find(key => lineupChecks[week][key]?.edited === true)\r\n                            )\r\n                        )\r\n                    ) || (\r\n                        week >= state.week\r\n                        && (\r\n                            !lineupChecks[week]?.[`${includeTaxi}-${false}`]\r\n                            || Object.keys(lineupChecks[week]?.[`${includeTaxi}-${false}`])\r\n                                .find(key => lineupChecks[week]?.[`${includeTaxi}-${false}`]?.[key]?.edited === true)\r\n                        )\r\n                    )\r\n                ) && !isLoadingProjectionDict\r\n            ) {\r\n                const league_ids = syncing\r\n                    ? [syncing.league_id]\r\n                    : (week < state.week && lineupChecks[week])\r\n                        ? Object.keys(lineupChecks[week]).filter(key => lineupChecks[week][key]?.edited === true)\r\n                        : (week >= state.week && lineupChecks[week]?.[`${includeTaxi}-${false}`])\r\n                            ? Object.keys(lineupChecks[week]?.[`${includeTaxi}-${false}`]).find(key => lineupChecks[week]?.[`${includeTaxi}-${false}`]?.[key]?.edited === true)\r\n                            : false\r\n\r\n                console.log(`Syncing ${league_ids}`)\r\n                getProjectedRecords(week, includeTaxi, false, league_ids)\r\n            }\r\n\r\n        }\r\n    }, [leagues, week, weeks, state, allplayers, schedule, projections, dispatch, includeTaxi, lineupChecks, rankings, user_id, recordType, isLoadingProjectionDict, matchups, lineupChecks])\r\n\r\n    useEffect(() => {\r\n        if (isLoadingProjectionDict) {\r\n            if (\r\n                (\r\n                    (week < state.week && (lineupChecks[week] && !(lineupChecks[week] && Object.keys(lineupChecks[week]).find(key => lineupChecks[week][key]?.edited === true))))\r\n                    || (week >= state.week && (lineupChecks[week]?.[`${includeTaxi}-${true}`] && !Object.keys(lineupChecks[week]?.[`${includeTaxi}-${true}`]).find(key => lineupChecks[week]?.[`${includeTaxi}-${true}`]?.[key]?.edited === true)))\r\n                ) || (\r\n                    (\r\n                        secondaryContent1 === 'Optimal'\r\n                        || secondaryContent2 === 'Optimal'\r\n                    ) &&\r\n                    (\r\n                        (week < state.week && (lineupChecks[week] && !(lineupChecks[week] && Object.keys(lineupChecks[week]).find(key => lineupChecks[week][key]?.edited === true))))\r\n                        || (week >= state.week && (lineupChecks[week]?.[`${includeTaxi}-${false}`] && !Object.keys(lineupChecks[week]?.[`${includeTaxi}-${false}`]).find(key => lineupChecks[week]?.[`${includeTaxi}-${false}`]?.[key]?.edited === true)))\r\n                    )\r\n                )\r\n            ) {\r\n                dispatch(setStateLineups({ isLoadingProjectionDict: false }, 'LINEUPS'));\r\n                syncing && dispatch(setStateUser({ syncing: false }, 'USER'));\r\n            }\r\n        }\r\n    }, [dispatch, isLoadingProjectionDict, week, state, lineupChecks, includeTaxi, syncing, weeks])\r\n\r\n    useEffect(() => {\r\n        const lc_weeks = Object.keys(lineupChecks)\r\n\r\n        if (lc_weeks.length === 18 && !lc_weeks.includes('totals')) {\r\n            console.log('Getting Totals...')\r\n            const season_totals_all = {};\r\n\r\n            leagues\r\n                .filter(league => league.settings.status === 'in_season')\r\n                .forEach(league => {\r\n                    const league_season_totals = {};\r\n\r\n                    league.rosters\r\n                        .forEach(roster => {\r\n\r\n                            const roster_season_totals = Object.keys(lineupChecks)\r\n                                .filter(key => parseInt(key) >= league.settings.start_week && parseInt(key) < league.settings.playoff_week_start)\r\n                                .reduce((acc, cur) => {\r\n                                    const cur_roster = lineupChecks[cur]?.['true-true']?.[league.league_id]?.standings?.[roster.roster_id]\r\n                                    return {\r\n                                        wins: acc.wins + (cur_roster?.wins || 0),\r\n                                        losses: acc.losses + (cur_roster?.losses || 0),\r\n                                        ties: acc.ties + (cur_roster?.ties || 0),\r\n                                        fp: acc.fp + (cur_roster?.fp || 0),\r\n                                        fpa: acc.fpa + (cur_roster?.fpa || 0)\r\n                                    }\r\n                                }, {\r\n                                    wins: roster.settings.wins,\r\n                                    losses: roster.settings.losses,\r\n                                    ties: roster.settings.ties,\r\n                                    fp: parseFloat(roster.settings.fpts + '.' + (roster.settings.fpts_decimal || 0)),\r\n                                    fpa: parseFloat(roster.settings.fpts_against + '.' + (roster.settings.fpts_against_decimal || 0))\r\n                                })\r\n\r\n                            league_season_totals[roster.roster_id] = {\r\n                                ...roster_season_totals,\r\n                                user_id: roster.user_id,\r\n                                username: roster.username,\r\n                                avatar: roster.avatar\r\n                            }\r\n\r\n                        })\r\n\r\n                    season_totals_all[league.league_id] = league_season_totals\r\n                })\r\n\r\n            dispatch(\r\n                setStateLineups({\r\n                    lineupChecks: {\r\n                        ...lineupChecks,\r\n                        totals: season_totals_all\r\n                    }\r\n                }, 'LINEUPS')\r\n            )\r\n        }\r\n    }, [dispatch, lineupChecks])\r\n\r\n    useEffect(() => {\r\n        if (itemActive2) {\r\n            dispatch(setStateLineups({ secondaryContent: 'Options' }, 'LINEUPS'));\r\n        } else {\r\n            dispatch(setStateLineups({ secondaryContent: 'Optimal' }, 'LINEUPS'));\r\n        }\r\n    }, [itemActive2, dispatch])\r\n\r\n\r\n}\r\n\r\nexport default useGetLineupChecks;","import LineupChecks from \"./LineupChecks\";\r\nimport StartersBench from \"./StartersBench\";\r\nimport useGetLineupChecks from \"../services/useGetLineupChecks\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Linups1 = ({ secondaryTable }) => {\r\n    const { primaryContent } = useSelector(state => state.lineups);\r\n\r\n\r\n    useGetLineupChecks()\r\n\r\n    return primaryContent === 'Lineup Check'\r\n        ? <LineupChecks secondaryTable={secondaryTable} />\r\n        : <StartersBench secondaryTable={secondaryTable} />\r\n}\r\n\r\nexport default Linups1;","export const matchTeam = (team) => {\r\n    const team_abbrev = {\r\n        SFO: 'SF',\r\n        JAC: 'JAX',\r\n        KCC: 'KC',\r\n        TBB: 'TB',\r\n        GBP: 'GB',\r\n        NEP: 'NE',\r\n        LVR: 'LV',\r\n        NOS: 'NO'\r\n    }\r\n    return team_abbrev[team] || team\r\n}","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { setStateLineups } from \"../redux/actions\";\r\nimport Roster from \"../../COMMON/components/Roster\";\r\nimport TableMain from \"../../COMMON/components/TableMain\";\r\nimport { setStateUser } from \"../../Players/redux/actions\";\r\nimport { fetchMatchups, syncLeague } from \"../redux/actions\";\r\nimport { matchTeam } from \"../../COMMON/services/helpers/matchTeam\";\r\n\r\nconst LineupCheck = ({\r\n    league,\r\n    matchup_user,\r\n    lineup_check,\r\n    optimal_lineup,\r\n    matchup_opp,\r\n    lineup_check_opp,\r\n    optimal_lineup_opp,\r\n    players_projections,\r\n    proj_score_user_actual,\r\n    proj_score_user_optimal,\r\n    proj_score_opp_actual,\r\n    proj_score_opp_optimal,\r\n    opp_username,\r\n    proj_median\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    const { state, projections, allplayers, rankings, schedule } = useSelector(state => state.common);\r\n    const { syncing, username, user_id } = useSelector(state => state.user);\r\n    const {\r\n        week,\r\n        secondaryContent1,\r\n        secondaryContent2,\r\n        itemActive2\r\n    } = useSelector(state => state.lineups);\r\n\r\n    const oppRoster = league?.rosters.find(r => r.roster_id === matchup_opp?.roster_id);\r\n\r\n    const active_player = lineup_check?.find(x => `${x.slot}_${x.index}` === itemActive2)?.current_player\r\n\r\n    const opt_points = optimal_lineup?.reduce((acc, cur) => acc + matchup_user.players_points[cur.player], 0)\r\n\r\n    const opp_opt_points = optimal_lineup_opp?.reduce((acc, cur) => acc + (matchup_opp.players_points[cur.player] || 0), 0)\r\n\r\n    const handleSync = (league_id) => {\r\n        dispatch(setStateUser({ syncing: { league_id: league_id, week: week } }))\r\n\r\n        dispatch(syncLeague(league_id, user_id, username, week))\r\n        dispatch(fetchMatchups())\r\n    }\r\n\r\n    console.log({ oppRoster })\r\n\r\n    const getInjuryAbbrev = (injury_status) => {\r\n        switch (injury_status) {\r\n            case 'Questionable':\r\n                return 'Q'\r\n            case 'Sus':\r\n                return 'S'\r\n            case 'Doubtful':\r\n                return 'D'\r\n            case 'Out':\r\n                return 'O'\r\n            case 'IR':\r\n                return 'IR'\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    const lineup_headers = [\r\n        [\r\n            {\r\n                text: (\r\n                    (secondaryContent1 === 'Lineup' && league.settings.best_ball !== 1)\r\n                        ? <>{matchup_user?.points} <em>({proj_score_user_actual?.toFixed(2)})</em></>\r\n                        : (secondaryContent1 === 'Optimal' || league.settings.best_ball === 1)\r\n                            ? <>{opt_points?.toFixed(2)} <em>({proj_score_user_optimal?.toFixed(2)})</em></>\r\n\r\n                            : ''\r\n                ),\r\n                colSpan: 23,\r\n                className: 'half'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                text: 'Slot',\r\n                colSpan: 3,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: 'Player',\r\n                colSpan: 10,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: 'Opp',\r\n                colSpan: 3,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: <div className=\"flex\">\r\n                    <p>Pts</p>\r\n                    {\r\n                        rankings\r\n                            ? <p>\r\n                                Rank\r\n                            </p>\r\n                            : <em>\r\n                                Proj\r\n                            </em>\r\n                    }\r\n                </div>,\r\n                colSpan: 7,\r\n                className: 'half'\r\n            }\r\n        ]\r\n    ]\r\n    console.log({ itemActive2 })\r\n\r\n    const lineup_body = (secondaryContent1 === 'Lineup' && league.settings.best_ball !== 1)\r\n        ? lineup_check?.map((slot, index) => {\r\n            const color = (\r\n                !optimal_lineup.find(x => x.player === slot.current_player) ? 'red'\r\n                    : slot.earlyInFlex || slot.lateNotInFlex ? 'yellow'\r\n                        : ''\r\n            )\r\n\r\n            return {\r\n                id: slot.slot_index,\r\n                list: !matchup_user ? [] : [\r\n                    {\r\n                        text: lineup_check?.find(x => x.current_player === slot.current_player)?.slot,\r\n                        colSpan: 3,\r\n                        className: color\r\n                    },\r\n                    {\r\n                        text: <>\r\n                            {\r\n                                allplayers[slot.current_player]?.full_name || 'Empty'\r\n                            }\r\n                            <span className=\"player_inj_status\">\r\n                                {\r\n                                    getInjuryAbbrev(projections[week]?.[slot.current_player]?.injury_status)\r\n                                }\r\n                            </span>\r\n                        </>,\r\n                        colSpan: 10,\r\n                        className: color + \" left relative\",\r\n                        image: {\r\n                            src: slot.current_player,\r\n                            alt: allplayers[slot.current_player]?.full_name,\r\n                            type: 'player'\r\n                        }\r\n                    },\r\n                    {\r\n                        text: matchTeam(schedule[week]\r\n                            ?.find(matchup => matchup.team.find(t => matchTeam(t.id) === allplayers[slot.current_player]?.team))\r\n                            ?.team\r\n                            ?.find(team => matchTeam(team.id) !== allplayers[slot.current_player]?.team)\r\n                            ?.id) || 'FA',\r\n                        colSpan: 3,\r\n                        className: color\r\n                    },\r\n                    {\r\n                        text: <div className=\"flex\">\r\n                            <p>\r\n                                {\r\n                                    matchup_user?.players_points[slot.current_player]?.toFixed(1)\r\n                                    || '-'\r\n                                }\r\n                            </p>\r\n                            {\r\n                                rankings\r\n                                    ? <p>\r\n                                        {\r\n                                            rankings[slot.current_player]?.prevRank\r\n                                            || 999\r\n                                        }\r\n                                    </p>\r\n                                    : <em>\r\n                                        {\r\n                                            players_projections[slot.current_player]?.toFixed(1)\r\n                                            || '-'\r\n                                        }\r\n                                    </em>\r\n                            }\r\n                        </div>,\r\n                        colSpan: 7,\r\n                        className: color\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n        : optimal_lineup?.map((ol, index) => {\r\n            return {\r\n                id: ol.slot + '__' + index,\r\n                list: [\r\n                    {\r\n                        text: ol.slot,\r\n                        colSpan: 3,\r\n\r\n                    },\r\n                    {\r\n                        text: <>\r\n                            {allplayers[ol.player]?.full_name || ol.player?.toString()}\r\n                            <span className=\"player_inj_status\">\r\n                                {\r\n                                    getInjuryAbbrev(projections[week]?.[ol.player]?.injury_status)\r\n                                }\r\n                            </span>\r\n                            </>,\r\n                        colSpan: 10,\r\n                        className: 'left relative',\r\n                        image: {\r\n                            src: ol.player,\r\n                            alt: allplayers[ol.player]?.full_name,\r\n                            type: 'player'\r\n                        }\r\n                    },\r\n                    {\r\n                        text: matchTeam(schedule[state.week]\r\n                            ?.find(matchup => matchup.team.find(t => matchTeam(t.id) === allplayers[ol.player]?.team))\r\n                            ?.team\r\n                            ?.find(team => matchTeam(team.id) !== allplayers[ol.player]?.team)\r\n                            ?.id) || 'FA',\r\n                        colSpan: 3\r\n                    },\r\n                    {\r\n                        text: <div className=\"flex\">\r\n                            <p>\r\n                                {\r\n                                    matchup_user?.players_points[ol.player].toFixed(1)\r\n                                    || '-'\r\n                                }\r\n                            </p>\r\n                            {\r\n                                rankings\r\n                                    ? <p>\r\n                                        {\r\n                                            rankings[ol.player]?.prevRank\r\n                                            || 999\r\n                                        }\r\n                                    </p>\r\n                                    : <em>\r\n                                        {\r\n                                            (players_projections[ol.player] || 0).toFixed(1)\r\n                                            || '-'\r\n                                        }\r\n                                    </em>\r\n                            }\r\n                        </div>,\r\n                        colSpan: 7\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n\r\n    let suboptimal_options;\r\n\r\n    if (week >= state.week) {\r\n        suboptimal_options = (matchup_user?.players || [])\r\n            ?.filter(player_id => !optimal_lineup.find(ol => ol.player === player_id))\r\n\r\n        itemActive2.split('__')[0] === 'SF'\r\n            ? suboptimal_options = suboptimal_options.filter(player_id => ['QB', 'RB', 'FB', 'WR', 'TE'].includes(allplayers[player_id]?.position))\r\n            : itemActive2.split('__')[0] === 'WRT'\r\n                ? suboptimal_options = suboptimal_options.filter(player_id => ['RB', 'FB', 'WR', 'TE'].includes(allplayers[player_id]?.position))\r\n                : itemActive2.split('__')[0] === 'W R'\r\n                    ? suboptimal_options = suboptimal_options.filter(player_id => ['RB', 'FB', 'WR'].includes(allplayers[player_id]?.position))\r\n                    : itemActive2.split('__')[0] === 'W T'\r\n                        ? suboptimal_options = suboptimal_options.filter(player_id => ['WR', 'TE'].includes(allplayers[player_id]?.position))\r\n                        : suboptimal_options = suboptimal_options.filter(player_id => allplayers[player_id]?.position === itemActive2.split('__')[0])\r\n    }\r\n    const subs_headers = [\r\n        [\r\n            {\r\n                text: (\r\n                    <>\r\n                        {(secondaryContent2 === 'Lineup' && league.settings.best_ball !== 1)\r\n                            ? <>{matchup_opp?.points} <em>({proj_score_opp_actual?.toFixed(2)})</em></>\r\n                            : (secondaryContent2 === 'Optimal' || league.settings.best_ball === 1)\r\n                                ? <>{opp_opt_points?.toFixed(2)} <em>({proj_score_opp_optimal?.toFixed(2)})</em></>\r\n                                : ''\r\n                        }\r\n                        {\r\n                            parseFloat(proj_median)\r\n                                ? <em> Median: ({proj_median.toFixed(2)})</em>\r\n                                : null\r\n                        }\r\n                    </>\r\n                ),\r\n                colSpan: 23,\r\n                className: 'half'\r\n            }\r\n        ],\r\n        [\r\n            {\r\n                text: 'Slot',\r\n                colSpan: 3,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: 'Player',\r\n                colSpan: 10,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: 'Opp',\r\n                colSpan: 3,\r\n                className: 'half'\r\n            },\r\n            {\r\n                text: <div className=\"flex\">\r\n                    <p>Pts</p>\r\n                    {\r\n                        rankings\r\n                            ? <p>\r\n                                Rank\r\n                            </p>\r\n                            : <em>\r\n                                Proj\r\n                            </em>\r\n                    }\r\n                </div>,\r\n                colSpan: 7,\r\n                className: 'half'\r\n            }\r\n        ]\r\n    ]\r\n\r\n    const subs_body = itemActive2\r\n        ? itemActive2.includes('__')\r\n            ? suboptimal_options\r\n                ?.sort((a, b) => (players_projections[b] || 0) - (players_projections[a] || 0))\r\n                ?.map((opt_starter, index) => {\r\n                    return {\r\n                        id: opt_starter,\r\n                        list: [\r\n                            {\r\n                                text: allplayers[opt_starter]?.position,\r\n                                colSpan: 3\r\n                            },\r\n                            {\r\n                                text: <>\r\n                                    {\r\n                                        allplayers[opt_starter]?.full_name || 'Empty'\r\n                                    }\r\n                                    <span className=\"player_inj_status\">\r\n                                        {\r\n                                            getInjuryAbbrev(projections[week]?.[opt_starter]?.injury_status)\r\n                                        }\r\n                                    </span>\r\n                                </>,\r\n                                colSpan: 10,\r\n                                className: 'left relative',\r\n                                image: {\r\n                                    src: opt_starter,\r\n                                    alt: allplayers[opt_starter]?.full_name,\r\n                                    type: 'player'\r\n                                }\r\n                            },\r\n                            {\r\n                                text: matchTeam(schedule[state.week]\r\n                                    ?.find(matchup => matchup.team.find(t => matchTeam(t.id) === allplayers[opt_starter]?.team))\r\n                                    ?.team\r\n                                    ?.find(team => matchTeam(team.id) !== allplayers[opt_starter]?.team)\r\n                                    ?.id) || 'FA',\r\n                                colSpan: 3,\r\n                            },\r\n                            {\r\n                                text: <div className=\"flex\">\r\n                                    <p>\r\n                                        {\r\n                                            (matchup_opp?.players_points[opt_starter] || 0)?.toFixed(1)\r\n\r\n                                        }\r\n                                    </p>\r\n                                    {\r\n                                        rankings\r\n                                            ? <p>\r\n                                                {\r\n                                                    rankings[opt_starter]?.prevRank\r\n                                                    || 999\r\n                                                }\r\n                                            </p>\r\n                                            : <em>\r\n                                                {\r\n                                                    (players_projections[opt_starter] || 0).toFixed(1)\r\n                                                    || '-'\r\n                                                }\r\n                                            </em>\r\n                                    }\r\n                                </div>,\r\n                                colSpan: 7\r\n                            }\r\n                        ]\r\n                    }\r\n                })\r\n            : [\r\n                {\r\n                    id: 'warning',\r\n                    list: [\r\n                        {\r\n                            text: lineup_check?.find(x => x.slot_index === itemActive2)?.current_player === '0' ? 'Empty Slot' :\r\n                                lineup_check?.find(x => x.slot_index === itemActive2)?.notInOptimal ? 'Move Out Of Lineup' :\r\n                                    lineup_check?.find(x => x.slot_index === itemActive2)?.earlyInFlex ? 'Move Out Of Flex' :\r\n                                        lineup_check?.find(x => x.slot_index === itemActive2)?.lateNotInFlex ? 'Move Into Flex'\r\n                                            : '√',\r\n                            colSpan: 23,\r\n                            className: lineup_check?.find(x => x.slot_index === itemActive2)?.notInOptimal ? 'red'\r\n                                : lineup_check?.find(x => x.slot_index === itemActive2)?.earlyInFlex || lineup_check?.find(x => x.slot_index === itemActive2)?.lateNotInFlex ? 'yellow'\r\n                                    : 'green'\r\n                        }\r\n                    ]\r\n\r\n                },\r\n\r\n                ...(lineup_check?.find(x => x.slot_index === itemActive2)?.slot_options || [])\r\n                    ?.sort(\r\n                        (a, b) => (rankings && (rankings[a]?.prevRank || 999) - (rankings[b]?.prevRank || 999))\r\n                            || players_projections[b] - players_projections[a]\r\n                    )\r\n                    ?.map((so, index) => {\r\n                        const color = optimal_lineup.find(x => x.player === so) ? 'green' :\r\n                            allplayers[so]?.rank_ecr < allplayers[active_player]?.rank_ecr ? 'yellow' : ''\r\n                        return {\r\n                            id: so,\r\n                            list: [\r\n                                {\r\n                                    text: 'BN',\r\n                                    colSpan: 3,\r\n                                    className: color\r\n                                },\r\n                                {\r\n                                    text: <>\r\n                                        {\r\n                                            allplayers[so]?.full_name || 'Empty'\r\n                                        }\r\n                                        <span className=\"player_inj_status\">\r\n                                            {\r\n                                                getInjuryAbbrev(projections[week]?.[so]?.injury_status)\r\n                                            }\r\n                                        </span>\r\n                                    </>,\r\n                                    colSpan: 10,\r\n                                    className: color + \" left relative\",\r\n                                    image: {\r\n                                        src: so,\r\n                                        alt: allplayers[so]?.full_name,\r\n                                        type: 'player'\r\n                                    }\r\n                                },\r\n                                {\r\n                                    text: matchTeam(schedule[state.week]\r\n                                        ?.find(matchup => matchup.team.find(t => matchTeam(t.id) === allplayers[so]?.team))\r\n                                        ?.team\r\n                                        ?.find(team => matchTeam(team.id) !== allplayers[so]?.team)\r\n                                        ?.id) || 'FA',\r\n                                    colSpan: 3,\r\n                                    className: color\r\n                                },\r\n                                {\r\n                                    text: <div className=\"flex\">\r\n                                        <p>\r\n                                            {\r\n                                                matchup_user?.players_points[so].toFixed(1)\r\n                                                || '-'\r\n\r\n                                            }\r\n                                        </p>\r\n                                        {\r\n                                            rankings\r\n                                                ? <p>\r\n                                                    {\r\n                                                        rankings[so]?.prevRank\r\n                                                        || 999\r\n                                                    }\r\n                                                </p>\r\n                                                : <em>\r\n                                                    {\r\n                                                        (players_projections[so] || 0).toFixed(1)\r\n                                                    }\r\n                                                </em>\r\n                                        }\r\n                                    </div>,\r\n                                    colSpan: 7\r\n                                }\r\n                            ]\r\n                        }\r\n                    })\r\n            ]\r\n        : secondaryContent2 === 'Optimal'\r\n            ? optimal_lineup_opp?.map((opp_starter, index) => {\r\n                return {\r\n                    id: opp_starter.player || opp_starter,\r\n                    list: [\r\n                        {\r\n                            text: lineup_check_opp[index]?.slot,\r\n                            colSpan: 3\r\n                        },\r\n                        {\r\n                            text: <>\r\n                                {\r\n                                    allplayers[opp_starter.player || opp_starter]?.full_name || 'Empty'\r\n                                }\r\n                                <span className=\"player_inj_status\">\r\n                                    {\r\n                                        getInjuryAbbrev(projections[week]?.[opp_starter.player || opp_starter]?.injury_status)\r\n                                    }\r\n                                </span>\r\n                            </>,\r\n                            colSpan: 10,\r\n                            className: 'left relative',\r\n                            image: {\r\n                                src: opp_starter.player || opp_starter,\r\n                                alt: allplayers[opp_starter.player || opp_starter]?.full_name,\r\n                                type: 'player'\r\n                            }\r\n                        },\r\n                        {\r\n                            text: matchTeam(schedule[state.week]\r\n                                ?.find(matchup => matchup.team.find(t => matchTeam(t.id) === allplayers[opp_starter.player]?.team))\r\n                                ?.team\r\n                                ?.find(team => matchTeam(team.id) !== allplayers[opp_starter.player]?.team)\r\n                                ?.id) || 'FA',\r\n                            colSpan: 3,\r\n                        },\r\n                        {\r\n                            text: <div className=\"flex\">\r\n                                <p>\r\n                                    {\r\n                                        matchup_opp?.players_points[opp_starter.player || opp_starter]?.toFixed(1)\r\n                                        || '-'\r\n                                    }\r\n                                </p>\r\n                                {\r\n                                    rankings\r\n                                        ? <p>\r\n                                            {\r\n                                                rankings[opp_starter.player || opp_starter]?.prevRank\r\n                                                || 999\r\n                                            }\r\n                                        </p>\r\n                                        : <em>\r\n                                            {\r\n                                                (players_projections[opp_starter.player] || 0).toFixed(1)\r\n                                                || '-'\r\n                                            }\r\n                                        </em>\r\n                                }\r\n                            </div>,\r\n                            colSpan: 7\r\n                        }\r\n                    ]\r\n                }\r\n            })\r\n            : matchup_opp?.starters?.map((opp_starter, index) => {\r\n                return {\r\n                    id: opp_starter,\r\n                    list: [\r\n                        {\r\n                            text: lineup_check_opp?.[index]?.slot,\r\n                            colSpan: 3\r\n                        },\r\n                        {\r\n                            text: <>\r\n                                {\r\n                                    allplayers[opp_starter]?.full_name || 'Empty'\r\n                                }\r\n                                <span className=\"player_inj_status\">\r\n                                    {\r\n                                        getInjuryAbbrev(projections[week]?.[opp_starter]?.injury_status)\r\n                                    }\r\n                                </span>\r\n                            </>,\r\n                            colSpan: 10,\r\n                            className: 'left relative',\r\n                            image: {\r\n                                src: opp_starter,\r\n                                alt: allplayers[opp_starter]?.full_name,\r\n                                type: 'player'\r\n                            }\r\n                        },\r\n                        {\r\n                            text: matchTeam(schedule[state.week]\r\n                                ?.find(matchup => matchup.team.find(t => matchTeam(t.id) === allplayers[opp_starter]?.team))\r\n                                ?.team\r\n                                ?.find(team => matchTeam(team.id) !== allplayers[opp_starter]?.team)\r\n                                ?.id) || 'FA',\r\n                            colSpan: 3,\r\n                        },\r\n                        {\r\n                            text: <div className=\"flex\">\r\n                                <p>\r\n                                    {\r\n                                        matchup_opp?.players_points[opp_starter]?.toFixed(1)\r\n                                        || '-'\r\n                                    }\r\n                                </p>\r\n                                {\r\n                                    rankings\r\n                                        ? <p>\r\n                                            {\r\n                                                rankings[opp_starter]?.prevRank\r\n                                                || 999\r\n                                            }\r\n                                        </p>\r\n                                        : <em>\r\n                                            {\r\n                                                (players_projections[opp_starter] || 0).toFixed(1)\r\n                                                || '-'\r\n                                            }\r\n                                        </em>\r\n                                }\r\n                            </div>,\r\n                            colSpan: 7\r\n                        }\r\n                    ]\r\n                }\r\n            })\r\n\r\n    return week < state.week\r\n        ? <>\r\n            <div className=\"secondary nav\">\r\n                <div>\r\n                    <button\r\n                        className={secondaryContent1 === 'Lineup' ? 'active click' : 'click'}\r\n                        onClick={() => dispatch(setStateLineups({ secondaryContent1: 'Lineup' }))}\r\n\r\n                    >\r\n                        Lineup\r\n                    </button>\r\n                    <p className=\"username\">{username}</p>\r\n                    <button\r\n                        className={secondaryContent1 === 'Optimal' ? 'active click' : 'click'}\r\n                        onClick={() => dispatch(setStateLineups({ secondaryContent1: 'Optimal' }))}\r\n                        disabled={true}\r\n                    >\r\n                        Optimal\r\n                    </button>\r\n                </div>\r\n                <button\r\n                    className={`sync ${syncing ? 'rotate' : 'click'}`}\r\n                    onClick={syncing ? null : () => handleSync(league.league_id)}\r\n\r\n                >\r\n                    <i className={`fa-solid fa-arrows-rotate ${syncing ? 'rotate' : ''}`}></i>\r\n                </button>\r\n                <div >\r\n                    {\r\n                        itemActive2\r\n                            ? <button\r\n                                className={'active click'}\r\n                                onClick={() => dispatch(setStateLineups({ itemActive2: '' }))}\r\n                            >\r\n                                Options\r\n                            </button>\r\n                            : <>\r\n\r\n                                <button\r\n                                    className={secondaryContent2 === 'Lineup' ? 'active click' : 'click'}\r\n                                    onClick={() => dispatch(setStateLineups({ secondaryContent2: 'Lineup' }, 'LINEUPS'))}\r\n\r\n                                >\r\n                                    Lineup\r\n                                </button>\r\n                                <p className=\"username\">{oppRoster?.username}</p>\r\n                                <button\r\n                                    className={secondaryContent2 === 'Optimal' ? 'active click' : 'click'}\r\n                                    onClick={() => dispatch(setStateLineups({ secondaryContent2: 'Optimal' }, 'LINEUPS'))}\r\n                                    disabled={true}\r\n                                >\r\n                                    Optimal\r\n                                </button>\r\n                            </>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n            {\r\n                <>\r\n                    <Roster\r\n                        league={league}\r\n                        roster={{\r\n                            ...league.userRoster,\r\n                            players: matchup_user?.players || [],\r\n                            starters: matchup_user?.starters || [],\r\n                        }}\r\n                        type={'secondary half'}\r\n                        previous={true}\r\n                        players_projections={players_projections}\r\n                        players_points={matchup_user?.players_points}\r\n                        total_points={\r\n                            secondaryContent1 === 'Lineup'\r\n                                ? matchup_user?.points\r\n                                : proj_score_user_optimal\r\n                        }\r\n                    />\r\n                    <Roster\r\n                        league={league}\r\n                        roster={{\r\n                            ...oppRoster,\r\n                            players: matchup_opp?.players || [],\r\n                            starters: matchup_opp?.starters || []\r\n                        }}\r\n                        type={'secondary half'}\r\n                        previous={true}\r\n                        players_projections={players_projections}\r\n                        players_points={matchup_opp?.players_points}\r\n                        total_points={\r\n                            secondaryContent2 === 'Lineup'\r\n                                ? matchup_opp?.points\r\n                                : proj_score_opp_optimal\r\n                        }\r\n                    />\r\n                </>\r\n            }\r\n        </>\r\n        : <>\r\n            <div className=\"secondary nav\">\r\n                <div>\r\n                    <button\r\n                        className={(secondaryContent1 === 'Lineup' && league.settings.best_ball !== 1) ? 'active click' : 'click'}\r\n                        onClick={() => dispatch(setStateLineups({ secondaryContent1: 'Lineup' }, 'LINEUPS'))}\r\n                        disabled={league.settings.best_ball === 1}\r\n                    >\r\n                        Lineup\r\n                    </button>\r\n                    <span>\r\n                        <p className=\"username\">{username}</p>\r\n                    </span>\r\n                    <button\r\n                        className={(secondaryContent1 === 'Optimal' || league.settings.best_ball === 1) ? 'active click' : 'click'}\r\n                        onClick={() => dispatch(setStateLineups({ secondaryContent1: 'Optimal' }, 'LINEUPS'))}\r\n                    >\r\n                        Optimal\r\n                    </button>\r\n                </div>\r\n                <button\r\n                    className={`sync ${syncing ? 'rotate' : 'click'}`}\r\n                    onClick={syncing ? null : () => handleSync(league.league_id)}\r\n                >\r\n                    <i className={`fa-solid fa-arrows-rotate ${syncing ? 'rotate' : ''}`}></i>\r\n                </button>\r\n                <div >\r\n                    {\r\n                        itemActive2\r\n                            ? <>\r\n                                <button\r\n                                    className={'click'}\r\n                                    onClick={() => dispatch(setStateLineups({ itemActive2: '' }, 'LINEUPS'))}\r\n                                >\r\n                                    Opp\r\n                                </button>\r\n                                <button\r\n                                    className={'active click'}\r\n                                    onClick={() => dispatch(setStateLineups({ itemActive2: '' }, 'LINEUPS'))}\r\n                                >\r\n                                    Options\r\n                                </button>\r\n                            </>\r\n                            : <>\r\n\r\n                                <button\r\n                                    className={(secondaryContent2 === 'Lineup' && league.settings.best_ball !== 1) ? 'active click' : 'click'}\r\n                                    onClick={() => dispatch(setStateLineups({ secondaryContent2: 'Lineup' }, 'LINEUPS'))}\r\n                                    disabled={league.settings.best_ball === 1}\r\n                                >\r\n                                    Lineup\r\n                                </button>\r\n                                <span>\r\n                                    <p className=\"username\">{opp_username}</p>\r\n                                </span>\r\n                                <button\r\n                                    className={(secondaryContent2 === 'Optimal' || league.settings.best_ball === 1) ? 'active click' : 'click'}\r\n                                    onClick={() => dispatch(setStateLineups({ secondaryContent2: 'Optimal' }, 'LINEUPS'))}\r\n                                >\r\n                                    Optimal\r\n                                </button>\r\n                            </>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n            {\r\n                lineup_body?.length >= 0 ?\r\n                    <>\r\n                        <TableMain\r\n                            type={'secondary half'}\r\n                            headers={lineup_headers}\r\n                            body={lineup_body}\r\n                            itemActive={itemActive2}\r\n                            setItemActive={(value) => dispatch(setStateLineups({ itemActive2: value }, 'LINEUPS'))}\r\n                        />\r\n                        <TableMain\r\n                            type={'secondary half'}\r\n                            headers={subs_headers}\r\n                            body={subs_body}\r\n                        />\r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <h1>No Matchups</h1>\r\n                    </div>\r\n            }\r\n        </>\r\n}\r\n\r\nexport default LineupCheck;","import TableMain from \"../../COMMON/components/TableMain\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getTrendColor } from \"../../COMMON/services/helpers/getTrendColor\";\r\nimport { setStateLineups } from \"../redux/actions\";\r\n\r\nconst PlayerStartBench = ({\r\n    start,\r\n    bench,\r\n    start_opp,\r\n    bench_opp,\r\n    page2_start,\r\n    page2_bench,\r\n    page2_start_opp,\r\n    page2_bench_opp,\r\n    secondaryTable\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    const { state } = useSelector(state => state.common);\r\n    const {\r\n        includeTaxi,\r\n        week,\r\n        lineupChecks,\r\n        secondaryContent3,\r\n        itemActive3\r\n    } = useSelector(state => state.lineups);\r\n\r\n    const hash = `${includeTaxi}-${true}`\r\n\r\n    const getGroupHeader = (type) => {\r\n        return [\r\n            [\r\n                {\r\n                    text: 'League',\r\n                    colSpan: 3\r\n                },\r\n                {\r\n                    text: 'PF',\r\n                    colSpan: 1\r\n                },\r\n                {\r\n                    text: <>PA <em>Median</em></>,\r\n                    colSpan: 2\r\n                }\r\n            ]\r\n        ]\r\n    }\r\n\r\n\r\n    const getGroupBody = (leagues) => {\r\n        return leagues\r\n            .map(league => {\r\n                let proj_fp,\r\n                    proj_fp_opp,\r\n                    matchup_user,\r\n                    matchup_opp,\r\n                    lineup_check_user,\r\n                    lineup_check_opp,\r\n                    optimal_lineup,\r\n                    optimal_lineup_opp,\r\n                    players_projections,\r\n                    proj_score_user_actual,\r\n                    proj_score_user_optimal,\r\n                    proj_score_opp_actual,\r\n                    proj_score_opp_optimal,\r\n                    opp_roster;\r\n\r\n                if (week >= state.week) {\r\n                    proj_fp = league.settings.best_ball === 1\r\n                        ? lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.proj_score_optimal\r\n                        : lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.proj_score_actual\r\n\r\n                    proj_fp_opp = league.settings.best_ball === 1\r\n                        ? lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.proj_score_optimal\r\n                        : lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.proj_score_actual\r\n\r\n                    matchup_user = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.matchup;\r\n                    matchup_opp = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.matchup;\r\n                    lineup_check_user = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.lineup_check;\r\n                    lineup_check_opp = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.lineup_check;\r\n                    optimal_lineup = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.optimal_lineup;\r\n                    optimal_lineup_opp = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.optimal_lineup;\r\n                    players_projections = {\r\n                        ...lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.players_projections,\r\n                        ...lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.players_projections\r\n                    }\r\n                    proj_score_user_optimal = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.proj_score_optimal;\r\n                    proj_score_user_actual = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_user?.proj_score_actual;\r\n                    proj_score_opp_optimal = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.proj_score_optimal;\r\n                    proj_score_opp_actual = lineupChecks[week]?.[hash]?.[league.league_id]?.lc_opp?.proj_score_actual;\r\n\r\n                    opp_roster = league.rosters.find(r => r.roster_id === matchup_opp?.roster_id)\r\n\r\n                } else {\r\n                    proj_fp = league.settings.best_ball === 1\r\n                        ? lineupChecks[week]?.[league.league_id]?.lc_user?.proj_score_optimal\r\n                        : lineupChecks[week]?.[league.league_id]?.lc_user?.proj_score_actual\r\n\r\n                    proj_fp_opp = league.settings.best_ball === 1\r\n                        ? lineupChecks[week]?.[league.league_id]?.lc_opp?.proj_score_optimal\r\n                        : lineupChecks[week]?.[league.league_id]?.lc_opp?.proj_score_actual\r\n\r\n                }\r\n\r\n                const proj_median = lineupChecks[week]?.[hash]?.[league.league_id]?.proj_median\r\n\r\n                return {\r\n                    id: league.league_id,\r\n                    list: [\r\n                        {\r\n                            text: league.name,\r\n                            colSpan: 3,\r\n                            className: 'left',\r\n                            image: {\r\n                                src: league.avatar,\r\n                                alt: 'league avatar',\r\n                                type: 'league'\r\n                            }\r\n                        },\r\n                        {\r\n                            text: <p\r\n                                className=\"stat check\"\r\n                                style={getTrendColor(((proj_fp - proj_fp_opp) / Math.max(proj_fp, proj_fp_opp)), .001)}\r\n                            >\r\n                                {proj_fp?.toFixed(1)}\r\n                            </p>,\r\n                            colSpan: 1\r\n                        },\r\n                        {\r\n                            text: <div className=\"flex\">\r\n                                <p\r\n                                    className=\"stat check\"\r\n                                    style={getTrendColor(((proj_fp - proj_fp_opp) / Math.max(proj_fp, proj_fp_opp)), .001)}\r\n                                >\r\n                                    {proj_fp_opp?.toFixed(1)}\r\n                                </p>\r\n                                {\r\n                                    parseFloat(proj_median)\r\n                                        ? <em><p\r\n                                            className=\"stat check\"\r\n                                            style={getTrendColor(((proj_fp - proj_median) / Math.max(proj_fp, proj_median)), .001)}\r\n                                        >\r\n                                           {proj_median?.toFixed(1)}\r\n                                        </p></em>\r\n                                        : null\r\n                                }\r\n                            </div>,\r\n                            colSpan: 2\r\n                        }\r\n                    ],\r\n                    secondary_table: secondaryTable({\r\n                        league,\r\n                        matchup_user,\r\n                        matchup_opp,\r\n                        lineup_check: lineup_check_user,\r\n                        lineup_check_opp,\r\n                        optimal_lineup,\r\n                        optimal_lineup_opp,\r\n                        players_projections,\r\n                        proj_score_user_actual,\r\n                        proj_score_user_optimal,\r\n                        proj_score_opp_actual,\r\n                        proj_score_opp_optimal,\r\n                        opp_username: opp_roster?.username || 'Orphan',\r\n                        opp_avatar: opp_roster?.avatar,\r\n                        proj_median\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return <>\r\n        <div className=\"secondary nav\">\r\n            <button\r\n                className={secondaryContent3 === 'Starters' ? 'active click' : 'click'}\r\n                onClick={() => dispatch(setStateLineups({ secondaryContent3: 'Starters' }))}\r\n            >\r\n                Starters\r\n            </button>\r\n            <button\r\n                className={secondaryContent3 === 'Bench' ? 'active click' : 'click'}\r\n                onClick={() => dispatch(setStateLineups({ secondaryContent3: 'Bench' }))}\r\n            >\r\n                Bench\r\n            </button>\r\n            <button\r\n                className={secondaryContent3 === 'Opp Starters' ? 'active click' : 'click'}\r\n                onClick={() => dispatch(setStateLineups({ secondaryContent3: 'Opp Starters' }))}\r\n            >\r\n                Opp Starters\r\n            </button>\r\n            <button\r\n                className={secondaryContent3 === 'Opp Bench' ? 'active click' : 'click'}\r\n                onClick={() => dispatch(setStateLineups({ secondaryContent3: 'Opp Bench' }))}\r\n            >\r\n                Opp Bench\r\n            </button>\r\n        </div>\r\n        {\r\n            secondaryContent3 === 'Starters'\r\n                ? <TableMain\r\n                    type={'secondary lineup'}\r\n                    headers={getGroupHeader('Starters')}\r\n                    body={getGroupBody(start)}\r\n                    page={page2_start}\r\n                    setPage={(value) => dispatch(setStateLineups({ page2_start: value }))}\r\n                    itemActive={itemActive3}\r\n                    setItemActive={(value) => dispatch(setStateLineups({ itemActive3: value }))}\r\n                />\r\n                : secondaryContent3 === 'Bench'\r\n                    ? <TableMain\r\n                        type={'secondary lineup'}\r\n                        headers={getGroupHeader('Bench')}\r\n                        body={getGroupBody(bench)}\r\n                        page={page2_bench}\r\n                        setPage={(value) => dispatch(setStateLineups({ page2_bench: value }))}\r\n                        itemActive={itemActive3}\r\n                        setItemActive={(value) => dispatch(setStateLineups({ itemActive3: value }))}\r\n                    />\r\n                    : secondaryContent3 === 'Opp Starters'\r\n                        ? <TableMain\r\n                            type={'secondary subs'}\r\n                            headers={getGroupHeader('Opp Starters')}\r\n                            body={getGroupBody(start_opp)}\r\n                            page={page2_start_opp}\r\n                            setPage={(value) => dispatch(setStateLineups({ page2_start_opp: value }))}\r\n                            itemActive={itemActive3}\r\n                            setItemActive={(value) => dispatch(setStateLineups({ itemActive3: value }))}\r\n                        />\r\n                        : secondaryContent3 === 'Opp Bench'\r\n                            ? <TableMain\r\n                                type={'secondary subs'}\r\n                                headers={getGroupHeader('Opp Bench')}\r\n                                body={getGroupBody(bench_opp)}\r\n                                page={page2_bench_opp}\r\n                                setPage={(value) => dispatch(setStateLineups({ page2_bench_opp: value }))}\r\n                                itemActive={itemActive3}\r\n                                setItemActive={(value) => dispatch(setStateLineups({ itemActive3: value }))}\r\n                            />\r\n                            : null\r\n        }\r\n    </>\r\n}\r\n\r\nexport default PlayerStartBench;","import LineupCheck from \"./LineupCheck\";\r\nimport PlayerStartBench from \"./PlayerStartBench\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst Lineups2 = ({secondaryTable, ...props }) => {\r\n    const { primaryContent } = useSelector(state => state.lineups);\r\n\r\n    return primaryContent === 'Lineup Check'\r\n        ? <LineupCheck {...props} />\r\n        : <PlayerStartBench {...props} secondaryTable={secondaryTable} />\r\n}\r\n\r\nexport default Lineups2;","import LineupCheck from './LineupCheck';\r\n\r\nconst Lineups3 = ({...props}) => {\r\n\r\n    return <LineupCheck {...props} />\r\n}\r\n\r\nexport default Lineups3;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterLeagues } from \"../../COMMON/services/helpers/filterLeagues\";\r\nimport { setStateLineups } from \"../redux/actions\";\r\n\r\nconst RecordsHeader = () => {\r\n    const dispatch = useDispatch();\r\n    const { state } = useSelector(state => state.common);\r\n    const { leagues, type1, type2} = useSelector(state => state.user);\r\n    const { includeTaxi, lineupChecks, week, primaryContent} = useSelector(state => state.lineups);\r\n\r\n    const hash = `${includeTaxi}-${true}`\r\n\r\n    const projectedRecord = week >= state.week\r\n        ? filterLeagues((leagues || []), type1, type2)\r\n            .reduce((acc, cur) => {\r\n                const lc_league = lineupChecks[week]?.[hash]?.[cur.league_id]\r\n\r\n                let proj_score, proj_score_opp;\r\n\r\n                if (cur.settings.best_ball === 1) {\r\n                    proj_score = parseFloat(lc_league?.lc_user?.[`proj_score_optimal`]);\r\n                    proj_score_opp = parseFloat(lc_league?.lc_opp?.[`proj_score_optimal`]);\r\n                } else {\r\n                    proj_score = parseFloat(lc_league?.lc_user?.[`proj_score_actual`]);\r\n                    proj_score_opp = parseFloat(lc_league?.lc_opp?.[`proj_score_actual`]);\r\n                }\r\n\r\n                let wins = (lc_league?.win || 0) + (lc_league?.median_win || 0)\r\n                let losses = (lc_league?.loss || 0) + (lc_league?.median_loss || 0)\r\n                let ties = lc_league?.tie || 0\r\n\r\n\r\n\r\n                return {\r\n                    wins: acc.wins + wins,\r\n                    losses: acc.losses + losses,\r\n                    ties: acc.ties + ties,\r\n                    fpts: acc.fpts + (proj_score || 0),\r\n                    fpts_against: acc.fpts_against + (proj_score_opp || 0),\r\n                }\r\n            }, {\r\n                wins: 0,\r\n                losses: 0,\r\n                ties: 0,\r\n                fpts: 0,\r\n                fpts_against: 0\r\n            })\r\n        : filterLeagues((leagues || []), type1, type2)\r\n            .reduce((acc, cur) => {\r\n                const score = lineupChecks[week]?.[cur.league_id]?.lc_user?.matchup?.points || 0;\r\n                const score_opp = lineupChecks[week]?.[cur.league_id]?.lc_opp?.matchup?.points || 0;\r\n\r\n                let wins = (lineupChecks[week]?.[cur.league_id]?.win || 0) + (lineupChecks[week]?.[cur.league_id]?.median_win || 0);\r\n                let losses = (lineupChecks[week]?.[cur.league_id]?.loss || 0) + (lineupChecks[week]?.[cur.league_id]?.median_loss || 0);\r\n                let ties = lineupChecks[week]?.[cur.league_id]?.tie || 0\r\n\r\n\r\n                return {\r\n                    wins: acc.wins + wins,\r\n                    losses: acc.losses + losses,\r\n                    ties: acc.ties + ties,\r\n                    fpts: acc.fpts + score,\r\n                    fpts_against: acc.fpts_against + score_opp,\r\n                }\r\n            }, {\r\n                wins: 0,\r\n                losses: 0,\r\n                ties: 0,\r\n                fpts: 0,\r\n                fpts_against: 0\r\n            })\r\n\r\n    return <>\r\n        <h1>\r\n            Week <select\r\n                value={week}\r\n                onChange={(e) => dispatch(setStateLineups({ week: e.target.value }))}\r\n                className=\"active click\"\r\n            >\r\n                {\r\n                    Array.from(Array(18).keys()).map(key =>\r\n                        <option key={key + 1}>{key + 1}</option>\r\n                    )\r\n                }\r\n            </select>\r\n        </h1>\r\n        <h2>\r\n            <select\r\n                value={primaryContent}\r\n                onChange={(e) => dispatch(setStateLineups({ primaryContent: e.target.value }))}\r\n                className=\"active click\"\r\n            >\r\n                <option>Lineup Check</option>\r\n                <option>Starters/Bench</option>\r\n            </select>\r\n        </h2>\r\n        <h2>\r\n            <table className=\"summary\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th colSpan={2} >\r\n                            <span className=\"font2 wr\">\r\n                                {\r\n                                    week < state.week ? 'RESULT' : 'PROJECTION'\r\n                                }\r\n                            </span>\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Record</th>\r\n                        <td>{projectedRecord?.wins}-{projectedRecord?.losses}{projectedRecord?.ties > 0 && `-${projectedRecord.ties}`}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Points For</th>\r\n                        <td>{projectedRecord?.fpts?.toLocaleString(\"en-US\", { minimumFractionDigits: 1, maximumFractionDigits: 1 })}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Points Against</th>\r\n                        <td>{projectedRecord?.fpts_against?.toLocaleString(\"en-US\", { minimumFractionDigits: 1, maximumFractionDigits: 1 })}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </h2>\r\n    </>\r\n}\r\n\r\nexport default RecordsHeader;","import Lineups1 from \"./components/Lineups1\";\r\nimport Lineups2 from \"./components/Lineups2\";\r\nimport Lineups3 from \"./components/Lineups3\";\r\nimport RecordsHeader from \"./components/RecordsHeader\";\r\nimport './components/Lineups.css';\r\n\r\nconst Lineups = () => {\r\n\r\n    return <>\r\n        <RecordsHeader />\r\n        <Lineups1\r\n            secondaryTable={\r\n                (props) => {\r\n                    return <Lineups2\r\n                        {...props}\r\n                        secondaryTable={\r\n                            (props2) => {\r\n                                return <Lineups3\r\n                                    {...props2}\r\n                                />\r\n                            }\r\n                        }\r\n                    />\r\n                }\r\n            }\r\n        />\r\n    </>;\r\n}\r\n\r\nexport default Lineups;","import { getUserRoster } from \"../../COMMON/services/helpers/getUserRoster\"\r\n\r\nexport const setStatePlayers = (state_obj, tab) => ({\r\n    type: `SET_STATE_PLAYERS`,\r\n    payload: state_obj\r\n})\r\n\r\nexport const setStateUser = (state_obj, tab) => ({\r\n    type: `SET_STATE_USER`,\r\n    payload: state_obj\r\n})\r\n\r\n\r\nexport const fetchPlayerShares = (leagues, user_id) => async (dispatch) => {\r\n    const players_dict = {}\r\n\r\n    leagues\r\n        .forEach(league => {\r\n            const userRoster = getUserRoster(league.rosters, user_id)\r\n            const season = league.season;\r\n\r\n            league.rosters\r\n                ?.forEach(roster => {\r\n                    roster.players\r\n                        ?.forEach(player_id => {\r\n                            let player_leagues = players_dict[player_id] || {\r\n                                id: player_id,\r\n                                leagues_owned: [],\r\n                                leagues_taken: []\r\n                            }\r\n\r\n                            if (roster.user_id === userRoster?.user_id) {\r\n                                player_leagues.leagues_owned.push(league)\r\n                            } else {\r\n                                player_leagues.leagues_taken.push({\r\n                                    ...league,\r\n                                    lmRoster: roster\r\n                                })\r\n                            }\r\n\r\n                            players_dict[player_id] = player_leagues\r\n                        })\r\n\r\n\r\n                    roster.draft_picks?.forEach(pick => {\r\n                        const pick_text = `${pick.season}_${pick.round}_${pick.order?.toLocaleString(\"en-US\", { minimumIntegerDigits: 2 })}`\r\n\r\n                        let pick_leagues = players_dict[pick_text] || {\r\n                            id: pick_text,\r\n                            leagues_owned: [],\r\n                            leagues_taken: []\r\n                        }\r\n\r\n                        if (pick.season === parseInt(season) && parseInt(pick.order)) {\r\n                            if (roster.user_id === userRoster?.user_id) {\r\n                                pick_leagues.leagues_owned.push({\r\n                                    ...league\r\n                                })\r\n                            } else {\r\n                                pick_leagues.leagues_taken.push({\r\n                                    ...league,\r\n                                    lmRoster: roster,\r\n                                })\r\n                            }\r\n\r\n                            players_dict[pick_text] = pick_leagues\r\n                        }\r\n\r\n                    })\r\n\r\n                })\r\n        })\r\n\r\n\r\n    const playerShares = Object.values(players_dict).map(player => {\r\n        return {\r\n            ...player,\r\n            leagues_available: player.id.includes('_') ? [] : leagues\r\n                .filter(l => !l.rosters?.find(r => r.players?.includes(player.id)))\r\n        }\r\n    })\r\n\r\n    console.log({ playerShares })\r\n    dispatch(setStateUser({ userPlayerShares: playerShares }))\r\n}"],"names":["filterLeagues","leagues","type1","type2","filter","league","include_1","include_2","settings","type","best_ball","getUserRoster","rosters","user_id","find","r","_r$co_owners","co_owners","co","setStateLineups","state_obj","tab","payload","fetchMatchups","async","dispatch","getState","state","user","display_week","common","week","all_matchups_to_update","status","forEach","league_matchups_to_update","start_week","Object","keys","key","startsWith","wins","losses","ties","key_week","parseInt","split","_league$settings$matc","playoff_week_start","Date","getDay","getHours","matchups_final","includes","toString","push","current_matchups_update","getTime","schedule","g","gameSecondsRemaining","_league$key2","matchup","matching_roster","roster_id","players","player_id","_matchup$players","length","name","league_id","weeks_to_update","Array","from","Set","console","log","axios","post","data","err","message","matchups","getColumnValue","header","lineup_check","opt_proj","act_proj","opp_opt_proj","opp_act_proj","proj_median","projections","opp_roster","_league$userRoster$ta","_league$userRoster$ta2","_league$userRoster$ta3","text","colSpan","_jsx","className","style","getTrendColor","userRoster","rank","children","toFixed","matchup_id","x","notInOptimal","earlyInFlex","lateNotInFlex","taxi_slots","taxi","nonQBinSF","user_active_players","p","_league$userRoster$ta4","_league$userRoster$re","reserve","roster_positions","_league$userRoster","_league$userRoster$re2","_league$userRoster$pl","open_ir","reserve_slots","eligible_ir","_league$userRoster$re3","_league$userRoster$ta5","_projections$week$pla","_projections$week$pla2","_projections$week$pla3","_projections$week$pla4","reserve_allow_sus","injury_status","reserve_allow_doubtful","reserve_allow_out","Math","min","_projections$week$x$c","current_player","_projections$week$x$c2","_projections$week$x$c3","_projections$week$x$c4","_projections$week$x$c5","_projections$week$x$c6","_projections$week$x$c7","_projections$week$x$c8","_projections$week$x$c9","_projections$week$x$c10","_projections$week$x$c11","_projections$week$x$c12","_projections$week$x$c13","_projections$week$x$c14","_projections$week$x$c15","getColumnValuePrev","column","matchup_user","matchup_opp","act_median","lineupChecks","_lineupChecks$week","_lineupChecks$week$le","_lineupChecks$week$le2","_lineupChecks$week2","_lineupChecks$week2$l","_lineupChecks$week2$l2","_matchup_user$players","_matchup_user$players2","_matchup_user$players3","_matchup_user$points","_matchup_opp$points","proj_score_user_actual","lc_user","proj_score_actual","proj_score_opp_actual","lc_opp","bench_points","starters","reduce","acc","cur","players_points","total_points","points","_ref","includeTaxi","setIncludeTaxi","_jsxs","onClick","src","alt","TeamFilter","filterTeam","setFilterTeam","concat","onError","e","target","onChange","value","map","team","props","IncludeTaxiFilter","_filterLeagues","_filterLeagues$filter","_lineupChecks$week24","secondaryTable","useDispatch","useSelector","column1","column2","column3","column4","column1_prev","column2_prev","column3_prev","column4_prev","itemActive","page","searched","playerLineupDict","primaryContent","sortBy","filters","lineups","hash","columnOptions","lineups_headers","rowSpan","lineups_body","l","id","_lineupChecks$week$ha","_lineupChecks$week$ha2","_lineupChecks$week$ha3","_lineupChecks$week2$h","_lineupChecks$week2$h2","_lineupChecks$week2$h3","_lineupChecks$week3","_lineupChecks$week3$h","_lineupChecks$week3$h2","_lineupChecks$week3$h3","_lineupChecks$week4","_lineupChecks$week4$h","_lineupChecks$week4$h2","_lineupChecks$week4$h3","_lineupChecks$week5","_lineupChecks$week5$h","_lineupChecks$week5$h2","_lineupChecks$week5$h3","_lineupChecks$week6","_lineupChecks$week6$h","_lineupChecks$week6$h2","_lineupChecks$week6$h3","_lineupChecks$week7","_lineupChecks$week7$h","_lineupChecks$week7$h2","_lineupChecks$week7$h3","_lineupChecks$week8","_lineupChecks$week8$h","_lineupChecks$week8$h2","_lineupChecks$week8$h3","_lineupChecks$week9","_lineupChecks$week9$h","_lineupChecks$week9$h2","_lineupChecks$week9$h3","_lineupChecks$week10","_lineupChecks$week10$","_lineupChecks$week10$2","_lineupChecks$week10$3","_lineupChecks$week11","_lineupChecks$week11$","_lineupChecks$week11$2","_lineupChecks$week11$3","_lineupChecks$week12","_lineupChecks$week12$","_lineupChecks$week12$2","_lineupChecks$week12$3","_lineupChecks$week13","_lineupChecks$week13$","_lineupChecks$week13$2","_lineupChecks$week14","_lineupChecks$week14$","_lineupChecks$week14$2","_lineupChecks$week15","_lineupChecks$week15$","_lineupChecks$week15$2","_lineupChecks$week16","_lineupChecks$week16$","_lineupChecks$week16$2","_lineupChecks$week17","_lineupChecks$week17$","_lineupChecks$week17$2","_lineupChecks$week18","_lineupChecks$week18$","_lineupChecks$week18$2","_lineupChecks$week19","_lineupChecks$week19$","_lineupChecks$week19$2","lineup_check_user","optimal_lineup","proj_score_user_optimal","proj_score_optimal","lineup_check_opp","optimal_lineup_opp","proj_score_opp_optimal","players_projections","search","image","avatar","list","_Fragment","median_win","median_loss","secondary_table","opp_username","username","opp_avatar","_lineupChecks$week20","_lineupChecks$week21","_lineupChecks$week21$","_lc_league$lc_user","_lc_league$lc_opp","_lineupChecks$week22","_lineupChecks$week22$","_lineupChecks$week22$2","_lineupChecks$week23","_lineupChecks$week23$","_lineupChecks$week23$2","_lc_league$lc_user2","_lc_league$lc_opp2","lc_league","win","loss","tie","LoadingIcon","TableMain","headers","body","setPage","setItemActive","setSearched","options1","FilterIcons","_Object$keys","_Object$keys$filter","_Object$keys$filter$s","allplayers","players_headers","players_body","_allplayers$player_id","_allplayers$player_id2","_allplayers$player_id3","_allplayers$player_id4","_allplayers$parseInt","position","slice","draftClass","league_season","years_exp","sort","a","b","_playerLineupDict$pla","_playerLineupDict$pla2","_playerLineupDict$pla3","_playerLineupDict$pla4","_allplayers$player_id5","_allplayers$player_id6","start","bench","start_opp","bench_opp","full_name","getRecordDict","week_to_fetch","includeLocked","rankings","league_ids","getPlayerScore","stats_array","scoring_settings","total","arguments","undefined","total_breakdown","stats_game","stats","matchTeam","SFO","JAC","KCC","TBB","GBP","NEP","LVR","NOS","getLineupCheck","stateAllPlayers","weeklyRankings","_matchup$players$filt","returnSuboptimal","position_map","position_abbrev","starting_slots","roster","_schedule$find","_weeklyRankings$playe","_matchup$starters","_weeklyRankings$playe2","_weeklyRankings$playe3","_matchup$starters2","playing","m","_stateAllPlayers$play2","t","_stateAllPlayers$play","kickoff","_stateAllPlayers$play3","prevRank","getOptimalLineup","player_ranks_filtered","slot","index","_players$find","_matchup$starters3","slot_options","_stateAllPlayers$x$id","some","_stateAllPlayers$x$id2","_stateAllPlayers$x$id3","fantasy_positions","optimal_player","_matchup$starters4","_slot_options$","player","findSuboptimal","_players$find2","_matchup$players2","_matchup$starters6","_matchup$starters7","_stateAllPlayers$inde","_stateAllPlayers$matc","cur_id","isInOptimal","_matchup$starters5","gametime","day","hour","timeslot","parseFloat","_stateAllPlayers$x","starter_index","_players$find3","_stateAllPlayers$x2","_stateAllPlayers$cur_","alt_kickoff","alt_gametime","alt_day","alt_hour","_players$find4","_stateAllPlayers$x3","_stateAllPlayers$cur_2","slot_index","fromEntries","optimalPlayers","_matchup$starters8","projectedRecordWeek","lineupChecks_week","_lc_user$matchup","_lc_opp$matchup","_lc_user$matchup2","_lc_opp$matchup2","league_average_match","_league","standings","pts_rank","findIndex","getLineupChecksPrevWeek","_league$rosters$find","_league2","_league2$map","recordType","lc","_standings","_standings2","median_points1","median_points2","s","opp","s2","pts_rank_lm","median_win_lm","median_loss_lm","fp","fpa","getLineupChecksWeek","useGetLineupChecks","syncing","isLoadingMatchups","isLoadingProjectionDict","itemActive2","secondaryContent1","secondaryContent2","useEffect","player_lineup_dict","_matchup_opp$players","user_starters","ol","opp_starters","fetchCommon","weeks","_lineupChecks$key","getProjectedRecords","Worker","result","_lineupChecks$result$","_lineupChecks$week$ke","edited","_lineupChecks$week7$k","_lineupChecks$week$ke2","_lineupChecks$week$ke3","_lineupChecks$week$ke4","_lineupChecks$week25","_lineupChecks$week$ke5","_lineupChecks$week$ke6","_lineupChecks$week26","_lineupChecks$week27","_lineupChecks$week27$","setStateUser","lc_weeks","season_totals_all","league_season_totals","roster_season_totals","_lineupChecks$cur","_lineupChecks$cur$tru","_lineupChecks$cur$tru2","_lineupChecks$cur$tru3","cur_roster","fpts","fpts_decimal","fpts_against","fpts_against_decimal","totals","secondaryContent","LineupChecks","StartersBench","_lineup_check$find","_suboptimal_options","_suboptimal_options$s","_lineup_check$find3","_lineup_check$find4","_lineup_check$find5","_lineup_check$find6","_lineup_check$find7","_lineup_check$find8","_lineup_check$find9","_ref4","_ref4$sort","_lineup_check$find10","_matchup_opp$starters","oppRoster","active_player","opt_points","opp_opt_points","handleSync","syncLeague","_updated_league$data$","updated_league","error","getInjuryAbbrev","lineup_headers","lineup_body","_lineup_check$find2","_allplayers$slot$curr","_projections$week","_projections$week$slo","_allplayers$slot$curr2","_schedule$week","_schedule$week$find","_schedule$week$find$t","_schedule$week$find$t2","_rankings$slot$curren","_players_projections$","color","_allplayers$slot$curr3","_allplayers$slot$curr4","_allplayers$ol$player","_ol$player","_projections$week2","_projections$week2$ol","_allplayers$ol$player2","_schedule$state$week","_schedule$state$week$","_schedule$state$week$2","_schedule$state$week$3","_rankings$ol$player","_allplayers$ol$player3","_allplayers$ol$player4","suboptimal_options","_ref2","subs_headers","subs_body","opt_starter","_allplayers$opt_start","_allplayers$opt_start2","_projections$week3","_projections$week3$op","_allplayers$opt_start3","_schedule$state$week2","_schedule$state$week3","_schedule$state$week4","_schedule$state$week5","_ref3","_rankings$opt_starter","_allplayers$opt_start4","_allplayers$opt_start5","_rankings$a","_rankings$b","so","_allplayers$so","_allplayers$active_pl","_allplayers$so2","_projections$week4","_projections$week4$so","_allplayers$so3","_schedule$state$week6","_schedule$state$week7","_schedule$state$week8","_schedule$state$week9","_rankings$so","rank_ecr","_allplayers$so4","_allplayers$so5","opp_starter","_lineup_check_opp$ind","_allplayers","_projections$week5","_projections$week6","_allplayers2","_schedule$state$week10","_schedule$state$week11","_schedule$state$week12","_schedule$state$week13","_matchup_opp$players_","_rankings","_allplayers$opp_start","_allplayers$opp_start2","_lineup_check_opp$ind2","_allplayers$opp_start3","_projections$week7","_projections$week7$op","_allplayers$opp_start4","_schedule$state$week14","_schedule$state$week15","_schedule$state$week16","_schedule$state$week17","_matchup_opp$players_2","_rankings$opp_starter","_allplayers$opp_start5","_allplayers$opp_start6","disabled","Roster","previous","page2_start","page2_bench","page2_start_opp","page2_bench_opp","secondaryContent3","itemActive3","getGroupHeader","getGroupBody","_lineupChecks$week21$2","_proj_fp","_proj_fp_opp","_opp_roster","_opp_roster2","proj_fp","proj_fp_opp","_lineupChecks$week13$3","_lineupChecks$week14$3","_lineupChecks$week15$3","_lineupChecks$week16$3","_lineupChecks$week20$","_lineupChecks$week20$2","_matchup_opp","max","LineupCheck","PlayerStartBench","RecordsHeader","_projectedRecord$fpts","_projectedRecord$fpts2","projectedRecord","proj_score","proj_score_opp","_lineupChecks$week2$c","_lineupChecks$week2$c2","_lineupChecks$week2$c3","_lineupChecks$week3$c","_lineupChecks$week3$c2","_lineupChecks$week3$c3","_lineupChecks$week4$c","_lineupChecks$week5$c","_lineupChecks$week6$c","_lineupChecks$week7$c","_lineupChecks$week8$c","score","score_opp","toLocaleString","minimumFractionDigits","maximumFractionDigits","Lineups","Lineups1","Lineups2","props2","Lineups3","setStatePlayers","fetchPlayerShares","players_dict","_league$rosters","season","_roster$players","_roster$draft_picks","player_leagues","leagues_owned","leagues_taken","lmRoster","draft_picks","pick","_pick$order","pick_text","round","order","minimumIntegerDigits","pick_leagues","playerShares","values","leagues_available","_l$rosters","_r$players","userPlayerShares"],"sourceRoot":""}